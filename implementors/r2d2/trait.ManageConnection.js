(function() {var implementors = {};
implementors["prisma_query"] = [{text:"impl <a class=\"trait\" href=\"https://docs.rs/r2d2/0.8/r2d2/trait.ManageConnection.html\" title=\"trait r2d2::ManageConnection\">ManageConnection</a> for <a class=\"struct\" href=\"prisma_query/pool/struct.PrismaConnectionManager.html\" title=\"struct prisma_query::pool::PrismaConnectionManager\">PrismaConnectionManager</a>&lt;<a class=\"struct\" href=\"http://outersky.github.io/r2d2-mysql/doc/v0.2.0/r2d2_mysql/r2d2_mysql/pool/struct.MysqlConnectionManager.html\" title=\"struct r2d2_mysql::pool::MysqlConnectionManager\">MysqlConnectionManager</a>&gt;",synthetic:false,types:["prisma_query::pool::PrismaConnectionManager"]},{text:"impl <a class=\"trait\" href=\"https://docs.rs/r2d2/0.8/r2d2/trait.ManageConnection.html\" title=\"trait r2d2::ManageConnection\">ManageConnection</a> for <a class=\"struct\" href=\"prisma_query/pool/struct.PrismaConnectionManager.html\" title=\"struct prisma_query::pool::PrismaConnectionManager\">PrismaConnectionManager</a>&lt;<a class=\"struct\" href=\"https://docs.rs/r2d2_postgres/0.15.0-rc.1/r2d2_postgres/struct.PostgresConnectionManager.html\" title=\"struct r2d2_postgres::PostgresConnectionManager\">PostgresConnectionManager</a>&lt;<a class=\"struct\" href=\"https://docs.rs/tokio-postgres-native-tls/0.1.0-rc.1/tokio_postgres_native_tls/struct.MakeTlsConnector.html\" title=\"struct tokio_postgres_native_tls::MakeTlsConnector\">MakeTlsConnector</a>&gt;&gt;",synthetic:false,types:["prisma_query::pool::PrismaConnectionManager"]},{text:"impl <a class=\"trait\" href=\"https://docs.rs/r2d2/0.8/r2d2/trait.ManageConnection.html\" title=\"trait r2d2::ManageConnection\">ManageConnection</a> for <a class=\"struct\" href=\"prisma_query/pool/struct.PrismaConnectionManager.html\" title=\"struct prisma_query::pool::PrismaConnectionManager\">PrismaConnectionManager</a>&lt;SqliteConnectionManager&gt;",synthetic:false,types:["prisma_query::pool::PrismaConnectionManager"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
