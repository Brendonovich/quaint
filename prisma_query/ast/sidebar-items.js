initSidebarItems({"enum":[["Compare","For modeling comparison expression"],["ConditionTree","Tree structures and leaves for condition building."],["DatabaseValue","A value we can compare and use in database queries."],["Expression","A database expression."],["Join","A representation of a `JOIN` statement."],["Order","The ordering direction"],["ParameterizedValue","A value we must parameterize for the prepared statement."],["Query","A database query"],["TableType",""]],"fn":[["asterisk","A quick alias to create an asterisk to a table."],["count","Count of the underlying table where the given expression is not null."],["distinct","Select distinct rows by given expressions."],["row_number","A number from 1 to n in specified order"]],"struct":[["Column","A column definition."],["Count",""],["Delete","A builder for a `DELETE` statement."],["Distinct",""],["Function","A database function definition"],["Insert","A builder for an `INSERT` statement."],["JoinData","The `JOIN` table and conditions."],["Ordering","A list of definitions for the `ORDER BY` statement"],["Over",""],["Row","A collection of values surrounded by parentheses."],["RowNumber",""],["Select","A builder for a `SELECT` statement."],["Table","A table definition"],["Update","A builder for an `UPDATE` statement."]],"trait":[["Aliasable","An object that can be aliased."],["Comparable","An item that can be compared against other values in the database."],["Conjuctive","`AND`, `OR` and `NOT` conjuctive implementations."],["IntoOrderDefinition","Convert the value into an order definition with order item and direction"],["Joinable","An item that can be joined."],["Orderable","An item that can be used in the `ORDER BY` statement"]],"type":[["OrderDefinition",""]]});