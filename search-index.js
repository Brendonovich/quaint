var searchIndex={};
searchIndex["quaint"] = {"doc":"quaint","i":[[0,"ast","quaint","An abstract syntax tree for SQL queries.",null,null],[3,"Column","quaint::ast","A column definition.",null,null],[12,"name","","",0,null],[3,"Delete","","A builder for a `DELETE` statement.",null,null],[3,"AggregateToString","","An aggregate function that concatenates strings from a…",null,null],[3,"Average","","",null,null],[3,"Count","","Returns the number of rows that matches a specified…",null,null],[3,"RowNumber","","A window function that assigns a sequential integer number…",null,null],[3,"Sum","","",null,null],[3,"Function","","A database function definition",null,null],[3,"Grouping","","A list of definitions for the `GROUP BY` statement",null,null],[12,"0","","",1,null],[3,"Insert","","A builder for an `INSERT` statement.",null,null],[3,"SingleRowInsert","","A builder for an `INSERT` statement for a single row.",null,null],[3,"MultiRowInsert","","A builder for an `INSERT` statement for multiple rows.",null,null],[3,"JoinData","","The `JOIN` table and conditions.",null,null],[3,"Ordering","","A list of definitions for the `ORDER BY` statement",null,null],[12,"0","","",2,null],[3,"Over","","Determines the partitioning and ordering of a rowset…",null,null],[3,"Row","","A collection of values surrounded by parentheses.",null,null],[12,"values","","",3,null],[3,"Select","","A builder for a `SELECT` statement.",null,null],[3,"Table","","A table definition",null,null],[12,"typ","","",4,null],[12,"alias","","",4,null],[12,"database","","",4,null],[3,"Union","","A builder for a `UNION`s over multiple `SELECT` statements.",null,null],[3,"Update","","A builder for an `UPDATE` statement.",null,null],[3,"Values","","An in-memory temporary table. Can be used in some of the…",null,null],[4,"Compare","","For modeling comparison expression",null,null],[13,"Equals","","`left = right`",5,null],[13,"NotEquals","","`left <> right`",5,null],[13,"LessThan","","`left < right`",5,null],[13,"LessThanOrEquals","","`left <= right`",5,null],[13,"GreaterThan","","`left > right`",5,null],[13,"GreaterThanOrEquals","","`left >= right`",5,null],[13,"In","","`left IN (..)`",5,null],[13,"NotIn","","`left NOT IN (..)`",5,null],[13,"Like","","`left LIKE %..%`",5,null],[13,"NotLike","","`left NOT LIKE %..%`",5,null],[13,"BeginsWith","","`left LIKE ..%`",5,null],[13,"NotBeginsWith","","`left NOT LIKE ..%`",5,null],[13,"EndsInto","","`left LIKE %..`",5,null],[13,"NotEndsInto","","`left NOT LIKE %..`",5,null],[13,"Null","","`value IS NULL`",5,null],[13,"NotNull","","`value IS NOT NULL`",5,null],[13,"Between","","`value` BETWEEN `left` AND `right`",5,null],[13,"NotBetween","","`value` NOT BETWEEN `left` AND `right`",5,null],[4,"ConditionTree","","Tree structures and leaves for condition building.",null,null],[13,"And","","`(left_expression AND right_expression)`",6,null],[13,"Or","","`(left_expression OR right_expression)`",6,null],[13,"Not","","`(NOT expression)`",6,null],[13,"Single","","A single expression leaf",6,null],[13,"NoCondition","","A leaf that does nothing to the condition, `1=1`",6,null],[13,"NegativeCondition","","A leaf that cancels the condition, `1=0`",6,null],[4,"Expression","","A database expression.",null,null],[13,"ConditionTree","","A tree of expressions to evaluate from the deepest value…",7,null],[13,"Compare","","A comparison expression",7,null],[13,"Value","","A single value, column, row or a nested select",7,null],[4,"OnConflict","","`INSERT` conflict resolution strategies.",null,null],[13,"DoNothing","","When a row already exists, do nothing.",8,null],[4,"Join","","A representation of a `JOIN` statement.",null,null],[13,"Inner","","Implements an `INNER JOIN` with given `JoinData`.",9,null],[13,"Left","","Implements an `LEFT JOIN` with given `JoinData`.",9,null],[13,"Right","","Implements an `RIGHT JOIN` with given `JoinData`.",9,null],[13,"Full","","Implements an `FULL JOIN` with given `JoinData`.",9,null],[4,"SqlOp","","Calculation operations in SQL queries.",null,null],[13,"Add","","",10,null],[13,"Sub","","",10,null],[13,"Mul","","",10,null],[13,"Div","","",10,null],[13,"Rem","","",10,null],[4,"Order","","The ordering direction",null,null],[13,"Asc","","Ascending",11,null],[13,"Desc","","Descending",11,null],[4,"Query","","A database query",null,null],[13,"Select","","Query for fetching data. E.g. the `SELECT` query.",12,null],[13,"Insert","","",12,null],[13,"Update","","",12,null],[13,"Delete","","",12,null],[13,"Union","","",12,null],[13,"Raw","","",12,null],[4,"TableType","","Either an identifier or a nested query.",null,null],[13,"Table","","",13,null],[13,"Query","","",13,null],[13,"Values","","",13,null],[4,"DatabaseValue","","A value we can compare and use in database queries.",null,null],[13,"Parameterized","","Anything that we must parameterize before querying",14,null],[13,"Column","","A database column",14,null],[13,"Row","","Data in a row form, e.g. (1, 2, 3)",14,null],[13,"Select","","A nested `SELECT` statement",14,null],[13,"Function","","A database function call",14,null],[13,"Asterisk","","A qualified asterisk to a table",14,null],[13,"Op","","An operation: sum, sub, mul or div.",14,null],[13,"Values","","A `VALUES` statement",14,null],[4,"ParameterizedValue","","A value we must parameterize for the prepared statement.",null,null],[13,"Null","","",15,null],[13,"Integer","","",15,null],[13,"Real","","",15,null],[13,"Text","","",15,null],[13,"Enum","","",15,null],[13,"Bytes","","",15,null],[13,"Boolean","","",15,null],[13,"Char","","",15,null],[13,"Array","","",15,null],[13,"Json","","",15,null],[13,"Uuid","","",15,null],[13,"DateTime","","",15,null],[5,"aggregate_to_string","","Aggregates the given field into a string.",null,[[["t"]],["aggregatetostring"]]],[5,"avg","","Calculates the average value of a numeric column.",null,[[["c"]],["average"]]],[5,"count","","Count of the underlying table where the given expression…",null,[[["t"]],["count"]]],[5,"row_number","","A number from 1 to n in specified order",null,[[],["rownumber"]]],[5,"sum","","Calculates the sum value of a numeric column.",null,[[["c"]],["sum"]]],[5,"asterisk","","A quick alias to create an asterisk to a table.",null,[[],["databasevalue"]]],[11,"new","","Create a column definition.",0,[[["s"]],["self"]]],[11,"table","","Include the table name in the column expression.",0,[[["t"]],["self"]]],[11,"opt_table","","Include the table name in the column expression, if table…",0,[[["option"]],["self"]]],[11,"alias","","Give the column an alias in the query.",0,[[["s"]],["self"]]],[11,"and","","An `AND` statement, is true when both sides are true.",6,[[["e"]],["conditiontree"]]],[11,"or","","An `OR` statement, is true when one side is true.",6,[[["e"]],["conditiontree"]]],[11,"not","","A `NOT` statement, is true when the expression is false.",6,[[["e"]],["conditiontree"]]],[11,"single","","A single leaf, is true when the expression is true.",6,[[["e"]],["conditiontree"]]],[11,"invert_if","","Inverts the entire condition tree if condition is met.",6,[[["bool"]],["conditiontree"]]],[11,"from_table","","Creates a new `DELETE` statement for the given table.",16,[[["t"]],["self"]]],[11,"so_that","","Adds `WHERE` conditions to the query. See Comparable for…",16,[[["t"]],["self"]]],[11,"order_by","","Define the order of the row number. Is the row order if…",17,[[["t"]],["self"]]],[11,"partition_by","","Define the partitioning of the row number",17,[[["t"]],["self"]]],[11,"alias","","Give the function an alias in the query.",18,[[["s"]],["self"]]],[11,"new","","",1,[[["groupbydefinition"],["vec",["groupbydefinition"]]],["self"]]],[11,"is_empty","","",1,[[["self"]],["bool"]]],[11,"single_into","","Creates a new single row `INSERT` statement for the given…",19,[[["t"]],["singlerowinsert"]]],[11,"multi_into","","Creates a new multi row `INSERT` statement for the given…",19,[[["i"],["t"]],["multirowinsert"]]],[11,"on_conflict","","Sets the conflict resolution strategy.",19,[[["onconflict"]],["self"]]],[11,"returning","","Sets the returned columns.",19,[[["i"]],["self"]]],[11,"value","","Adds a new value to the `INSERT` statement",20,[[["k"],["v"]],["singlerowinsert"]]],[11,"build","","Convert into a common `Insert` statement.",20,[[],["insert"]]],[11,"values","","Adds a new row to be inserted.",21,[[["v"]],["self"]]],[11,"build","","Convert into a common `Insert` statement.",21,[[],["insert"]]],[11,"new","","",2,[[["vec",["orderdefinition"]],["orderdefinition"]],["self"]]],[11,"is_empty","","",2,[[["self"]],["bool"]]],[11,"is_empty","","",22,[[["self"]],["bool"]]],[11,"is_select","","",12,[[["self"]],["bool"]]],[11,"is_insert","","",12,[[["self"]],["bool"]]],[11,"is_update","","",12,[[["self"]],["bool"]]],[11,"is_delete","","",12,[[["self"]],["bool"]]],[11,"is_union","","",12,[[["self"]],["bool"]]],[11,"new","","",3,[[],["self"]]],[11,"with_capacity","","",3,[[["usize"]],["self"]]],[11,"push","","",3,[[["t"]],["self"]]],[11,"is_empty","","",3,[[["self"]],["bool"]]],[11,"from_table","","Creates a new `SELECT` statement for the given table.",23,[[["t"]],["self"]]],[11,"value","","Selects a static value as the column.",23,[[["t"]],["self"]]],[11,"column","","Adds a column to be selected.",23,[[["t"]],["self"]]],[11,"columns","","A bulk method to select multiple values.",23,[[["t"]],["self"]]],[11,"so_that","","Adds `WHERE` conditions to the query, replacing the…",23,[[["t"]],["self"]]],[11,"and_where","","Adds an additional `WHERE` condition to the query…",23,[[["t"]],["self"]]],[11,"or_where","","Adds an additional `WHERE` condition to the query…",23,[[["t"]],["self"]]],[11,"inner_join","","Adds `INNER JOIN` clause to the query.",23,[[["j"]],["self"]]],[11,"left_join","","Adds `LEFT JOIN` clause to the query.",23,[[["j"]],["self"]]],[11,"right_join","","Adds `RIGHT JOIN` clause to the query.",23,[[["j"]],["self"]]],[11,"full_join","","Adds `FULL JOIN` clause to the query.",23,[[["j"]],["self"]]],[11,"order_by","","Adds an ordering to the `ORDER BY` section.",23,[[["t"]],["self"]]],[11,"group_by","","Adds a grouping to the `GROUP BY` section.",23,[[["t"]],["self"]]],[11,"having","","Adds group conditions to a query. Should be combined…",23,[[["t"]],["self"]]],[11,"limit","","Sets the `LIMIT` value.",23,[[["usize"]],["self"]]],[11,"offset","","Sets the `OFFSET` value.",23,[[["usize"]],["self"]]],[11,"database","","Define in which database the table is located",4,[[["t"]],["self"]]],[11,"asterisk","","A qualified asterisk to this table",4,[[],["databasevalue"]]],[11,"new","","",24,[[["select"]],["self"]]],[11,"all","","Creates a union with previous selection and the given…",24,[[["select"]],["self"]]],[11,"distinct","","Creates a union with previous selection and the given…",24,[[["select"]],["self"]]],[11,"table","","Creates the basis for an `UPDATE` statement to the given…",25,[[["t"]],["self"]]],[11,"set","","Add another column value assignment to the query",25,[[["k"],["v"]],["update"]]],[11,"so_that","","Adds `WHERE` conditions to the query. See Comparable for…",25,[[["t"]],["self"]]],[11,"is_null","","`true` if the `ParameterizedValue` is null.",15,[[["self"]],["bool"]]],[11,"is_text","","`true` if the `ParameterizedValue` is text.",15,[[["self"]],["bool"]]],[11,"as_str","","Returns a &str if the value is text, otherwise `None`.",15,[[["self"]],[["option",["str"]],["str"]]]],[11,"as_char","","Returns a char if the value is a char, otherwise `None`.",15,[[["self"]],[["option",["char"]],["char"]]]],[11,"to_string","","Returns a cloned String if the value is text, otherwise…",15,[[["self"]],[["option",["string"]],["string"]]]],[11,"into_string","","Transforms the `ParameterizedValue` to a `String` if it's…",15,[[],[["option",["string"]],["string"]]]],[11,"is_bytes","","Returns whether this value is the `Bytes` variant.",15,[[["self"]],["bool"]]],[11,"as_bytes","","Returns a bytes slice if the value is text or a byte…",15,[[["self"]],["option"]]],[11,"to_bytes","","Returns a cloned `Vec<u8>` if the value is text or a byte…",15,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"is_integer","","`true` if the `ParameterizedValue` is an integer.",15,[[["self"]],["bool"]]],[11,"as_i64","","Returns an i64 if the value is an integer, otherwise `None`.",15,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"is_real","","`true` if the `ParameterizedValue` is a real value.",15,[[["self"]],["bool"]]],[11,"as_f64","","Returns a f64 if the value is a real value and the…",15,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"as_decimal","","Returns a decimal if the value is a real value, otherwise…",15,[[["self"]],[["option",["decimal"]],["decimal"]]]],[11,"is_bool","","`true` if the `ParameterizedValue` is a boolean value.",15,[[["self"]],["bool"]]],[11,"as_bool","","Returns a bool if the value is a boolean, otherwise `None`.",15,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"is_uuid","","`true` if the `ParameterizedValue` is of UUID type.",15,[[["self"]],["bool"]]],[11,"as_uuid","","Returns an UUID if the value is of UUID type, otherwise…",15,[[["self"]],[["option",["uuid"]],["uuid"]]]],[11,"is_datetime","","`true` if the `ParameterizedValue` is a DateTime.",15,[[["self"]],["bool"]]],[11,"as_datetime","","Returns a DateTime if the value is a DateTime, otherwise…",15,[[["self"]],[["datetime",["utc"]],["option",["datetime"]]]]],[11,"is_json","","`true` if the `ParameterizedValue` is a JSON value.",15,[[["self"]],["bool"]]],[11,"as_json","","Returns a reference to a JSON Value if of Json type,…",15,[[["self"]],[["option",["value"]],["value"]]]],[11,"into_json","","Transforms to a JSON Value if of Json type, otherwise…",15,[[],[["value"],["option",["value"]]]]],[11,"into_vec","","Returns a Vec if the value is an array of T, otherwise…",15,[[],[["vec"],["option",["vec"]]]]],[11,"new","","Create a new in-memory set of values.",26,[[],["self"]]],[11,"push","","Add value to the temporary table.",26,[[["t"]],["self"]]],[11,"len","","The number of rows in the in-memory table.",26,[[["self"]],["usize"]]],[11,"is_empty","","True if has no rows.",26,[[["self"]],["bool"]]],[6,"GroupByDefinition","","",null,null],[6,"OrderDefinition","","",null,null],[8,"Comparable","","An item that can be compared against other values in the…",null,null],[10,"equals","","Tests if both sides are the same value.",27,[[["t"]],["compare"]]],[10,"not_equals","","Tests if both sides are not the same value.",27,[[["t"]],["compare"]]],[10,"less_than","","Tests if the left side is smaller than the right side.",27,[[["t"]],["compare"]]],[10,"less_than_or_equals","","Tests if the left side is smaller than the right side or…",27,[[["t"]],["compare"]]],[10,"greater_than","","Tests if the left side is bigger than the right side.",27,[[["t"]],["compare"]]],[10,"greater_than_or_equals","","Tests if the left side is bigger than the right side or…",27,[[["t"]],["compare"]]],[10,"in_selection","","Tests if the left side is included in the right side…",27,[[["t"]],["compare"]]],[10,"not_in_selection","","Tests if the left side is not included in the right side…",27,[[["t"]],["compare"]]],[10,"like","","Tests if the left side includes the right side string.",27,[[["t"]],["compare"]]],[10,"not_like","","Tests if the left side does not include the right side…",27,[[["t"]],["compare"]]],[10,"begins_with","","Tests if the left side starts with the right side string.",27,[[["t"]],["compare"]]],[10,"not_begins_with","","Tests if the left side doesn't start with the right side…",27,[[["t"]],["compare"]]],[10,"ends_into","","Tests if the left side ends into the right side string.",27,[[["t"]],["compare"]]],[10,"not_ends_into","","Tests if the left side does not end into the right side…",27,[[["t"]],["compare"]]],[10,"is_null","","Tests if the left side is `NULL`.",27,[[],["compare"]]],[10,"is_not_null","","Tests if the left side is not `NULL`.",27,[[],["compare"]]],[10,"between","","Tests if the value is between two given values.",27,[[["t"],["v"]],["compare"]]],[10,"not_between","","Tests if the value is not between two given values.",27,[[["t"],["v"]],["compare"]]],[8,"Conjuctive","","`AND`, `OR` and `NOT` conjuctive implementations.",null,null],[10,"and","","Builds an `AND` condition having `self` as the left leaf…",28,[[["e"]],["conditiontree"]]],[10,"or","","Builds an `OR` condition having `self` as the left leaf…",28,[[["e"]],["conditiontree"]]],[10,"not","","Builds a `NOT` condition having `self` as the condition.",28,[[],["conditiontree"]]],[8,"Groupable","","An item that can be used in the `GROUP BY` statement",null,null],[10,"group","","Group by `self`",29,[[],["groupbydefinition"]]],[8,"IntoGroupByDefinition","","Convert the value into a group by definition.",null,null],[10,"into_group_by_definition","","",30,[[],["groupbydefinition"]]],[8,"Joinable","","An item that can be joined.",null,null],[10,"on","","Add the `JOIN` conditions.",31,[[["t"]],["joindata"]]],[8,"IntoOrderDefinition","","Convert the value into an order definition with order item…",null,null],[10,"into_order_definition","","",32,[[],["orderdefinition"]]],[8,"Orderable","","An item that can be used in the `ORDER BY` statement",null,null],[10,"order","","Order by `self` in the given order",33,[[["order"],["option",["order"]]],["orderdefinition"]]],[11,"ascend","","Change the order to `ASC`",33,[[],["orderdefinition"]]],[11,"descend","","Change the order to `DESC`",33,[[],["orderdefinition"]]],[8,"Aliasable","","An object that can be aliased.",null,null],[10,"alias","","Alias table for usage elsewhere in the query.",34,[[["t"]],["table"]]],[0,"connector","quaint","A set of abstractions for database connections.",null,null],[3,"Mysql","quaint::connector","A connector interface for the MySQL database.",null,null],[3,"MysqlUrl","","Wraps a connection url and exposes the parsing logic used…",null,null],[3,"PostgreSql","","A connector interface for the PostgreSQL database.",null,null],[3,"SslParams","","",null,null],[3,"PostgresUrl","","Wraps a connection url and exposes the parsing logic used…",null,null],[3,"Sqlite","","A connector interface for the SQLite database",null,null],[3,"SqliteParams","","",null,null],[12,"connection_limit","","",35,null],[12,"file_path","","This is not a `PathBuf` because we need to `ATTACH` the…",35,null],[12,"db_name","","",35,null],[12,"socket_timeout","","",35,null],[3,"ResultRow","","An owned version of a `Row` in a `ResultSet`. See…",null,null],[3,"ResultRowRef","","A reference to a `Row` in a `ResultSet`. The columns can…",null,null],[3,"ResultSet","","Encapsulates a set of results and their respective column…",null,null],[3,"ResultSetIterator","","Thin iterator for ResultSet rows. Might become lazy one day.",null,null],[3,"DBIO","","The main unit of asynchronous IO. For now just a shell for…",null,null],[3,"Transaction","","A representation of an SQL database transaction. If not…",null,null],[4,"SslAcceptMode","","",null,null],[13,"Strict","","",36,null],[13,"AcceptInvalidCerts","","",36,null],[4,"ConnectionInfo","","General information about a SQL connection.",null,null],[13,"Postgres","","A PostgreSQL connection URL.",37,null],[13,"Mysql","","A MySQL connection URL.",37,null],[13,"Sqlite","","A SQLite connection URL.",37,null],[12,"file_path","quaint::connector::ConnectionInfo","The filesystem path of the SQLite database.",37,null],[12,"db_name","","The name the database is bound to (with `ATTACH…",37,null],[4,"SqlFamily","quaint::connector","One of the supported SQL variants.",null,null],[13,"Postgres","","",38,null],[13,"Mysql","","",38,null],[13,"Sqlite","","",38,null],[11,"at","","Take a value from a certain position in the row, if having…",39,[[["self"],["usize"]],[["parameterizedvalue"],["option",["parameterizedvalue"]]]]],[11,"get","","Take a value with the given column name from the row.…",39,[[["str"],["self"]],[["parameterizedvalue"],["option",["parameterizedvalue"]]]]],[11,"as_ref","","Make a referring ResultRowRef.",39,[[["self"]],["resultrowref"]]],[11,"into_single","","",39,[[],[["parameterizedvalue"],["result",["parameterizedvalue"]]]]],[11,"at","","Take a value from a certain position in the row, if having…",40,[[["self"],["usize"]],[["parameterizedvalue"],["option",["parameterizedvalue"]]]]],[11,"get","","Take a value with the given column name from the row.",40,[[["str"],["self"]],[["parameterizedvalue"],["option",["parameterizedvalue"]]]]],[11,"new","","Creates a new instance, bound to the given column names…",41,[[["string"],["vec",["string"]],["vec",["parameterizedvalue"]],["vec",["vec"]]],["self"]]],[11,"last_insert_id","","The last id inserted, if available. Only works on certain…",41,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"columns","","An iterator of column names.",41,[[["self"]],["vec"]]],[11,"len","","Returns the number of rows in the `ResultSet`.",41,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `ResultSet` contains no rows.",41,[[["self"]],["bool"]]],[11,"first","","Returns the first row of the `ResultSet`, or None if the…",41,[[["self"]],[["resultrowref"],["option",["resultrowref"]]]]],[11,"get","","Returns a reference to a row in a given position.",41,[[["self"],["usize"]],[["resultrowref"],["option",["resultrowref"]]]]],[11,"into_single","","Takes the first row if existing, otherwise returns error.",41,[[],[["resultrow"],["result",["resultrow"]]]]],[11,"commit","","Commit the changes to the database and consume the…",42,[[["self"]]]],[11,"rollback","","Rolls back the changes to the database.",42,[[["self"]]]],[11,"new","","",43,[[["f"]],["self"]]],[11,"new","","Parse `Url` to `MysqlUrl`. Returns error for mistyped…",44,[[["url"]],[["error"],["result",["error"]]]]],[11,"url","","The bare `Url` to the database.",44,[[["self"]],["url"]]],[11,"username","","The percent-decoded database username.",44,[[["self"]],[["str"],["cow",["str"]]]]],[11,"password","","The percent-decoded database password.",44,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"dbname","","Name of the database connected. Defaults to `mysql`.",44,[[["self"]],["str"]]],[11,"host","","The database host. If `socket` and `host` are not set,…",44,[[["self"]],["str"]]],[11,"socket","","If set, connected to the database through a Unix socket.",44,[[["self"]],["option"]]],[11,"port","","The database port, defaults to `3306`.",44,[[["self"]],["u16"]]],[11,"new","","Create a new MySQL connection using `OptsBuilder` from the…",45,[[["mysqlurl"]],["result"]]],[11,"new","","Parse `Url` to `PostgresUrl`. Returns error for mistyped…",46,[[["url"]],[["error"],["result",["error"]]]]],[11,"url","","The bare `Url` to the database.",46,[[["self"]],["url"]]],[11,"username","","The percent-decoded database username.",46,[[["self"]],[["str"],["cow",["str"]]]]],[11,"host","","The database host. Taken first from the `host` query…",46,[[["self"]],["str"]]],[11,"dbname","","Name of the database connected. Defaults to `postgres`.",46,[[["self"]],["str"]]],[11,"password","","The percent-decoded database password.",46,[[["self"]],[["str"],["cow",["str"]]]]],[11,"port","","The database port, defaults to `5432`.",46,[[["self"]],["u16"]]],[11,"schema","","The database schema, defaults to `public`.",46,[[["self"]],["str"]]],[11,"new","","Create a new connection to the database.",47,[[["postgresurl"]]]],[11,"new","","",48,[[["str"]],[["sqlite"],["result",["sqlite"]]]]],[11,"attach_database","","",48,[[["str"],["self"]]]],[11,"from_url","","Parse `ConnectionInfo` out from an SQL connection string.",37,[[["str"]],["result"]]],[11,"dbname","","The provided database name. This will be `None` on SQLite.",37,[[["self"]],[["option",["str"]],["str"]]]],[11,"schema_name","","This is what item names are prefixed with in queries.",37,[[["self"]],["str"]]],[11,"host","","The provided database host. This will be `\"localhost\"` on…",37,[[["self"]],["str"]]],[11,"username","","The provided database user name. This will be `None` on…",37,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"file_path","","The database file for SQLite, otherwise `None`.",37,[[["self"]],[["option",["str"]],["str"]]]],[11,"sql_family","","The family of databases connected.",37,[[["self"]],["sqlfamily"]]],[11,"port","","The provided database port, if applicable.",37,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"database_location","","A string describing the database location, meant for error…",37,[[["self"]],["string"]]],[11,"as_str","","Get a string representation of the family.",38,[[],["str"]]],[11,"from_scheme","","Convert url scheme to an SqlFamily.",38,[[["str"]],["option"]]],[11,"scheme_is_supported","","Check if a family exists for the given scheme.",38,[[["str"]],["bool"]]],[11,"is_postgres","","",38,[[["self"]],["bool"]]],[11,"is_mysql","","",38,[[["self"]],["bool"]]],[11,"is_sqlite","","",38,[[["self"]],["bool"]]],[8,"ValueIndex","","",null,null],[8,"GetRow","","",null,null],[10,"get_result_row","","",49,[[["self"]],[["vec",["parameterizedvalue"]],["result",["vec"]]]]],[8,"TakeRow","","",null,null],[10,"take_result_row","","",50,[[["self"]],[["vec",["parameterizedvalue"]],["result",["vec"]]]]],[8,"ToColumnNames","","",null,null],[10,"to_column_names","","",51,[[["self"]],[["string"],["vec",["string"]]]]],[8,"Queryable","","Represents a connection or a transaction that can be…",null,null],[10,"query","","Execute the given query.",52,[[["query"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[10,"query_raw","","Execute a query given as SQL, interpolating the given…",52,[[["str"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[10,"execute","","Execute the given query, returning the number of affected…",52,[[["query"],["self"]],[["dbio",["u64"]],["u64"]]]],[10,"execute_raw","","Execute a query given as SQL, interpolating the given…",52,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[10,"raw_cmd","","Run a command in the database, for queries that can't be…",52,[[["str"],["self"]],["dbio"]]],[11,"select","","Execute a `SELECT` query.",52,[[["select"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"insert","","Execute an `INSERT` query.",52,[[["insert"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"update","","Execute an `UPDATE` query, returning the number of…",52,[[["self"],["update"]],[["dbio",["u64"]],["u64"]]]],[11,"delete","","Execute a `DELETE` query, returning the number of affected…",52,[[["delete"],["self"]],["dbio"]]],[8,"TransactionCapable","","A thing that can start a new transaction.",null,null],[11,"start_transaction","","Starts a new transaction",53,[[["self"]],[["transaction"],["dbio",["transaction"]]]]],[0,"error","quaint","Error module",null,null],[3,"Error","quaint::error","The error types for database I/O, connection and query…",null,null],[4,"DatabaseConstraint","","",null,null],[13,"Fields","","",54,null],[13,"Index","","",54,null],[13,"ForeignKey","","",54,null],[4,"ErrorKind","","",null,null],[13,"QueryError","","",55,null],[13,"DatabaseDoesNotExist","","",55,null],[12,"db_name","quaint::error::ErrorKind","",55,null],[13,"DatabaseAccessDenied","quaint::error","",55,null],[12,"db_name","quaint::error::ErrorKind","",55,null],[13,"DatabaseAlreadyExists","quaint::error","",55,null],[12,"db_name","quaint::error::ErrorKind","",55,null],[13,"AuthenticationFailed","quaint::error","",55,null],[12,"user","quaint::error::ErrorKind","",55,null],[13,"NotFound","quaint::error","",55,null],[13,"UniqueConstraintViolation","","",55,null],[12,"constraint","quaint::error::ErrorKind","",55,null],[13,"NullConstraintViolation","quaint::error","",55,null],[12,"constraint","quaint::error::ErrorKind","",55,null],[13,"ForeignKeyConstraintViolation","quaint::error","",55,null],[12,"constraint","quaint::error::ErrorKind","",55,null],[13,"ConnectionError","quaint::error","",55,null],[13,"ColumnReadFailure","","",55,null],[13,"ResultIndexOutOfBounds","","",55,null],[13,"ColumnNotFound","","",55,null],[13,"ResultTypeMismatch","","",55,null],[13,"DatabaseUrlIsInvalid","","",55,null],[13,"ConversionError","","",55,null],[13,"InvalidConnectionArguments","","",55,null],[13,"IoError","","",55,null],[13,"ConnectTimeout","","",55,null],[13,"Timeout","","",55,null],[13,"TlsError","","",55,null],[12,"message","quaint::error::ErrorKind","",55,null],[13,"FromRowError","quaint::error","",55,null],[11,"original_code","","The error code sent by the database, if available.",56,[[["self"]],[["option",["str"]],["str"]]]],[11,"original_message","","The original error message sent by the database, if…",56,[[["self"]],[["option",["str"]],["str"]]]],[11,"kind","","A more specific error type for matching.",56,[[["self"]],["errorkind"]]],[0,"pooled","quaint","A connection pool to a SQL database.",null,null],[3,"PooledConnection","quaint::pooled","A connection from the pool. Implements Queryable.",null,null],[3,"Quaint","","The main entry point and an abstraction over database…",null,null],[12,"inner","","",57,null],[11,"new","","Create a new pool of connections to the database. The…",57,[[["str"]]]],[11,"capacity","","The number of connections in the pool.",57,[[["self"]]]],[11,"check_out","","Reserve a connection from the pool.",57,[[["self"]]]],[11,"connection_info","","Info about the connection and underlying database.",57,[[["self"]],["connectioninfo"]]],[0,"prelude","quaint","A \"prelude\" for users of the `quaint` crate.",null,null],[3,"ResultRow","quaint::prelude","An owned version of a `Row` in a `ResultSet`. See…",null,null],[3,"ResultSet","","Encapsulates a set of results and their respective column…",null,null],[3,"Transaction","","A representation of an SQL database transaction. If not…",null,null],[3,"DBIO","","The main unit of asynchronous IO. For now just a shell for…",null,null],[4,"ConnectionInfo","","General information about a SQL connection.",null,null],[13,"Postgres","","A PostgreSQL connection URL.",37,null],[13,"Mysql","","A MySQL connection URL.",37,null],[13,"Sqlite","","A SQLite connection URL.",37,null],[12,"file_path","quaint::prelude::ConnectionInfo","The filesystem path of the SQLite database.",37,null],[12,"db_name","","The name the database is bound to (with `ATTACH…",37,null],[4,"SqlFamily","quaint::prelude","One of the supported SQL variants.",null,null],[13,"Postgres","","",38,null],[13,"Mysql","","",38,null],[13,"Sqlite","","",38,null],[8,"Queryable","","Represents a connection or a transaction that can be…",null,null],[10,"query","","Execute the given query.",52,[[["query"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[10,"query_raw","","Execute a query given as SQL, interpolating the given…",52,[[["str"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[10,"execute","","Execute the given query, returning the number of affected…",52,[[["query"],["self"]],[["dbio",["u64"]],["u64"]]]],[10,"execute_raw","","Execute a query given as SQL, interpolating the given…",52,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[10,"raw_cmd","","Run a command in the database, for queries that can't be…",52,[[["str"],["self"]],["dbio"]]],[11,"select","quaint::connector","Execute a `SELECT` query.",52,[[["select"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"insert","","Execute an `INSERT` query.",52,[[["insert"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"update","","Execute an `UPDATE` query, returning the number of…",52,[[["self"],["update"]],[["dbio",["u64"]],["u64"]]]],[11,"delete","","Execute a `DELETE` query, returning the number of affected…",52,[[["delete"],["self"]],["dbio"]]],[8,"TransactionCapable","quaint::prelude","A thing that can start a new transaction.",null,null],[11,"start_transaction","quaint::connector","Starts a new transaction",53,[[["self"]],[["transaction"],["dbio",["transaction"]]]]],[0,"serde","quaint","Convert results from the database into any type…",null,null],[3,"ParameterizedValueDeserializer","quaint::serde","",null,null],[5,"from_rows","","Deserialize each row of a `ResultSet`.",null,[[["resultset"]],[["vec"],["result",["vec"]]]]],[5,"from_row","","Deserialize a row into any type implementing `Deserialize`.",null,[[["resultrow"]],[["deserializeowned"],["result"]]]],[11,"from_first","quaint::connector","Takes the first row and deserializes it.",41,[[],[["deserializeowned"],["result"]]]],[0,"single","quaint","A single connection abstraction to a SQL database.",null,null],[3,"Quaint","quaint::single","The main entry point and an abstraction over a database…",null,null],[11,"new","","Create a new connection to the database. The connection…",58,[[["str"]]]],[11,"connection_info","","Info about the connection and underlying database.",58,[[["self"]],["connectioninfo"]]],[0,"visitor","quaint","Visitors for reading an abstract SQL syntax tree,…",null,null],[3,"Mysql","quaint::visitor","A visitor to generate queries for the MySQL database.",null,null],[3,"Postgres","","A visitor to generate queries for the PostgreSQL database.",null,null],[3,"Sqlite","","A visitor to generate queries for the SQLite database.",null,null],[8,"Visitor","","A function travelling through the query AST, building the…",null,null],[18,"C_BACKTICK","","Backtick character to surround identifiers, such as column…",59,null],[18,"C_WILDCARD","","Wildcard character to be used in `LIKE` queries.",59,null],[10,"build","","Convert the given `Query` to an SQL string and a vector of…",59,[[["q"]]]],[10,"write","","Write to the query.",59,[[["self"],["display"]],["result"]]],[11,"surround_with","","",59,[[["str"],["self"],["f"]],["result"]]],[10,"add_parameter","","When called, the visitor decided to not render the…",59,[[["self"],["parameterizedvalue"]]]],[10,"visit_limit_and_offset","","The `LIMIT` and `OFFSET` statement in the query",59,[[["option",["parameterizedvalue"]],["self"],["parameterizedvalue"]],["result"]]],[10,"visit_insert","","A walk through an `INSERT` statement",59,[[["insert"],["self"]],["result"]]],[10,"parameter_substitution","","What to use to substitute a parameter in the query.",59,[[["self"]],["result"]]],[10,"visit_aggregate_to_string","","What to use to substitute a parameter in the query.",59,[[["self"],["databasevalue"]],["result"]]],[11,"visit_parameterized","","A visit to a value we parameterize",59,[[["self"],["parameterizedvalue"]],["result"]]],[11,"visit_joins","","The join statements in the query",59,[[["join"],["self"],["vec",["join"]]],["result"]]],[11,"visit_join_data","","",59,[[["joindata"],["self"]],["result"]]],[11,"visit_select","","A walk through a `SELECT` statement",59,[[["select"],["self"]],["result"]]],[11,"visit_update","","A walk through an `UPDATE` statement",59,[[["self"],["update"]],["result"]]],[11,"visit_delete","","A walk through an `DELETE` statement",59,[[["delete"],["self"]],["result"]]],[11,"delimited_identifiers","","A helper for delimiting an identifier, surrounding every…",59,[[["self"]],["result"]]],[11,"visit_query","","A walk through a complete `Query` statement",59,[[["self"],["query"]]]],[11,"visit_union","","A walk through a union of `SELECT` statements",59,[[["self"],["union"]],["result"]]],[11,"visit_columns","","The selected columns",59,[[["self"],["databasevalue"],["vec",["databasevalue"]]],["result"]]],[11,"visit_operation","","",59,[[["sqlop"],["self"]],["result"]]],[11,"visit_database_value","","A visit to a value used in an expression",59,[[["self"],["databasevalue"]],["result"]]],[11,"visit_values","","",59,[[["self"],["values"]],["result"]]],[11,"visit_table","","A database table identifier",59,[[["table"],["self"],["bool"]],["result"]]],[11,"visit_column","","A database column identifier",59,[[["self"],["column"]],["result"]]],[11,"visit_row","","A row of data used as an expression",59,[[["self"],["row"]],["result"]]],[11,"visit_conditions","","A walk through the query conditions",59,[[["self"],["conditiontree"]],["result"]]],[11,"visit_expression","","An expression that can either be a single value, a set of…",59,[[["self"],["expression"]],["result"]]],[11,"visit_compare","","A comparison expression",59,[[["compare"],["self"]],["result"]]],[11,"visit_ordering","","A visit in the `ORDER BY` section of the query",59,[[["ordering"],["self"]],["result"]]],[11,"visit_grouping","","A visit in the `GROUP BY` section of the query",59,[[["grouping"],["self"]],["result"]]],[11,"visit_function","","",59,[[["self"],["function"]],["result"]]],[11,"visit_partitioning","","",59,[[["self"],["over"]],["result"]]],[6,"Result","quaint","",null,null],[14,"col","","Marks a given string or a tuple as a column. Useful when…",null,null],[14,"val","","Marks a given string as a value. Useful when using a value…",null,null],[14,"values","","",null,null],[11,"from","quaint::ast","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"to_value","","",15,[[["self"]],["value"]]],[11,"from","quaint::connector","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"into_iter","","",39,[[],["i"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"into_iter","","",66,[[],["i"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"try_poll","","",43,[[["f"],["context"],["pin"]],["poll"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","quaint::error","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"as_fail","","",56,[[["self"]],["fail"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"as_fail","","",55,[[["self"]],["fail"]]],[11,"from","quaint::pooled","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","quaint::serde","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","quaint::single","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","quaint::visitor","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"equals","quaint::ast","",3,[[["t"]],["compare"]]],[11,"not_equals","","",3,[[["t"]],["compare"]]],[11,"less_than","","",3,[[["t"]],["compare"]]],[11,"less_than_or_equals","","",3,[[["t"]],["compare"]]],[11,"greater_than","","",3,[[["t"]],["compare"]]],[11,"greater_than_or_equals","","",3,[[["t"]],["compare"]]],[11,"in_selection","","",3,[[["t"]],["compare"]]],[11,"not_in_selection","","",3,[[["t"]],["compare"]]],[11,"like","","",3,[[["t"]],["compare"]]],[11,"not_like","","",3,[[["t"]],["compare"]]],[11,"begins_with","","",3,[[["t"]],["compare"]]],[11,"not_begins_with","","",3,[[["t"]],["compare"]]],[11,"ends_into","","",3,[[["t"]],["compare"]]],[11,"not_ends_into","","",3,[[["t"]],["compare"]]],[11,"is_null","","",3,[[],["compare"]]],[11,"is_not_null","","",3,[[],["compare"]]],[11,"between","","",3,[[["t"],["v"]],["compare"]]],[11,"not_between","","",3,[[["t"],["v"]],["compare"]]],[11,"equals","","",14,[[["t"]],["compare"]]],[11,"not_equals","","",14,[[["t"]],["compare"]]],[11,"less_than","","",14,[[["t"]],["compare"]]],[11,"less_than_or_equals","","",14,[[["t"]],["compare"]]],[11,"greater_than","","",14,[[["t"]],["compare"]]],[11,"greater_than_or_equals","","",14,[[["t"]],["compare"]]],[11,"in_selection","","",14,[[["t"]],["compare"]]],[11,"not_in_selection","","",14,[[["t"]],["compare"]]],[11,"like","","",14,[[["t"]],["compare"]]],[11,"not_like","","",14,[[["t"]],["compare"]]],[11,"begins_with","","",14,[[["t"]],["compare"]]],[11,"not_begins_with","","",14,[[["t"]],["compare"]]],[11,"ends_into","","",14,[[["t"]],["compare"]]],[11,"not_ends_into","","",14,[[["t"]],["compare"]]],[11,"is_null","","",14,[[],["compare"]]],[11,"is_not_null","","",14,[[],["compare"]]],[11,"between","","",14,[[["t"],["v"]],["compare"]]],[11,"not_between","","",14,[[["t"],["v"]],["compare"]]],[11,"group","","",0,[[],["groupbydefinition"]]],[11,"into_group_by_definition","","",0,[[],["groupbydefinition"]]],[11,"into_group_by_definition","quaint","",72,[[],["groupbydefinition"]]],[11,"order","quaint::ast","",0,[[["order"],["option",["order"]]],["orderdefinition"]]],[11,"into_order_definition","","",0,[[],["orderdefinition"]]],[11,"into_order_definition","quaint","",73,[[],["orderdefinition"]]],[11,"alias","quaint::ast","",4,[[["t"]],["table"]]],[11,"query","quaint::connector","",42,[[["self"],["query"]],[["resultset"],["dbio",["resultset"]]]]],[11,"execute","","",42,[[["self"],["query"]],[["dbio",["u64"]],["u64"]]]],[11,"query_raw","","",42,[[["self"],["str"]],[["resultset"],["dbio",["resultset"]]]]],[11,"execute_raw","","",42,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,"raw_cmd","","",42,[[["self"],["str"]],["dbio"]]],[11,"query","","",45,[[["query"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"execute","","",45,[[["query"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"query_raw","","",45,[[["str"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"execute_raw","","",45,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"raw_cmd","","",45,[[["str"],["self"]],["dbio"]]],[11,"query","","",47,[[["query"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"execute","","",47,[[["query"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"query_raw","","",47,[[["str"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"execute_raw","","",47,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"raw_cmd","","",47,[[["str"],["self"]],["dbio"]]],[11,"query","","",48,[[["query"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"execute","","",48,[[["query"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"query_raw","","",48,[[["str"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"execute_raw","","",48,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"raw_cmd","","",48,[[["str"],["self"]],["dbio"]]],[11,"query","quaint::pooled","",67,[[["query"],["self"]],[["dbio",["resultset"]],["resultset"]]]],[11,"execute","","",67,[[["query"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"query_raw","","",67,[[["str"],["self"]],[["dbio",["resultset"]],["resultset"]]]],[11,"execute_raw","","",67,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"raw_cmd","","",67,[[["str"],["self"]],["dbio"]]],[11,"query","quaint::single","",58,[[["query"],["self"]],[["dbio",["resultset"]],["resultset"]]]],[11,"execute","","",58,[[["query"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"query_raw","","",58,[[["str"],["self"]],[["dbio",["resultset"]],["resultset"]]]],[11,"execute_raw","","",58,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,"raw_cmd","","",58,[[["str"],["self"]],["dbio"]]],[11,"build","quaint::visitor","",69,[[["q"]]]],[11,"write","","",69,[[["self"],["display"]],["result"]]],[11,"visit_insert","","",69,[[["insert"],["self"]],["result"]]],[11,"parameter_substitution","","",69,[[["self"]],["result"]]],[11,"add_parameter","","",69,[[["self"],["parameterizedvalue"]]]],[11,"visit_limit_and_offset","","",69,[[["option",["parameterizedvalue"]],["self"],["parameterizedvalue"]],["result"]]],[11,"visit_aggregate_to_string","","",69,[[["self"],["databasevalue"]],["result"]]],[11,"build","","",70,[[["q"]]]],[11,"write","","",70,[[["self"],["display"]],["result"]]],[11,"add_parameter","","",70,[[["self"],["parameterizedvalue"]]]],[11,"parameter_substitution","","",70,[[["self"]],["result"]]],[11,"visit_limit_and_offset","","",70,[[["option",["parameterizedvalue"]],["self"],["parameterizedvalue"]],["result"]]],[11,"visit_insert","","",70,[[["insert"],["self"]],["result"]]],[11,"visit_aggregate_to_string","","",70,[[["self"],["databasevalue"]],["result"]]],[11,"build","","",71,[[["q"]]]],[11,"write","","",71,[[["self"],["display"]],["result"]]],[11,"visit_insert","","",71,[[["insert"],["self"]],["result"]]],[11,"parameter_substitution","","",71,[[["self"]],["result"]]],[11,"add_parameter","","",71,[[["self"],["parameterizedvalue"]]]],[11,"visit_limit_and_offset","","",71,[[["option",["parameterizedvalue"]],["self"],["parameterizedvalue"]],["result"]]],[11,"visit_aggregate_to_string","","",71,[[["self"],["databasevalue"]],["result"]]],[11,"visit_values","","",71,[[["self"],["values"]],["result"]]],[11,"from","quaint::ast","",14,[[["column"]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","","",0,[[],["column"]]],[11,"from","","",6,[[["compare"]],["self"]]],[11,"from","","",7,[[["compare"]],["self"]]],[11,"from","","",7,[[["conditiontree"]],["self"]]],[11,"from","","",6,[[["select"]],["self"]]],[11,"from","","",12,[[["delete"]],["self"]]],[11,"from","","",7,[[["select"]],["expression"]]],[11,"from","","",18,[[["rownumber"]],["self"]]],[11,"from","","",14,[[["rownumber"]],["self"]]],[11,"from","","",18,[[["count"]],["self"]]],[11,"from","","",14,[[["count"]],["self"]]],[11,"from","","",18,[[["aggregatetostring"]],["self"]]],[11,"from","","",14,[[["aggregatetostring"]],["self"]]],[11,"from","","",18,[[["average"]],["self"]]],[11,"from","","",14,[[["average"]],["self"]]],[11,"from","","",18,[[["sum"]],["self"]]],[11,"from","","",14,[[["sum"]],["self"]]],[11,"from","","",12,[[["insert"]],["self"]]],[11,"from","","",19,[[["singlerowinsert"]],["self"]]],[11,"from","","",19,[[["multirowinsert"]],["self"]]],[11,"from","","",12,[[["singlerowinsert"]],["query"]]],[11,"from","","",12,[[["multirowinsert"]],["query"]]],[11,"from","","",12,[[["t"]],["self"]]],[11,"from","","",3,[[["vec"]],["row"]]],[11,"from","","",3,[[],["self"]]],[11,"from","","",3,[[],["self"]]],[11,"from","","",3,[[],["self"]]],[11,"from","","",3,[[],["self"]]],[11,"from","","",3,[[],["self"]]],[11,"from","","",14,[[["select"]],["databasevalue"]]],[11,"from","","",12,[[["select"]],["query"]]],[11,"from","","",4,[[["str"]],["table"]]],[11,"from","","",4,[[],["table"]]],[11,"from","","",4,[[["string"]],["self"]]],[11,"from","","",4,[[["vec",["row"]],["row"]],["self"]]],[11,"from","","",4,[[["values"]],["self"]]],[11,"from","","",4,[[],["table"]]],[11,"from","","",4,[[["select"]],["self"]]],[11,"from","","",12,[[["union"]],["self"]]],[11,"from","","",12,[[["update"]],["self"]]],[11,"from","","",15,[[["str"]],["self"]]],[11,"from","","",15,[[["string"]],["self"]]],[11,"from","","",15,[[["usize"]],["self"]]],[11,"from","","",15,[[["i32"]],["self"]]],[11,"from","","",15,[[],["parameterizedvalue"]]],[11,"from","","",15,[[["i64"]],["self"]]],[11,"from","","",15,[[["bool"]],["self"]]],[11,"from","","",15,[[["decimal"]],["self"]]],[11,"from","","",15,[[["value"]],["self"]]],[11,"from","","",15,[[["uuid"]],["self"]]],[11,"from","","",15,[[["utc"],["datetime",["utc"]]],["self"]]],[11,"from","","",15,[[["f64"]],["self"]]],[11,"from","","",15,[[["f32"]],["self"]]],[11,"from","","",14,[[["row"]],["self"]]],[11,"from","","",14,[[["function"]],["self"]]],[11,"from","","",14,[[["values"]],["self"]]],[11,"from","","",14,[[["sqlop"]],["self"]]],[11,"from","","",14,[[["t"]],["self"]]],[11,"from","","",14,[[["vec"]],["self"]]],[11,"from","","",26,[[["i"]],["self"]]],[11,"from","quaint::error","",56,[[["error"]],["error"]]],[11,"from","","",56,[[["error"]],["error"]]],[11,"from","","",56,[[["error"]],["error"]]],[11,"from","","",56,[[["error"]],["error"]]],[11,"from","","",56,[[["error"]],["error"]]],[11,"from","","",56,[[["fromsqlerror"]],["error"]]],[11,"from","","",55,[[["error"]],["self"]]],[11,"from","","",56,[[["tryfrominterror"]],["self"]]],[11,"from","","",56,[[["error"],["error",["error"]]],["self"]]],[11,"from","","",56,[[["elapsed"]],["self"]]],[11,"from","","",56,[[["parseerror"]],["error"]]],[11,"from","","",56,[[["error"]],["error"]]],[11,"from","","",56,[[["fromutf8error"]],["error"]]],[11,"into_iter","quaint::ast","",26,[[]]],[11,"into_iter","quaint::connector","",39,[[]]],[11,"into_iter","","",41,[[]]],[11,"next","","",66,[[["self"]],["option"]]],[11,"clone","quaint::ast","",0,[[["self"]],["column"]]],[11,"clone","","",5,[[["self"]],["compare"]]],[11,"clone","","",6,[[["self"]],["conditiontree"]]],[11,"clone","","",16,[[["self"]],["delete"]]],[11,"clone","","",7,[[["self"]],["expression"]]],[11,"clone","","",60,[[["self"]],["aggregatetostring"]]],[11,"clone","","",61,[[["self"]],["average"]]],[11,"clone","","",62,[[["self"]],["count"]]],[11,"clone","","",17,[[["self"]],["rownumber"]]],[11,"clone","","",63,[[["self"]],["sum"]]],[11,"clone","","",18,[[["self"]],["function"]]],[11,"clone","","",1,[[["self"]],["grouping"]]],[11,"clone","","",19,[[["self"]],["insert"]]],[11,"clone","","",8,[[["self"]],["onconflict"]]],[11,"clone","","",64,[[["self"]],["joindata"]]],[11,"clone","","",9,[[["self"]],["join"]]],[11,"clone","","",10,[[["self"]],["sqlop"]]],[11,"clone","","",2,[[["self"]],["ordering"]]],[11,"clone","","",11,[[["self"]],["order"]]],[11,"clone","","",22,[[["self"]],["over"]]],[11,"clone","","",12,[[["self"]],["query"]]],[11,"clone","","",3,[[["self"]],["row"]]],[11,"clone","","",23,[[["self"]],["select"]]],[11,"clone","","",13,[[["self"]],["tabletype"]]],[11,"clone","","",4,[[["self"]],["table"]]],[11,"clone","","",24,[[["self"]],["union"]]],[11,"clone","","",25,[[["self"]],["update"]]],[11,"clone","","",15,[[["self"]],["parameterizedvalue"]]],[11,"clone","","",14,[[["self"]],["databasevalue"]]],[11,"clone","","",26,[[["self"]],["values"]]],[11,"clone","quaint::connector","",44,[[["self"]],["mysqlurl"]]],[11,"clone","","",36,[[["self"]],["sslacceptmode"]]],[11,"clone","","",65,[[["self"]],["sslparams"]]],[11,"clone","","",46,[[["self"]],["postgresurl"]]],[11,"clone","","",37,[[["self"]],["connectioninfo"]]],[11,"clone","","",38,[[["self"]],["sqlfamily"]]],[11,"clone","quaint::pooled","",57,[[["self"]],["quaint"]]],[11,"clone","quaint::single","",58,[[["self"]],["quaint"]]],[11,"default","quaint::ast","",0,[[],["column"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",17,[[],["rownumber"]]],[11,"default","","",1,[[],["grouping"]]],[11,"default","","",2,[[],["ordering"]]],[11,"default","","",22,[[],["over"]]],[11,"default","","",3,[[],["row"]]],[11,"default","","",23,[[],["select"]]],[11,"default","","",24,[[],["union"]]],[11,"default","","",26,[[],["values"]]],[11,"default","quaint::connector","",41,[[],["resultset"]]],[11,"eq","quaint::ast","",0,[[["self"],["column"]],["bool"]]],[11,"ne","","",0,[[["self"],["column"]],["bool"]]],[11,"eq","","",5,[[["self"],["compare"]],["bool"]]],[11,"ne","","",5,[[["self"],["compare"]],["bool"]]],[11,"eq","","",6,[[["conditiontree"],["self"]],["bool"]]],[11,"ne","","",6,[[["conditiontree"],["self"]],["bool"]]],[11,"eq","","",16,[[["delete"],["self"]],["bool"]]],[11,"ne","","",16,[[["delete"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["expression"]],["bool"]]],[11,"ne","","",7,[[["self"],["expression"]],["bool"]]],[11,"eq","","",60,[[["self"],["aggregatetostring"]],["bool"]]],[11,"ne","","",60,[[["self"],["aggregatetostring"]],["bool"]]],[11,"eq","","",61,[[["average"],["self"]],["bool"]]],[11,"ne","","",61,[[["average"],["self"]],["bool"]]],[11,"eq","","",62,[[["count"],["self"]],["bool"]]],[11,"ne","","",62,[[["count"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["rownumber"]],["bool"]]],[11,"ne","","",17,[[["self"],["rownumber"]],["bool"]]],[11,"eq","","",63,[[["sum"],["self"]],["bool"]]],[11,"ne","","",63,[[["sum"],["self"]],["bool"]]],[11,"eq","","",18,[[["function"],["self"]],["bool"]]],[11,"ne","","",18,[[["function"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["grouping"]],["bool"]]],[11,"ne","","",1,[[["self"],["grouping"]],["bool"]]],[11,"eq","","",19,[[["insert"],["self"]],["bool"]]],[11,"ne","","",19,[[["insert"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["onconflict"]],["bool"]]],[11,"eq","","",64,[[["joindata"],["self"]],["bool"]]],[11,"ne","","",64,[[["joindata"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["join"]],["bool"]]],[11,"ne","","",9,[[["self"],["join"]],["bool"]]],[11,"eq","","",10,[[["self"],["sqlop"]],["bool"]]],[11,"ne","","",10,[[["self"],["sqlop"]],["bool"]]],[11,"eq","","",2,[[["self"],["ordering"]],["bool"]]],[11,"ne","","",2,[[["self"],["ordering"]],["bool"]]],[11,"eq","","",11,[[["order"],["self"]],["bool"]]],[11,"eq","","",22,[[["over"],["self"]],["bool"]]],[11,"ne","","",22,[[["over"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["query"]],["bool"]]],[11,"ne","","",12,[[["self"],["query"]],["bool"]]],[11,"eq","","",3,[[["row"],["self"]],["bool"]]],[11,"ne","","",3,[[["row"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["select"]],["bool"]]],[11,"ne","","",23,[[["self"],["select"]],["bool"]]],[11,"eq","","",13,[[["tabletype"],["self"]],["bool"]]],[11,"ne","","",13,[[["tabletype"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["table"]],["bool"]]],[11,"ne","","",4,[[["self"],["table"]],["bool"]]],[11,"eq","","",24,[[["union"],["self"]],["bool"]]],[11,"ne","","",24,[[["union"],["self"]],["bool"]]],[11,"eq","","",25,[[["update"],["self"]],["bool"]]],[11,"ne","","",25,[[["update"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["parameterizedvalue"]],["bool"]]],[11,"ne","","",15,[[["self"],["parameterizedvalue"]],["bool"]]],[11,"eq","","",14,[[["self"],["databasevalue"]],["bool"]]],[11,"ne","","",14,[[["self"],["databasevalue"]],["bool"]]],[11,"eq","","",26,[[["values"],["self"]],["bool"]]],[11,"ne","","",26,[[["values"],["self"]],["bool"]]],[11,"eq","quaint::connector","",36,[[["sslacceptmode"],["self"]],["bool"]]],[11,"eq","","",38,[[["sqlfamily"],["self"]],["bool"]]],[11,"eq","quaint::error","",54,[[["databaseconstraint"],["self"]],["bool"]]],[11,"ne","","",54,[[["databaseconstraint"],["self"]],["bool"]]],[11,"fmt","quaint::ast","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","quaint::connector","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","quaint::error","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","quaint::serde","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","quaint::single","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","quaint::ast","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","quaint::connector","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","quaint::error","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"div","quaint::ast","",14,[[],["self"]]],[11,"rem","","",14,[[],["self"]]],[11,"sub","","",14,[[],["self"]]],[11,"try_from","quaint::connector","",35,[[["str"]],["result"]]],[11,"try_from","","",48,[[["str"]],["result"]]],[11,"add","quaint::ast","",14,[[],["self"]]],[11,"mul","","",14,[[],["self"]]],[11,"index","quaint::connector","",40,[[["i"],["self"]],["parameterizedvalue"]]],[11,"index","","",39,[[["i"],["self"]],["parameterizedvalue"]]],[11,"poll","","",43,[[["context"],["self"],["pin"]],["poll"]]],[11,"to_sql","quaint::ast","",15,[[["postgrestype"],["self"],["bytesmut"]],[["box",["error"]],["isnull"],["result",["isnull","box"]]]]],[11,"accepts","","",15,[[["postgrestype"]],["bool"]]],[11,"to_sql_checked","","",15,[[["type"],["self"],["bytesmut"]],[["isnull"],["result",["isnull","box"]],["box",["error"]]]]],[11,"deserialize_any","quaint::serde","",68,[[["visitor"]],["result"]]],[11,"deserialize_option","","",68,[[["visitor"]],["result"]]],[11,"deserialize_bool","","",68,[[["v"]],["result"]]],[11,"deserialize_i8","","",68,[[["v"]],["result"]]],[11,"deserialize_i16","","",68,[[["v"]],["result"]]],[11,"deserialize_i32","","",68,[[["v"]],["result"]]],[11,"deserialize_i64","","",68,[[["v"]],["result"]]],[11,"deserialize_u8","","",68,[[["v"]],["result"]]],[11,"deserialize_u16","","",68,[[["v"]],["result"]]],[11,"deserialize_u32","","",68,[[["v"]],["result"]]],[11,"deserialize_u64","","",68,[[["v"]],["result"]]],[11,"deserialize_f32","","",68,[[["v"]],["result"]]],[11,"deserialize_f64","","",68,[[["v"]],["result"]]],[11,"deserialize_char","","",68,[[["v"]],["result"]]],[11,"deserialize_str","","",68,[[["v"]],["result"]]],[11,"deserialize_bytes","","",68,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",68,[[["v"]],["result"]]],[11,"deserialize_string","","",68,[[["v"]],["result"]]],[11,"deserialize_unit","","",68,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",68,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",68,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",68,[[["v"]],["result"]]],[11,"deserialize_tuple","","",68,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",68,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",68,[[["v"]],["result"]]],[11,"deserialize_struct","","",68,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",68,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",68,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",68,[[["v"]],["result"]]],[11,"into_deserializer","quaint::ast","",15,[[]]],[11,"to_sql","","",15,[[["self"]],[["tosqloutput"],["result",["tosqloutput","rusqlerror"]],["rusqlerror"]]]],[11,"ascend","","Change the order to `ASC`",33,[[],["orderdefinition"]]],[11,"descend","","Change the order to `DESC`",33,[[],["orderdefinition"]]],[11,"select","quaint::connector","Execute a `SELECT` query.",52,[[["select"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"insert","","Execute an `INSERT` query.",52,[[["insert"],["self"]],[["resultset"],["dbio",["resultset"]]]]],[11,"update","","Execute an `UPDATE` query, returning the number of…",52,[[["self"],["update"]],[["dbio",["u64"]],["u64"]]]],[11,"delete","","Execute a `DELETE` query, returning the number of affected…",52,[[["delete"],["self"]],["dbio"]]],[11,"start_transaction","","Starts a new transaction",53,[[["self"]],[["transaction"],["dbio",["transaction"]]]]]],"p":[[3,"Column"],[3,"Grouping"],[3,"Ordering"],[3,"Row"],[3,"Table"],[4,"Compare"],[4,"ConditionTree"],[4,"Expression"],[4,"OnConflict"],[4,"Join"],[4,"SqlOp"],[4,"Order"],[4,"Query"],[4,"TableType"],[4,"DatabaseValue"],[4,"ParameterizedValue"],[3,"Delete"],[3,"RowNumber"],[3,"Function"],[3,"Insert"],[3,"SingleRowInsert"],[3,"MultiRowInsert"],[3,"Over"],[3,"Select"],[3,"Union"],[3,"Update"],[3,"Values"],[8,"Comparable"],[8,"Conjuctive"],[8,"Groupable"],[8,"IntoGroupByDefinition"],[8,"Joinable"],[8,"IntoOrderDefinition"],[8,"Orderable"],[8,"Aliasable"],[3,"SqliteParams"],[4,"SslAcceptMode"],[4,"ConnectionInfo"],[4,"SqlFamily"],[3,"ResultRow"],[3,"ResultRowRef"],[3,"ResultSet"],[3,"Transaction"],[3,"DBIO"],[3,"MysqlUrl"],[3,"Mysql"],[3,"PostgresUrl"],[3,"PostgreSql"],[3,"Sqlite"],[8,"GetRow"],[8,"TakeRow"],[8,"ToColumnNames"],[8,"Queryable"],[8,"TransactionCapable"],[4,"DatabaseConstraint"],[4,"ErrorKind"],[3,"Error"],[3,"Quaint"],[3,"Quaint"],[8,"Visitor"],[3,"AggregateToString"],[3,"Average"],[3,"Count"],[3,"Sum"],[3,"JoinData"],[3,"SslParams"],[3,"ResultSetIterator"],[3,"PooledConnection"],[3,"ParameterizedValueDeserializer"],[3,"Mysql"],[3,"Postgres"],[3,"Sqlite"],[6,"GroupByDefinition"],[6,"OrderDefinition"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);