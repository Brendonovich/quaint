var searchIndex = JSON.parse('{\
"quaint":{"doc":"quaintA database client abstraction for reading and …","i":[[0,"ast","quaint","An abstract syntax tree for SQL queries.",null,null],[3,"Column","quaint::ast","A column definition.",null,null],[12,"name","","",0,null],[4,"DefaultValue","","Defines a default value for a <code>Column</code>.",null,null],[13,"Provided","","A static value.",1,null],[13,"Generated","","Generated in the database.",1,null],[4,"TypeFamily","","",null,null],[13,"Text","","",2,null],[13,"Int","","",2,null],[13,"Float","","",2,null],[13,"Double","","",2,null],[13,"Boolean","","",2,null],[13,"Uuid","","",2,null],[13,"DateTime","","",2,null],[13,"Decimal","","",2,null],[13,"Bytes","","",2,null],[8,"Comparable","","An item that can be compared against other values in the …",null,null],[10,"equals","","Tests if both sides are the same value.",3,[[],["compare",4]]],[10,"not_equals","","Tests if both sides are not the same value.",3,[[],["compare",4]]],[10,"less_than","","Tests if the left side is smaller than the right side.",3,[[],["compare",4]]],[10,"less_than_or_equals","","Tests if the left side is smaller than the right side or …",3,[[],["compare",4]]],[10,"greater_than","","Tests if the left side is bigger than the right side.",3,[[],["compare",4]]],[10,"greater_than_or_equals","","Tests if the left side is bigger than the right side or …",3,[[],["compare",4]]],[10,"in_selection","","Tests if the left side is included in the right side …",3,[[],["compare",4]]],[10,"not_in_selection","","Tests if the left side is not included in the right side …",3,[[],["compare",4]]],[10,"like","","Tests if the left side includes the right side string.",3,[[],["compare",4]]],[10,"not_like","","Tests if the left side does not include the right side …",3,[[],["compare",4]]],[10,"begins_with","","Tests if the left side starts with the right side string.",3,[[],["compare",4]]],[10,"not_begins_with","","Tests if the left side doesn\'t start with the right side …",3,[[],["compare",4]]],[10,"ends_into","","Tests if the left side ends into the right side string.",3,[[],["compare",4]]],[10,"not_ends_into","","Tests if the left side does not end into the right side …",3,[[],["compare",4]]],[10,"is_null","","Tests if the left side is <code>NULL</code>.",3,[[],["compare",4]]],[10,"is_not_null","","Tests if the left side is not <code>NULL</code>.",3,[[],["compare",4]]],[10,"between","","Tests if the value is between two given values.",3,[[],["compare",4]]],[10,"not_between","","Tests if the value is not between two given values.",3,[[],["compare",4]]],[10,"compare_raw","","Compares two expressions with a custom operator.",3,[[],["compare",4]]],[4,"Compare","","For modeling comparison expressions.",null,null],[13,"Equals","","<code>left = right</code>",4,null],[13,"NotEquals","","<code>left <> right</code>",4,null],[13,"LessThan","","<code>left < right</code>",4,null],[13,"LessThanOrEquals","","<code>left <= right</code>",4,null],[13,"GreaterThan","","<code>left > right</code>",4,null],[13,"GreaterThanOrEquals","","<code>left >= right</code>",4,null],[13,"In","","<code>left IN (..)</code>",4,null],[13,"NotIn","","<code>left NOT IN (..)</code>",4,null],[13,"Like","","<code>left LIKE %..%</code>",4,null],[13,"NotLike","","<code>left NOT LIKE %..%</code>",4,null],[13,"BeginsWith","","<code>left LIKE ..%</code>",4,null],[13,"NotBeginsWith","","<code>left NOT LIKE ..%</code>",4,null],[13,"EndsInto","","<code>left LIKE %..</code>",4,null],[13,"NotEndsInto","","<code>left NOT LIKE %..</code>",4,null],[13,"Null","","<code>value IS NULL</code>",4,null],[13,"NotNull","","<code>value IS NOT NULL</code>",4,null],[13,"Between","","<code>value</code> BETWEEN <code>left</code> AND <code>right</code>",4,null],[13,"NotBetween","","<code>value</code> NOT BETWEEN <code>left</code> AND <code>right</code>",4,null],[13,"Raw","","Raw comparator, allows to use an operator <code>left <raw> right</code>…",4,null],[4,"ConditionTree","","Tree structures and leaves for condition building.",null,null],[13,"And","","<code>(left_expression AND right_expression)</code>",5,null],[13,"Or","","<code>(left_expression OR right_expression)</code>",5,null],[13,"Not","","<code>(NOT expression)</code>",5,null],[13,"Single","","A single expression leaf",5,null],[13,"NoCondition","","A leaf that does nothing to the condition, <code>1=1</code>",5,null],[13,"NegativeCondition","","A leaf that cancels the condition, <code>1=0</code>",5,null],[8,"Conjunctive","","<code>AND</code>, <code>OR</code> and <code>NOT</code> conjunctive implementations.",null,null],[10,"and","","Builds an <code>AND</code> condition having <code>self</code> as the left leaf and …",6,[[],["conditiontree",4]]],[10,"or","","Builds an <code>OR</code> condition having <code>self</code> as the left leaf and …",6,[[],["conditiontree",4]]],[10,"not","","Builds a <code>NOT</code> condition having <code>self</code> as the condition.",6,[[],["conditiontree",4]]],[3,"CommonTableExpression","","A builder for a common table expression (CTE) statement, …",null,null],[8,"IntoCommonTableExpression","","Conversion into a common table expression.",null,null],[11,"into_cte","","",7,[[],["commontableexpression",3]]],[3,"Delete","","A builder for a <code>DELETE</code> statement.",null,null],[3,"Expression","","An expression that can be positioned in a query. Can be a …",null,null],[4,"ExpressionKind","","An expression we can compare and use in database queries.",null,null],[13,"Parameterized","","Anything that we must parameterize before querying",8,null],[13,"RawValue","","A user-provided value we do not parameterize.",8,null],[13,"Column","","A database column",8,null],[13,"Row","","Data in a row form, e.g. (1, 2, 3)",8,null],[13,"Selection","","A nested <code>SELECT</code> or <code>SELECT .. UNION</code> statement",8,null],[13,"Function","","A database function call",8,null],[13,"Asterisk","","A qualified asterisk to a table",8,null],[13,"Op","","An operation: sum, sub, mul or div.",8,null],[13,"Values","","A <code>VALUES</code> statement",8,null],[13,"ConditionTree","","A tree of expressions to evaluate from the deepest value …",8,null],[13,"Compare","","A comparison expression",8,null],[13,"Value","","A single value, column, row or a nested select",8,null],[5,"asterisk","","A quick alias to create an asterisk to a table.",null,[[],["expression",3]]],[3,"AggregateToString","","An aggregate function that concatenates strings from a …",null,null],[5,"aggregate_to_string","","Aggregates the given field into a string.",null,[[],["function",3]]],[3,"Average","","A representation of the <code>AVG</code> function in the database.",null,null],[5,"avg","","Calculates the average value of a numeric column.",null,[[],["function",3]]],[3,"Count","","Returns the number of rows that matches a specified …",null,null],[5,"count","","Count of the underlying table where the given expression …",null,[[],["function",3]]],[3,"Lower","","A represention of the <code>LOWER</code> function in the database.",null,null],[5,"lower","","Converts the result of the expression into lowercase …",null,[[],["function",3]]],[3,"Maximum","","A represention of the <code>MAX</code> function in the database.",null,null],[5,"max","","Calculates the maximum value of a numeric column.",null,[[],["function",3]]],[3,"Minimum","","A represention of the <code>MIN</code> function in the database.",null,null],[5,"min","","Calculates the minimum value of a numeric column.",null,[[],["function",3]]],[3,"RowNumber","","A window function that assigns a sequential integer …",null,null],[5,"row_number","","A number from 1 to n in specified order",null,[[],["rownumber",3]]],[3,"Sum","","A represention of the <code>SUM</code> function in the database.",null,null],[5,"sum","","Calculates the sum value of a numeric column.",null,[[],["function",3]]],[3,"Upper","","A represention of the <code>UPPER</code> function in the database.",null,null],[5,"upper","","Converts the result of the expression into uppercase …",null,[[],["function",3]]],[3,"Function","","A database function definition",null,null],[6,"GroupByDefinition","","Defines a grouping for the <code>GROUP BY</code> statement.",null,null],[3,"Grouping","","A list of definitions for the <code>GROUP BY</code> statement",null,null],[12,"0","","",9,null],[8,"Groupable","","An item that can be used in the <code>GROUP BY</code> statement",null,null],[10,"group","","Group by <code>self</code>",10,[[],["groupbydefinition",6]]],[8,"IntoGroupByDefinition","","Convert the value into a group by definition.",null,null],[10,"into_group_by_definition","","",11,[[],["groupbydefinition",6]]],[4,"IndexDefinition","","A definition of a database index.",null,null],[13,"Single","","",12,null],[13,"Compound","","",12,null],[3,"Insert","","A builder for an <code>INSERT</code> statement.",null,null],[3,"SingleRowInsert","","A builder for an <code>INSERT</code> statement for a single row.",null,null],[3,"MultiRowInsert","","A builder for an <code>INSERT</code> statement for multiple rows.",null,null],[4,"OnConflict","","<code>INSERT</code> conflict resolution strategies.",null,null],[13,"DoNothing","","When a row already exists, do nothing. Works with …",13,null],[4,"Join","","A representation of a <code>JOIN</code> statement.",null,null],[13,"Inner","","Implements an <code>INNER JOIN</code> with given <code>JoinData</code>.",14,null],[13,"Left","","Implements an <code>LEFT JOIN</code> with given <code>JoinData</code>.",14,null],[13,"Right","","Implements an <code>RIGHT JOIN</code> with given <code>JoinData</code>.",14,null],[13,"Full","","Implements an <code>FULL JOIN</code> with given <code>JoinData</code>.",14,null],[3,"JoinData","","The <code>JOIN</code> table and conditions.",null,null],[8,"Joinable","","An item that can be joined.",null,null],[10,"on","","Add the <code>JOIN</code> conditions.",15,[[],["joindata",3]]],[4,"SqlOp","","Calculation operations in SQL queries.",null,null],[13,"Add","","",16,null],[13,"Sub","","",16,null],[13,"Mul","","",16,null],[13,"Div","","",16,null],[13,"Rem","","",16,null],[8,"IntoOrderDefinition","","Convert the value into an order definition with order …",null,null],[10,"into_order_definition","","",17,[[],["orderdefinition",6]]],[4,"Order","","The ordering direction",null,null],[13,"Asc","","Ascending",18,null],[13,"Desc","","Descending",18,null],[6,"OrderDefinition","","Defines ordering for an <code>ORDER BY</code> statement.",null,null],[8,"Orderable","","An item that can be used in the <code>ORDER BY</code> statement",null,null],[10,"order","","Order by <code>self</code> in the given order",19,[[["option",4],["order",4]],["orderdefinition",6]]],[11,"ascend","","Change the order to <code>ASC</code>",19,[[],["orderdefinition",6]]],[11,"descend","","Change the order to <code>DESC</code>",19,[[],["orderdefinition",6]]],[3,"Ordering","","A list of definitions for the <code>ORDER BY</code> statement.",null,null],[12,"0","","",20,null],[3,"Over","","Determines the partitioning and ordering of a rowset …",null,null],[4,"Query","","A database query",null,null],[13,"Select","","",21,null],[13,"Insert","","",21,null],[13,"Update","","",21,null],[13,"Delete","","",21,null],[13,"Union","","",21,null],[13,"Merge","","",21,null],[13,"Raw","","",21,null],[4,"SelectQuery","","A database query that only returns data without modifying …",null,null],[13,"Select","","",22,null],[13,"Union","","",22,null],[3,"Row","","A collection of values surrounded by parentheses.",null,null],[12,"values","","",23,null],[3,"Select","","A builder for a <code>SELECT</code> statement.",null,null],[8,"Aliasable","","An object that can be aliased.",null,null],[16,"Target","","",24,null],[10,"alias","","Alias table for usage elsewhere in the query.",24,[[]]],[4,"TableType","","Either an identifier or a nested query.",null,null],[13,"Table","","",25,null],[13,"Query","","",25,null],[13,"Values","","",25,null],[3,"Table","","A table definition",null,null],[12,"typ","","",26,null],[12,"alias","","",26,null],[12,"database","","",26,null],[3,"Union","","A builder for a <code>UNION</code>s over multiple <code>SELECT</code> statements.",null,null],[3,"Update","","A builder for an <code>UPDATE</code> statement.",null,null],[8,"IntoRaw","","Converts the value into a state to skip parameterization.",null,null],[10,"raw","","",27,[[],["raw",3]]],[3,"Raw","","A value written to the query as-is without …",null,null],[4,"Value","","A value we must parameterize for the prepared statement. …",null,null],[13,"Integer","","64-bit signed integer.",28,null],[13,"Float","","32-bit floating point.",28,null],[13,"Double","","64-bit floating point.",28,null],[13,"Text","","String value.",28,null],[13,"Enum","","Database enum value.",28,null],[13,"Bytes","","Bytes value.",28,null],[13,"Boolean","","Boolean value.",28,null],[13,"Char","","A single character.",28,null],[13,"Array","","An array value (PostgreSQL).",28,null],[13,"Numeric","","A numeric value.",28,null],[13,"Json","","A JSON value.",28,null],[13,"Xml","","A XML value.",28,null],[13,"Uuid","","An UUID value.",28,null],[13,"DateTime","","A datetime value.",28,null],[13,"Date","","A date value.",28,null],[13,"Time","","A time value.",28,null],[3,"Values","","An in-memory temporary table. Can be used in some of the …",null,null],[0,"connector","quaint","A set of abstractions for database connections.",null,null],[5,"sqlite_version","quaint::connector","Returns the SQLite version as a string; e.g., <code>\\\"3.16.2\\\"</code> …",null,[[]]],[3,"Mysql","","A connector interface for the MySQL database.",null,null],[3,"MysqlUrl","","Wraps a connection url and exposes the parsing logic used …",null,null],[3,"PostgreSql","","A connector interface for the PostgreSQL database.",null,null],[4,"SslAcceptMode","","",null,null],[13,"Strict","","",29,null],[13,"AcceptInvalidCerts","","",29,null],[3,"SslParams","","",null,null],[3,"PostgresUrl","","Wraps a connection url and exposes the parsing logic used …",null,null],[8,"ValueIndex","","",null,null],[3,"ResultRow","","An owned version of a <code>Row</code> in a <code>ResultSet</code>. See ResultRowRef…",null,null],[3,"ResultRowRef","","A reference to a <code>Row</code> in a <code>ResultSet</code>. The columns can be …",null,null],[3,"ResultSet","","Encapsulates a set of results and their respective column …",null,null],[3,"ResultSetIterator","","Thin iterator for ResultSet rows. Might become lazy one …",null,null],[4,"ConnectionInfo","","General information about a SQL connection.",null,null],[13,"Postgres","","A PostgreSQL connection URL.",30,null],[13,"Mysql","","A MySQL connection URL.",30,null],[13,"Mssql","","A SQL Server connection URL.",30,null],[13,"Sqlite","","A SQLite connection URL.",30,null],[12,"file_path","quaint::connector::ConnectionInfo","The filesystem path of the SQLite database.",31,null],[12,"db_name","","The name the database is bound to (with <code>ATTACH DATABASE</code>), …",31,null],[13,"InMemorySqlite","quaint::connector","",30,null],[12,"db_name","quaint::connector::ConnectionInfo","",32,null],[4,"SqlFamily","quaint::connector","One of the supported SQL variants.",null,null],[13,"Postgres","","",33,null],[13,"Mysql","","",33,null],[13,"Sqlite","","",33,null],[13,"Mssql","","",33,null],[3,"MssqlUrl","","Wraps a connection url and exposes the parsing logic used …",null,null],[4,"EncryptMode","","TLS mode when connecting to SQL Server.",null,null],[13,"On","","All traffic is encrypted.",34,null],[13,"Off",""," Only the login credentials are encrypted.",34,null],[13,"DangerPlainText","","Nothing is encrypted.",34,null],[4,"IsolationLevel","","Controls the locking and row versioning behavior of …",null,null],[13,"ReadUncommitted","","",35,null],[13,"ReadCommitted","","",35,null],[13,"RepeatableRead","","",35,null],[13,"Snapshot","","",35,null],[13,"Serializable","","",35,null],[3,"Mssql","","A connector interface for the SQL Server database.",null,null],[8,"GetRow","","",null,null],[10,"get_result_row","","",36,[[],[["result",6],["vec",3]]]],[8,"TakeRow","","",null,null],[10,"take_result_row","","",37,[[],[["result",6],["vec",3]]]],[8,"ToColumnNames","","",null,null],[10,"to_column_names","","",38,[[],[["vec",3],["string",3]]]],[8,"Queryable","","Represents a connection or a transaction that can be …",null,null],[10,"query","","Execute the given query.",39,[[["query",4]],[["box",3],["pin",3]]]],[10,"query_raw","","Execute a query given as SQL, interpolating the given …",39,[[],[["box",3],["pin",3]]]],[10,"execute","","Execute the given query, returning the number of affected …",39,[[["query",4]],[["pin",3],["box",3]]]],[10,"execute_raw","","Execute a query given as SQL, interpolating the given …",39,[[],[["pin",3],["box",3]]]],[10,"raw_cmd","","Run a command in the database, for queries that can\'t be …",39,[[],[["pin",3],["box",3]]]],[10,"version","","Return the version of the underlying database, queried …",39,[[],[["pin",3],["box",3]]]],[11,"select","","Execute a <code>SELECT</code> query.",39,[[["select",3]],[["box",3],["pin",3]]]],[11,"insert","","Execute an <code>INSERT</code> query.",39,[[["insert",3]],[["box",3],["pin",3]]]],[11,"update","","Execute an <code>UPDATE</code> query, returning the number of affected …",39,[[["update",3]],[["pin",3],["box",3]]]],[11,"delete","","Execute a <code>DELETE</code> query, returning the number of affected …",39,[[["delete",3]],[["pin",3],["box",3]]]],[11,"server_reset_query","","Execute an arbitrary function in the beginning of each …",39,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"begin_statement","","Statement to begin a transaction",39,[[]]],[8,"TransactionCapable","","A thing that can start a new transaction.",null,null],[11,"start_transaction","","Starts a new transaction",40,[[],[["pin",3],["box",3]]]],[3,"Sqlite","","A connector interface for the SQLite database",null,null],[3,"SqliteParams","","Wraps a connection url and exposes the parsing logic used …",null,null],[12,"connection_limit","","",41,null],[12,"file_path","","This is not a <code>PathBuf</code> because we need to <code>ATTACH</code> the …",41,null],[12,"db_name","","",41,null],[12,"socket_timeout","","",41,null],[3,"Transaction","","A representation of an SQL database transaction. If not …",null,null],[0,"error","quaint","Error module",null,null],[4,"DatabaseConstraint","quaint::error","",null,null],[13,"Fields","","",42,null],[13,"Index","","",42,null],[13,"ForeignKey","","",42,null],[3,"Error","","The error types for database I/O, connection and query …",null,null],[11,"original_code","","The error code sent by the database, if available.",43,[[],["option",4]]],[11,"original_message","","The original error message sent by the database, if …",43,[[],["option",4]]],[11,"kind","","A more specific error type for matching.",43,[[],["errorkind",4]]],[4,"ErrorKind","","",null,null],[13,"QueryError","","",44,null],[13,"DatabaseDoesNotExist","","",44,null],[12,"db_name","quaint::error::ErrorKind","",45,null],[13,"DatabaseAccessDenied","quaint::error","",44,null],[12,"db_name","quaint::error::ErrorKind","",46,null],[13,"DatabaseAlreadyExists","quaint::error","",44,null],[12,"db_name","quaint::error::ErrorKind","",47,null],[13,"AuthenticationFailed","quaint::error","",44,null],[12,"user","quaint::error::ErrorKind","",48,null],[13,"NotFound","quaint::error","",44,null],[13,"TableDoesNotExist","","",44,null],[12,"table","quaint::error::ErrorKind","",49,null],[13,"UniqueConstraintViolation","quaint::error","",44,null],[12,"constraint","quaint::error::ErrorKind","",50,null],[13,"NullConstraintViolation","quaint::error","",44,null],[12,"constraint","quaint::error::ErrorKind","",51,null],[13,"ForeignKeyConstraintViolation","quaint::error","",44,null],[12,"constraint","quaint::error::ErrorKind","",52,null],[13,"ConnectionError","quaint::error","",44,null],[13,"ColumnReadFailure","","",44,null],[13,"ResultIndexOutOfBounds","","",44,null],[13,"ColumnNotFound","","",44,null],[12,"column","quaint::error::ErrorKind","",53,null],[13,"ResultTypeMismatch","quaint::error","",44,null],[13,"DatabaseUrlIsInvalid","","",44,null],[13,"ConversionError","","",44,null],[13,"LengthMismatch","","",44,null],[12,"column","quaint::error::ErrorKind","",54,null],[13,"InvalidConnectionArguments","quaint::error","",44,null],[13,"IoError","","",44,null],[13,"ConnectTimeout","","",44,null],[13,"PoolTimeout","","",44,null],[12,"max_open","quaint::error::ErrorKind","",55,null],[12,"in_use","","",55,null],[13,"SocketTimeout","quaint::error","",44,null],[13,"TlsError","","",44,null],[12,"message","quaint::error::ErrorKind","",56,null],[13,"ValueOutOfRange","quaint::error","",44,null],[12,"message","quaint::error::ErrorKind","",57,null],[13,"FromRowError","quaint::error","",44,null],[0,"pooled","quaint","A connection pool to a SQL database.A pool is created …",null,null],[3,"PooledConnection","quaint::pooled","A connection from the pool. Implements Queryable.",null,null],[3,"Quaint","","The main entry point and an abstraction over database …",null,null],[3,"Builder","","A <code>Builder</code> to construct an instance of a <code>Quaint</code> pool.",null,null],[11,"connection_limit","","The maximum number of connections in the pool.",58,[[]]],[11,"max_idle","","The maximum number of idle connections the pool can …",58,[[]]],[11,"connect_timeout","","A timeout for connecting to the database. If not set, the …",58,[[["duration",3]]]],[11,"pool_timeout","","A timeout for acquiring a connection with the <code>check_out</code> …",58,[[["duration",3]]]],[11,"max_idle_lifetime","","A time how long an idling connection can be kept in the …",58,[[["duration",3]]]],[11,"test_on_check_out","","Perform a health check before returning a connection from …",58,[[]]],[11,"health_check_interval","","Sets the interval how often a connection health will be …",58,[[["duration",3]]]],[11,"build","","Consume the builder and create a new instance of a pool.",58,[[],["quaint",3]]],[11,"builder","","Creates a new builder for a Quaint connection pool with …",59,[[],[["builder",3],["result",6]]]],[11,"capacity","","The number of connections in the pool.",59,[[]]],[11,"check_out","","Reserve a connection from the pool.",59,[[]]],[11,"connection_info","","Info about the connection and underlying database.",59,[[],["connectioninfo",4]]],[0,"prelude","quaint","A \\\"prelude\\\" for users of the <code>quaint</code> crate.",null,null],[4,"ConnectionInfo","quaint::prelude","General information about a SQL connection.",null,null],[13,"Postgres","","A PostgreSQL connection URL.",30,null],[13,"Mysql","","A MySQL connection URL.",30,null],[13,"Mssql","","A SQL Server connection URL.",30,null],[13,"Sqlite","","A SQLite connection URL.",30,null],[12,"file_path","quaint::prelude::ConnectionInfo","The filesystem path of the SQLite database.",31,null],[12,"db_name","","The name the database is bound to (with <code>ATTACH DATABASE</code>), …",31,null],[13,"InMemorySqlite","quaint::prelude","",30,null],[12,"db_name","quaint::prelude::ConnectionInfo","",32,null],[8,"Queryable","quaint::prelude","Represents a connection or a transaction that can be …",null,null],[10,"query","","Execute the given query.",39,[[["query",4]],[["box",3],["pin",3]]]],[10,"query_raw","","Execute a query given as SQL, interpolating the given …",39,[[],[["box",3],["pin",3]]]],[10,"execute","","Execute the given query, returning the number of affected …",39,[[["query",4]],[["pin",3],["box",3]]]],[10,"execute_raw","","Execute a query given as SQL, interpolating the given …",39,[[],[["pin",3],["box",3]]]],[10,"raw_cmd","","Run a command in the database, for queries that can\'t be …",39,[[],[["pin",3],["box",3]]]],[10,"version","","Return the version of the underlying database, queried …",39,[[],[["pin",3],["box",3]]]],[11,"select","quaint::connector","Execute a <code>SELECT</code> query.",39,[[["select",3]],[["box",3],["pin",3]]]],[11,"insert","","Execute an <code>INSERT</code> query.",39,[[["insert",3]],[["box",3],["pin",3]]]],[11,"update","","Execute an <code>UPDATE</code> query, returning the number of affected …",39,[[["update",3]],[["pin",3],["box",3]]]],[11,"delete","","Execute a <code>DELETE</code> query, returning the number of affected …",39,[[["delete",3]],[["pin",3],["box",3]]]],[11,"server_reset_query","","Execute an arbitrary function in the beginning of each …",39,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"begin_statement","","Statement to begin a transaction",39,[[]]],[3,"ResultRow","quaint::prelude","An owned version of a <code>Row</code> in a <code>ResultSet</code>. See ResultRowRef…",null,null],[3,"ResultSet","","Encapsulates a set of results and their respective column …",null,null],[4,"SqlFamily","","One of the supported SQL variants.",null,null],[13,"Postgres","","",33,null],[13,"Mysql","","",33,null],[13,"Sqlite","","",33,null],[13,"Mssql","","",33,null],[3,"Transaction","","A representation of an SQL database transaction. If not …",null,null],[8,"TransactionCapable","","A thing that can start a new transaction.",null,null],[11,"start_transaction","quaint::connector","Starts a new transaction",40,[[],[["pin",3],["box",3]]]],[0,"serde","quaint","Convert results from the database into any type …",null,null],[11,"from_first","quaint::connector","Takes the first row and deserializes it.",60,[[],[["result",6],["deserializeowned",8]]]],[5,"from_rows","quaint::serde","Deserialize each row of a <code>ResultSet</code>.",null,[[["resultset",3]],[["result",6],["vec",3]]]],[5,"from_row","","Deserialize a row into any type implementing <code>Deserialize</code>.",null,[[["resultrow",3]],[["result",6],["deserializeowned",8]]]],[3,"ValueDeserializer","","",null,null],[0,"single","quaint","A single connection abstraction to a SQL database.",null,null],[3,"Quaint","quaint::single","The main entry point and an abstraction over a database …",null,null],[11,"new","","Create a new connection to the database. The connection …",61,[[]]],[11,"new_in_memory","","Open a new SQLite database in memory.",61,[[["option",4],["string",3]],[["result",6],["quaint",3]]]],[11,"connection_info","","Info about the connection and underlying database.",61,[[],["connectioninfo",4]]],[0,"visitor","quaint","Visitors for reading an abstract SQL syntax tree, …",null,null],[3,"Mssql","quaint::visitor","A visitor to generate queries for the SQL Server database.",null,null],[3,"Mysql","","A visitor to generate queries for the MySQL database.",null,null],[3,"Postgres","","A visitor to generate queries for the PostgreSQL database.",null,null],[3,"Sqlite","","A visitor to generate queries for the SQLite database.",null,null],[6,"Result","","",null,null],[8,"Visitor","","A function travelling through the query AST, building the …",null,null],[18,"C_BACKTICK_OPEN","","Opening backtick character to surround identifiers, such …",62,null],[18,"C_BACKTICK_CLOSE","","Closing backtick character to surround identifiers, such …",62,null],[18,"C_WILDCARD","","Wildcard character to be used in <code>LIKE</code> queries.",62,null],[10,"build","","Convert the given <code>Query</code> to an SQL string and a vector of …",62,[[],["result",6]]],[10,"write","","Write to the query.",62,[[["display",8]],["result",6]]],[11,"compatibility_modifications","","A point to modify an incoming query to make it compatible …",62,[[["query",4]],["query",4]]],[11,"surround_with","","",62,[[],["result",6]]],[10,"add_parameter","","When called, the visitor decided to not render the …",62,[[["value",4]]]],[10,"visit_limit_and_offset","","The <code>LIMIT</code> and <code>OFFSET</code> statement in the query",62,[[["option",4],["value",4]],["result",6]]],[10,"visit_insert","","A walk through an <code>INSERT</code> statement",62,[[["insert",3]],["result",6]]],[10,"parameter_substitution","","What to use to substitute a parameter in the query.",62,[[],["result",6]]],[10,"visit_aggregate_to_string","","What to use to substitute a parameter in the query.",62,[[["expression",3]],["result",6]]],[10,"visit_raw_value","","Visit a non-parameterized value.",62,[[["value",4]],["result",6]]],[11,"visit_parameterized","","A visit to a value we parameterize",62,[[["value",4]],["result",6]]],[11,"visit_joins","","The join statements in the query",62,[[["join",4],["vec",3]],["result",6]]],[11,"visit_join_data","","",62,[[["joindata",3]],["result",6]]],[11,"visit_select","","A walk through a <code>SELECT</code> statement",62,[[["select",3]],["result",6]]],[11,"visit_update","","A walk through an <code>UPDATE</code> statement",62,[[["update",3]],["result",6]]],[11,"visit_delete","","A walk through an <code>DELETE</code> statement",62,[[["delete",3]],["result",6]]],[11,"delimited_identifiers","","A helper for delimiting an identifier, surrounding every …",62,[[],["result",6]]],[11,"visit_merge","","Visit an SQL <code>MERGE</code> query.",62,[[["merge",3]],["result",6]]],[11,"visit_query","","A walk through a complete <code>Query</code> statement",62,[[["query",4]],["result",6]]],[11,"visit_selection","","",62,[[["selectquery",4]],["result",6]]],[11,"visit_union","","A walk through a union of <code>SELECT</code> statements",62,[[["union",3]],["result",6]]],[11,"visit_columns","","The selected columns",62,[[["vec",3],["expression",3]],["result",6]]],[11,"visit_operation","","",62,[[["sqlop",4]],["result",6]]],[11,"visit_expression","","A visit to a value used in an expression",62,[[["expression",3]],["result",6]]],[11,"visit_multiple_tuple_comparison","","",62,[[["row",3],["values",3]],["result",6]]],[11,"visit_values","","",62,[[["values",3]],["result",6]]],[11,"visit_table","","A database table identifier",62,[[["table",3]],["result",6]]],[11,"visit_column","","A database column identifier",62,[[["column",3]],["result",6]]],[11,"visit_row","","A row of data used as an expression",62,[[["row",3]],["result",6]]],[11,"visit_conditions","","A walk through the query conditions",62,[[["conditiontree",4]],["result",6]]],[11,"visit_compare","","A comparison expression",62,[[["compare",4]],["result",6]]],[11,"visit_equals","","",62,[[["expression",3]],["result",6]]],[11,"visit_not_equals","","",62,[[["expression",3]],["result",6]]],[11,"visit_ordering","","A visit in the <code>ORDER BY</code> section of the query",62,[[["ordering",3]],["result",6]]],[11,"visit_grouping","","A visit in the <code>GROUP BY</code> section of the query",62,[[["grouping",3]],["result",6]]],[11,"visit_average","","",62,[[["average",3]],["result",6]]],[11,"visit_function","","",62,[[["function",3]],["result",6]]],[11,"visit_partitioning","","",62,[[["over",3]],["result",6]]],[11,"visit_cte","","",62,[[["commontableexpression",3]],["result",6]]],[4,"Value","quaint","A value we must parameterize for the prepared statement. …",null,null],[13,"Integer","","64-bit signed integer.",28,null],[13,"Float","","32-bit floating point.",28,null],[13,"Double","","64-bit floating point.",28,null],[13,"Text","","String value.",28,null],[13,"Enum","","Database enum value.",28,null],[13,"Bytes","","Bytes value.",28,null],[13,"Boolean","","Boolean value.",28,null],[13,"Char","","A single character.",28,null],[13,"Array","","An array value (PostgreSQL).",28,null],[13,"Numeric","","A numeric value.",28,null],[13,"Json","","A JSON value.",28,null],[13,"Xml","","A XML value.",28,null],[13,"Uuid","","An UUID value.",28,null],[13,"DateTime","","A datetime value.",28,null],[13,"Date","","A date value.",28,null],[13,"Time","","A time value.",28,null],[6,"Result","","",null,null],[14,"values","","Convert given set of tuples into <code>Values</code>.",null,null],[14,"col","","Marks a given string or a tuple as a column. Useful when …",null,null],[14,"val","","Marks a given string as a value. Useful when using a …",null,null],[11,"from","quaint::ast","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","quaint::connector","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into_iter","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","quaint::error","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"as_fail","","",43,[[],["fail",8]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"as_fail","","",44,[[],["fail",8]]],[11,"from","quaint::pooled","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","quaint::serde","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","quaint::single","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","quaint::visitor","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"equals","quaint::ast","",65,[[],["compare",4]]],[11,"not_equals","","",65,[[],["compare",4]]],[11,"less_than","","",65,[[],["compare",4]]],[11,"less_than_or_equals","","",65,[[],["compare",4]]],[11,"greater_than","","",65,[[],["compare",4]]],[11,"greater_than_or_equals","","",65,[[],["compare",4]]],[11,"in_selection","","",65,[[],["compare",4]]],[11,"not_in_selection","","",65,[[],["compare",4]]],[11,"like","","",65,[[],["compare",4]]],[11,"not_like","","",65,[[],["compare",4]]],[11,"begins_with","","",65,[[],["compare",4]]],[11,"not_begins_with","","",65,[[],["compare",4]]],[11,"ends_into","","",65,[[],["compare",4]]],[11,"not_ends_into","","",65,[[],["compare",4]]],[11,"is_null","","",65,[[],["compare",4]]],[11,"is_not_null","","",65,[[],["compare",4]]],[11,"between","","",65,[[],["compare",4]]],[11,"not_between","","",65,[[],["compare",4]]],[11,"compare_raw","","",65,[[],["compare",4]]],[11,"equals","","",23,[[],["compare",4]]],[11,"not_equals","","",23,[[],["compare",4]]],[11,"less_than","","",23,[[],["compare",4]]],[11,"less_than_or_equals","","",23,[[],["compare",4]]],[11,"greater_than","","",23,[[],["compare",4]]],[11,"greater_than_or_equals","","",23,[[],["compare",4]]],[11,"in_selection","","",23,[[],["compare",4]]],[11,"not_in_selection","","",23,[[],["compare",4]]],[11,"like","","",23,[[],["compare",4]]],[11,"not_like","","",23,[[],["compare",4]]],[11,"begins_with","","",23,[[],["compare",4]]],[11,"not_begins_with","","",23,[[],["compare",4]]],[11,"ends_into","","",23,[[],["compare",4]]],[11,"not_ends_into","","",23,[[],["compare",4]]],[11,"is_null","","",23,[[],["compare",4]]],[11,"is_not_null","","",23,[[],["compare",4]]],[11,"between","","",23,[[],["compare",4]]],[11,"not_between","","",23,[[],["compare",4]]],[11,"compare_raw","","",23,[[],["compare",4]]],[11,"group","","",0,[[],["groupbydefinition",6]]],[11,"into_group_by_definition","","",0,[[],["groupbydefinition",6]]],[11,"into_group_by_definition","","",75,[[],["groupbydefinition",6]]],[11,"into_group_by_definition","quaint","",104,[[],["groupbydefinition",6]]],[11,"on","quaint::ast","",79,[[],["joindata",3]]],[11,"order","","",0,[[["option",4],["order",4]],["orderdefinition",6]]],[11,"into_order_definition","","",0,[[],["orderdefinition",6]]],[11,"into_order_definition","quaint","",105,[[],["orderdefinition",6]]],[11,"alias","quaint::ast","",0,[[]]],[11,"alias","","",65,[[]]],[11,"alias","","",75,[[]]],[11,"alias","","",26,[[]]],[11,"build","quaint::visitor","",100,[[],["result",6]]],[11,"write","","",100,[[["display",8]],["result",6]]],[11,"add_parameter","","",100,[[["value",4]]]],[11,"compatibility_modifications","","A point to modify an incoming query to make it compatible …",100,[[["query",4]],["query",4]]],[11,"visit_equals","","",100,[[["expression",3]],["result",6]]],[11,"visit_not_equals","","",100,[[["expression",3]],["result",6]]],[11,"visit_raw_value","","",100,[[["value",4]],["result",6]]],[11,"visit_limit_and_offset","","",100,[[["option",4],["value",4]],["result",6]]],[11,"visit_insert","","",100,[[["insert",3]],["result",6]]],[11,"visit_merge","","",100,[[["merge",3]],["result",6]]],[11,"parameter_substitution","","",100,[[],["result",6]]],[11,"visit_aggregate_to_string","","",100,[[["expression",3]],["result",6]]],[11,"visit_multiple_tuple_comparison","","",100,[[["row",3],["values",3]],["result",6]]],[11,"visit_ordering","","",100,[[["ordering",3]],["result",6]]],[11,"visit_average","","",100,[[["average",3]],["result",6]]],[11,"build","","",101,[[],["result",6]]],[11,"write","","",101,[[["display",8]],["result",6]]],[11,"visit_raw_value","","",101,[[["value",4]],["result",6]]],[11,"visit_insert","","",101,[[["insert",3]],["result",6]]],[11,"parameter_substitution","","",101,[[],["result",6]]],[11,"add_parameter","","",101,[[["value",4]]]],[11,"visit_limit_and_offset","","",101,[[["option",4],["value",4]],["result",6]]],[11,"visit_aggregate_to_string","","",101,[[["expression",3]],["result",6]]],[11,"visit_equals","","",101,[[["expression",3]],["result",6]]],[11,"visit_not_equals","","",101,[[["expression",3]],["result",6]]],[11,"build","","",102,[[],["result",6]]],[11,"write","","",102,[[["display",8]],["result",6]]],[11,"add_parameter","","",102,[[["value",4]]]],[11,"parameter_substitution","","",102,[[],["result",6]]],[11,"visit_limit_and_offset","","",102,[[["option",4],["value",4]],["result",6]]],[11,"visit_raw_value","","",102,[[["value",4]],["result",6]]],[11,"visit_insert","","",102,[[["insert",3]],["result",6]]],[11,"visit_aggregate_to_string","","",102,[[["expression",3]],["result",6]]],[11,"visit_equals","","",102,[[["expression",3]],["result",6]]],[11,"visit_not_equals","","",102,[[["expression",3]],["result",6]]],[11,"build","","",103,[[],["result",6]]],[11,"write","","",103,[[["display",8]],["result",6]]],[11,"visit_raw_value","","",103,[[["value",4]],["result",6]]],[11,"visit_insert","","",103,[[["insert",3]],["result",6]]],[11,"parameter_substitution","","",103,[[],["result",6]]],[11,"add_parameter","","",103,[[["value",4]]]],[11,"visit_limit_and_offset","","",103,[[["option",4],["value",4]],["result",6]]],[11,"visit_aggregate_to_string","","",103,[[["expression",3]],["result",6]]],[11,"visit_values","","",103,[[["values",3]],["result",6]]],[11,"query","quaint::connector","",89,[[["query",4]],[["box",3],["pin",3]]]],[11,"execute","","",89,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",89,[[],[["box",3],["pin",3]]]],[11,"execute_raw","","",89,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",89,[[],[["pin",3],["box",3]]]],[11,"version","","",89,[[],[["pin",3],["box",3]]]],[11,"query","","",91,[[["query",4]],[["box",3],["pin",3]]]],[11,"execute","","",91,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",91,[[],[["box",3],["pin",3]]]],[11,"execute_raw","","",91,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",91,[[],[["pin",3],["box",3]]]],[11,"version","","",91,[[],[["pin",3],["box",3]]]],[11,"begin_statement","","",91,[[]]],[11,"query","","",92,[[["query",4]],[["box",3],["pin",3]]]],[11,"execute","","",92,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",92,[[],[["box",3],["pin",3]]]],[11,"execute_raw","","",92,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",92,[[],[["pin",3],["box",3]]]],[11,"version","","",92,[[],[["pin",3],["box",3]]]],[11,"query","","",94,[[["query",4]],[["box",3],["pin",3]]]],[11,"execute","","",94,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",94,[[],[["box",3],["pin",3]]]],[11,"execute_raw","","",94,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",94,[[],[["pin",3],["box",3]]]],[11,"version","","",94,[[],[["pin",3],["box",3]]]],[11,"server_reset_query","","",94,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"query","","",97,[[["query",4]],[["box",3],["pin",3]]]],[11,"execute","","",97,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",97,[[],[["box",3],["pin",3]]]],[11,"execute_raw","","",97,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",97,[[],[["pin",3],["box",3]]]],[11,"version","","",97,[[],[["pin",3],["box",3]]]],[11,"query","quaint::pooled","",98,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",98,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",98,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",98,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",98,[[],[["pin",3],["box",3]]]],[11,"version","","",98,[[],[["pin",3],["box",3]]]],[11,"server_reset_query","","",98,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"begin_statement","","",98,[[]]],[11,"query","quaint::single","",61,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",61,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",61,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",61,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",61,[[],[["pin",3],["box",3]]]],[11,"version","","",61,[[],[["pin",3],["box",3]]]],[11,"begin_statement","","",61,[[]]],[11,"start_transaction","quaint::connector","",91,[[],[["pin",3],["box",3]]]],[11,"from","quaint::ast","",1,[[]]],[11,"from","","",65,[[["column",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["string",3]]]],[11,"from","","",0,[[],["column",3]]],[11,"from","","",5,[[["compare",4]]]],[11,"from","","",65,[[["compare",4]]]],[11,"from","","",65,[[["conditiontree",4]]]],[11,"from","","",5,[[["select",3]]]],[11,"from","","",21,[[["delete",3]]]],[11,"from","","",65,[[["row",3]]]],[11,"from","","",65,[[["function",3]]]],[11,"from","","",65,[[["raw",3]]]],[11,"from","","",65,[[["values",3]]]],[11,"from","","",65,[[["sqlop",4]]]],[11,"from","","",65,[[]]],[11,"from","","",65,[[["vec",3]]]],[11,"from","","",65,[[["expressionkind",4]]]],[11,"from","","",75,[[["rownumber",3]]]],[11,"from","","",65,[[["rownumber",3]]]],[11,"from","","",75,[[["count",3]]]],[11,"from","","",65,[[["count",3]]]],[11,"from","","",75,[[["aggregatetostring",3]]]],[11,"from","","",65,[[["aggregatetostring",3]]]],[11,"from","","",75,[[["average",3]]]],[11,"from","","",65,[[["average",3]]]],[11,"from","","",75,[[["sum",3]]]],[11,"from","","",65,[[["sum",3]]]],[11,"from","","",75,[[["lower",3]]]],[11,"from","","",65,[[["lower",3]]]],[11,"from","","",75,[[["upper",3]]]],[11,"from","","",65,[[["upper",3]]]],[11,"from","","",75,[[["minimum",3]]]],[11,"from","","",65,[[["minimum",3]]]],[11,"from","","",75,[[["maximum",3]]]],[11,"from","","",65,[[["maximum",3]]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[["vec",3]]]],[11,"from","","",21,[[["insert",3]]]],[11,"from","","",76,[[["singlerowinsert",3]]]],[11,"from","","",76,[[["multirowinsert",3]]]],[11,"from","","",21,[[["singlerowinsert",3]],["query",4]]],[11,"from","","",21,[[["multirowinsert",3]],["query",4]]],[11,"from","","",79,[[]]],[11,"from","","",21,[[]]],[11,"from","","",22,[[["select",3]]]],[11,"from","","",22,[[["union",3]]]],[11,"from","","",21,[[["selectquery",4]]]],[11,"from","","",23,[[["vec",3]],["row",3]]],[11,"from","","",23,[[]]],[11,"from","","",23,[[]]],[11,"from","","",23,[[]]],[11,"from","","",23,[[]]],[11,"from","","",23,[[]]],[11,"from","","",65,[[["select",3]],["expression",3]]],[11,"from","","",21,[[["select",3]],["query",4]]],[11,"from","","",26,[[],["table",3]]],[11,"from","","",26,[[["string",3]],["table",3]]],[11,"from","","",26,[[],["table",3]]],[11,"from","","",26,[[],["table",3]]],[11,"from","","",26,[[],["table",3]]],[11,"from","","",26,[[],["table",3]]],[11,"from","","",26,[[["string",3]]]],[11,"from","","",26,[[["row",3],["vec",3]]]],[11,"from","","",26,[[["values",3]]]],[11,"from","","",26,[[],["table",3]]],[11,"from","","",26,[[["select",3]]]],[11,"from","","",21,[[["union",3]]]],[11,"from","","",65,[[["union",3]]]],[11,"from","","",21,[[["update",3]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["option",4]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["option",4]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["option",4]]]],[11,"from","","",28,[[["string",3]]]],[11,"from","","",28,[[["option",4],["string",3]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["option",4]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["option",4]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["option",4]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["option",4]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["option",4]]]],[11,"from","","",28,[[["utc",3],["datetime",3]]]],[11,"from","","",28,[[["option",4],["datetime",3]]]],[11,"from","","",28,[[["naivetime",3]]]],[11,"from","","",28,[[["option",4],["naivetime",3]]]],[11,"from","","",28,[[["naivedate",3]]]],[11,"from","","",28,[[["option",4],["naivedate",3]]]],[11,"from","","",28,[[["bigdecimal",3]]]],[11,"from","","",28,[[["option",4],["bigdecimal",3]]]],[11,"from","","",28,[[["jsonvalue",4]]]],[11,"from","","",28,[[["jsonvalue",4],["option",4]]]],[11,"from","","",28,[[["uuid",3]]]],[11,"from","","",28,[[["uuid",3],["option",4]]]],[11,"from","","",85,[[]]],[11,"from","quaint::error","",43,[[["error",4]],["error",3]]],[11,"from","","",43,[[["error",4]],["error",3]]],[11,"from","","",43,[[["error",3]],["error",3]]],[11,"from","","",43,[[["error",3]],["error",3]]],[11,"from","","",43,[[["error",3]],["error",3]]],[11,"from","","",43,[[["error",4]],["error",3]]],[11,"from","","",43,[[["fromsqlerror",4]],["error",3]]],[11,"from","","",44,[[["error",3]]]],[11,"from","","",43,[[["parsebigdecimalerror",4]]]],[11,"from","","",43,[[["error",3]]]],[11,"from","","",43,[[["error",3]]]],[11,"from","","",43,[[["tryfrominterror",3]]]],[11,"from","","",43,[[["error",3]],["error",3]]],[11,"from","","",43,[[["parseerror",4]],["error",3]]],[11,"from","","",43,[[["error",3]],["error",3]]],[11,"from","","",43,[[["parseinterror",3]],["error",3]]],[11,"from","","",43,[[["parseboolerror",3]],["error",3]]],[11,"from","","",43,[[["fromutf8error",3]],["error",3]]],[11,"into_iter","quaint::ast","",23,[[]]],[11,"into_iter","","",85,[[]]],[11,"into_iter","quaint::connector","",86,[[]]],[11,"into_iter","","",60,[[]]],[11,"next","","",88,[[],["option",4]]],[11,"clone","quaint::ast","",2,[[],["typefamily",4]]],[11,"clone","","",0,[[],["column",3]]],[11,"clone","","",1,[[],["defaultvalue",4]]],[11,"clone","","",4,[[],["compare",4]]],[11,"clone","","",5,[[],["conditiontree",4]]],[11,"clone","","",63,[[],["commontableexpression",3]]],[11,"clone","","",64,[[],["delete",3]]],[11,"clone","","",65,[[],["expression",3]]],[11,"clone","","",8,[[],["expressionkind",4]]],[11,"clone","","",66,[[],["aggregatetostring",3]]],[11,"clone","","",67,[[],["average",3]]],[11,"clone","","",68,[[],["count",3]]],[11,"clone","","",69,[[],["lower",3]]],[11,"clone","","",70,[[],["maximum",3]]],[11,"clone","","",71,[[],["minimum",3]]],[11,"clone","","",72,[[],["rownumber",3]]],[11,"clone","","",73,[[],["sum",3]]],[11,"clone","","",74,[[],["upper",3]]],[11,"clone","","",75,[[],["function",3]]],[11,"clone","","",9,[[],["grouping",3]]],[11,"clone","","",12,[[],["indexdefinition",4]]],[11,"clone","","",76,[[],["insert",3]]],[11,"clone","","",77,[[],["singlerowinsert",3]]],[11,"clone","","",78,[[],["multirowinsert",3]]],[11,"clone","","",13,[[],["onconflict",4]]],[11,"clone","","",79,[[],["joindata",3]]],[11,"clone","","",14,[[],["join",4]]],[11,"clone","","",16,[[],["sqlop",4]]],[11,"clone","","",20,[[],["ordering",3]]],[11,"clone","","",18,[[],["order",4]]],[11,"clone","","",80,[[],["over",3]]],[11,"clone","","",21,[[],["query",4]]],[11,"clone","","",22,[[],["selectquery",4]]],[11,"clone","","",23,[[],["row",3]]],[11,"clone","","",81,[[],["select",3]]],[11,"clone","","",25,[[],["tabletype",4]]],[11,"clone","","",26,[[],["table",3]]],[11,"clone","","",82,[[],["union",3]]],[11,"clone","","",83,[[],["update",3]]],[11,"clone","","",84,[[],["raw",3]]],[11,"clone","","",28,[[],["value",4]]],[11,"clone","","",85,[[],["values",3]]],[11,"clone","quaint::connector","",30,[[],["connectioninfo",4]]],[11,"clone","","",33,[[],["sqlfamily",4]]],[11,"clone","","",90,[[],["mssqlurl",3]]],[11,"clone","","",34,[[],["encryptmode",4]]],[11,"clone","","",35,[[],["isolationlevel",4]]],[11,"clone","","",93,[[],["mysqlurl",3]]],[11,"clone","","",29,[[],["sslacceptmode",4]]],[11,"clone","","",95,[[],["sslparams",3]]],[11,"clone","","",96,[[],["postgresurl",3]]],[11,"clone","quaint::pooled","",59,[[],["quaint",3]]],[11,"clone","quaint::single","",61,[[],["quaint",3]]],[11,"default","quaint::ast","",0,[[],["column",3]]],[11,"default","","",1,[[]]],[11,"default","","",5,[[]]],[11,"default","","",72,[[],["rownumber",3]]],[11,"default","","",9,[[],["grouping",3]]],[11,"default","","",20,[[],["ordering",3]]],[11,"default","","",80,[[],["over",3]]],[11,"default","","",23,[[],["row",3]]],[11,"default","","",81,[[],["select",3]]],[11,"default","","",82,[[],["union",3]]],[11,"default","","",85,[[],["values",3]]],[11,"default","quaint::connector","",60,[[],["resultset",3]]],[11,"eq","quaint::ast","",1,[[["defaultvalue",4]]]],[11,"ne","","",1,[[["defaultvalue",4]]]],[11,"eq","","",0,[[["column",3]]]],[11,"eq","","",4,[[["compare",4]]]],[11,"ne","","",4,[[["compare",4]]]],[11,"eq","","",5,[[["conditiontree",4]]]],[11,"ne","","",5,[[["conditiontree",4]]]],[11,"eq","","",63,[[["commontableexpression",3]]]],[11,"ne","","",63,[[["commontableexpression",3]]]],[11,"eq","","",64,[[["delete",3]]]],[11,"ne","","",64,[[["delete",3]]]],[11,"eq","","",65,[[["expression",3]]]],[11,"ne","","",65,[[["expression",3]]]],[11,"eq","","",8,[[["expressionkind",4]]]],[11,"ne","","",8,[[["expressionkind",4]]]],[11,"eq","","",66,[[["aggregatetostring",3]]]],[11,"ne","","",66,[[["aggregatetostring",3]]]],[11,"eq","","",67,[[["average",3]]]],[11,"ne","","",67,[[["average",3]]]],[11,"eq","","",68,[[["count",3]]]],[11,"ne","","",68,[[["count",3]]]],[11,"eq","","",69,[[["lower",3]]]],[11,"ne","","",69,[[["lower",3]]]],[11,"eq","","",70,[[["maximum",3]]]],[11,"ne","","",70,[[["maximum",3]]]],[11,"eq","","",71,[[["minimum",3]]]],[11,"ne","","",71,[[["minimum",3]]]],[11,"eq","","",72,[[["rownumber",3]]]],[11,"ne","","",72,[[["rownumber",3]]]],[11,"eq","","",73,[[["sum",3]]]],[11,"ne","","",73,[[["sum",3]]]],[11,"eq","","",74,[[["upper",3]]]],[11,"ne","","",74,[[["upper",3]]]],[11,"eq","","",75,[[["function",3]]]],[11,"ne","","",75,[[["function",3]]]],[11,"eq","","",9,[[["grouping",3]]]],[11,"ne","","",9,[[["grouping",3]]]],[11,"eq","","",12,[[["indexdefinition",4]]]],[11,"ne","","",12,[[["indexdefinition",4]]]],[11,"eq","","",76,[[["insert",3]]]],[11,"ne","","",76,[[["insert",3]]]],[11,"eq","","",77,[[["singlerowinsert",3]]]],[11,"ne","","",77,[[["singlerowinsert",3]]]],[11,"eq","","",78,[[["multirowinsert",3]]]],[11,"ne","","",78,[[["multirowinsert",3]]]],[11,"eq","","",13,[[["onconflict",4]]]],[11,"eq","","",79,[[["joindata",3]]]],[11,"ne","","",79,[[["joindata",3]]]],[11,"eq","","",14,[[["join",4]]]],[11,"ne","","",14,[[["join",4]]]],[11,"eq","","",16,[[["sqlop",4]]]],[11,"ne","","",16,[[["sqlop",4]]]],[11,"eq","","",20,[[["ordering",3]]]],[11,"ne","","",20,[[["ordering",3]]]],[11,"eq","","",18,[[["order",4]]]],[11,"eq","","",80,[[["over",3]]]],[11,"ne","","",80,[[["over",3]]]],[11,"eq","","",21,[[["query",4]]]],[11,"ne","","",21,[[["query",4]]]],[11,"eq","","",22,[[["selectquery",4]]]],[11,"ne","","",22,[[["selectquery",4]]]],[11,"eq","","",23,[[["row",3]]]],[11,"ne","","",23,[[["row",3]]]],[11,"eq","","",81,[[["select",3]]]],[11,"ne","","",81,[[["select",3]]]],[11,"eq","","",25,[[["tabletype",4]]]],[11,"ne","","",25,[[["tabletype",4]]]],[11,"eq","","",26,[[["table",3]]]],[11,"eq","","",82,[[["union",3]]]],[11,"ne","","",82,[[["union",3]]]],[11,"eq","","",83,[[["update",3]]]],[11,"ne","","",83,[[["update",3]]]],[11,"eq","","",84,[[["raw",3]]]],[11,"ne","","",84,[[["raw",3]]]],[11,"eq","","",28,[[["value",4]]]],[11,"ne","","",28,[[["value",4]]]],[11,"eq","","",85,[[["values",3]]]],[11,"ne","","",85,[[["values",3]]]],[11,"eq","quaint::connector","",33,[[["sqlfamily",4]]]],[11,"eq","","",29,[[["sslacceptmode",4]]]],[11,"eq","quaint::error","",42,[[["databaseconstraint",4]]]],[11,"ne","","",42,[[["databaseconstraint",4]]]],[11,"fmt","quaint::ast","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::connector","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::error","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::serde","",99,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::single","",61,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::ast","",28,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::connector","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::error","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"div","quaint::ast","",65,[[]]],[11,"rem","","",65,[[]]],[11,"sub","","",65,[[]]],[11,"add","","",65,[[]]],[11,"mul","","",65,[[]]],[11,"index","quaint::connector","",87,[[],["value",4]]],[11,"index","","",86,[[],["value",4]]],[11,"try_from","quaint::ast","",28,[[["columndata",4]],["result",6]]],[11,"try_from","quaint::connector","",41,[[],["result",6]]],[11,"try_from","","",97,[[],["result",6]]],[11,"from_str","","",34,[[],["result",6]]],[11,"from_str","","",35,[[],["result",6]]],[11,"deserialize_any","quaint::serde","",99,[[["visitor",8]],["result",4]]],[11,"deserialize_option","","",99,[[["visitor",8]],["result",4]]],[11,"deserialize_bytes","","",99,[[],["result",4]]],[11,"deserialize_bool","","",99,[[],["result",4]]],[11,"deserialize_i8","","",99,[[],["result",4]]],[11,"deserialize_i16","","",99,[[],["result",4]]],[11,"deserialize_i32","","",99,[[],["result",4]]],[11,"deserialize_i64","","",99,[[],["result",4]]],[11,"deserialize_u8","","",99,[[],["result",4]]],[11,"deserialize_u16","","",99,[[],["result",4]]],[11,"deserialize_u32","","",99,[[],["result",4]]],[11,"deserialize_u64","","",99,[[],["result",4]]],[11,"deserialize_f32","","",99,[[],["result",4]]],[11,"deserialize_f64","","",99,[[],["result",4]]],[11,"deserialize_char","","",99,[[],["result",4]]],[11,"deserialize_str","","",99,[[],["result",4]]],[11,"deserialize_byte_buf","","",99,[[],["result",4]]],[11,"deserialize_string","","",99,[[],["result",4]]],[11,"deserialize_unit","","",99,[[],["result",4]]],[11,"deserialize_unit_struct","","",99,[[],["result",4]]],[11,"deserialize_newtype_struct","","",99,[[],["result",4]]],[11,"deserialize_seq","","",99,[[],["result",4]]],[11,"deserialize_tuple","","",99,[[],["result",4]]],[11,"deserialize_tuple_struct","","",99,[[],["result",4]]],[11,"deserialize_map","","",99,[[],["result",4]]],[11,"deserialize_struct","","",99,[[],["result",4]]],[11,"deserialize_enum","","",99,[[],["result",4]]],[11,"deserialize_identifier","","",99,[[],["result",4]]],[11,"deserialize_ignored_any","","",99,[[],["result",4]]],[11,"into_deserializer","quaint::ast","",28,[[]]],[11,"to_sql","","",28,[[],["columndata",4]]],[11,"to_sql","","",28,[[["postgrestype",3],["bytesmut",3]],[["box",3],["isnull",4],["result",4]]]],[11,"accepts","","",28,[[["postgrestype",3]]]],[11,"to_sql_checked","","",28,[[["bytesmut",3],["type",3]],[["box",3],["isnull",4],["result",4]]]],[11,"to_sql","","",28,[[],[["tosqloutput",4],["rusqlerror",4],["result",4]]]],[11,"default","","Sets the default value for the column.",0,[[]]],[11,"type_family","","Sets a type family, used mainly for SQL Server <code>OUTPUT</code> …",0,[[["typefamily",4]]]],[11,"default_autogen","","True when the default value is set and automatically …",0,[[]]],[11,"new","","Create a column definition.",0,[[]]],[11,"table","","Include the table name in the column expression.",0,[[]]],[11,"opt_table","","Include the table name in the column expression, if table …",0,[[["option",4]]]],[11,"and","","An <code>AND</code> statement, is true when both sides are true.",5,[[],["conditiontree",4]]],[11,"or","","An <code>OR</code> statement, is true when one side is true.",5,[[],["conditiontree",4]]],[11,"not","","A <code>NOT</code> statement, is true when the expression is false.",5,[[],["conditiontree",4]]],[11,"single","","A single leaf, is true when the expression is true.",5,[[],["conditiontree",4]]],[11,"invert_if","","Inverts the entire condition tree if condition is met.",5,[[],["conditiontree",4]]],[11,"column","","Selects a named value from the nested expresion. The …",63,[[]]],[11,"into_cte","","",7,[[],["commontableexpression",3]]],[11,"from_table","","Creates a new <code>DELETE</code> statement for the given table.",64,[[]]],[11,"so_that","","Adds <code>WHERE</code> conditions to the query. See Comparable for …",64,[[]]],[11,"kind","","The type of the expression, dictates how it\'s implemented …",65,[[],["expressionkind",4]]],[11,"alias","","The name alias of the expression, how it can referred in …",65,[[],["option",4]]],[11,"is_asterisk","","",65,[[]]],[11,"order_by","","Define the order of the row number. Is the row order if …",72,[[]]],[11,"partition_by","","Define the partitioning of the row number",72,[[]]],[11,"new","","",9,[[["vec",3],["groupbydefinition",6]]]],[11,"is_empty","","",9,[[]]],[11,"has_autogen","","At least one of the index columns has automatically …",12,[[]]],[11,"contains","","True if the index definition contains the given column.",12,[[["column",3]]]],[11,"single_into","","Creates a new single row <code>INSERT</code> statement for the given …",76,[[],["singlerowinsert",3]]],[11,"single","","",76,[[],["singlerowinsert",3]]],[11,"multi_into","","Creates a new multi row <code>INSERT</code> statement for the given …",76,[[],["multirowinsert",3]]],[11,"multi","","",76,[[],["multirowinsert",3]]],[11,"expression_into","","",76,[[]]],[11,"on_conflict","","Sets the conflict resolution strategy.",76,[[["onconflict",4]]]],[11,"returning","","Sets the returned columns.",76,[[]]],[11,"value","","Adds a new value to the <code>INSERT</code> statement",77,[[],["singlerowinsert",3]]],[11,"build","","Convert into a common <code>Insert</code> statement.",77,[[],["insert",3]]],[11,"values","","Adds a new row to be inserted.",78,[[]]],[11,"build","","Convert into a common <code>Insert</code> statement.",78,[[],["insert",3]]],[11,"all_from","","Implement a join with no conditions.",79,[[]]],[11,"new","","",20,[[["vec",3],["orderdefinition",6]]]],[11,"is_empty","","",20,[[]]],[11,"ascend","","Change the order to <code>ASC</code>",19,[[],["orderdefinition",6]]],[11,"descend","","Change the order to <code>DESC</code>",19,[[],["orderdefinition",6]]],[11,"is_empty","","",80,[[]]],[11,"is_select","","",21,[[]]],[11,"is_insert","","",21,[[]]],[11,"is_update","","",21,[[]]],[11,"is_delete","","",21,[[]]],[11,"is_union","","",21,[[]]],[11,"named_selection","","Finds all named values or columns from the selection.",22,[[],[["vec",3],["string",3]]]],[11,"new","","",23,[[]]],[11,"with_capacity","","",23,[[]]],[11,"pop","","",23,[[],[["option",4],["expression",3]]]],[11,"push","","",23,[[]]],[11,"is_empty","","",23,[[]]],[11,"len","","",23,[[]]],[11,"from_table","","Creates a new <code>SELECT</code> statement for the given table.",81,[[]]],[11,"and_from","","Adds a table to be selected.",81,[[]]],[11,"value","","Selects a static value as the column.",81,[[]]],[11,"column","","Adds a column to be selected.",81,[[]]],[11,"columns","","A bulk method to select multiple values.",81,[[]]],[11,"distinct","","Adds <code>DISTINCT</code> to the select query.",81,[[]]],[11,"so_that","","Adds <code>WHERE</code> conditions to the query, replacing the …",81,[[]]],[11,"and_where","","Adds an additional <code>WHERE</code> condition to the query combining …",81,[[]]],[11,"or_where","","Adds an additional <code>WHERE</code> condition to the query combining …",81,[[]]],[11,"inner_join","","Adds <code>INNER JOIN</code> clause to the query.",81,[[]]],[11,"left_join","","Adds <code>LEFT JOIN</code> clause to the query.",81,[[]]],[11,"right_join","","Adds <code>RIGHT JOIN</code> clause to the query.",81,[[]]],[11,"full_join","","Adds <code>FULL JOIN</code> clause to the query.",81,[[]]],[11,"order_by","","Adds an ordering to the <code>ORDER BY</code> section.",81,[[]]],[11,"group_by","","Adds a grouping to the <code>GROUP BY</code> section.",81,[[]]],[11,"having","","Adds group conditions to a query. Should be combined …",81,[[]]],[11,"limit","","Sets the <code>LIMIT</code> value.",81,[[]]],[11,"offset","","Sets the <code>OFFSET</code> value.",81,[[]]],[11,"with","","Adds a common table expression to the select.",81,[[["commontableexpression",3]]]],[11,"database","","Define in which database the table is located",26,[[]]],[11,"asterisk","","A qualified asterisk to this table",26,[[],["expression",3]]],[11,"add_unique_index","","Add unique index definition.",26,[[]]],[11,"new","","",82,[[["select",3]]]],[11,"all","","Creates a union with previous selection and the given …",82,[[["select",3]]]],[11,"distinct","","Creates a union with previous selection and the given …",82,[[["select",3]]]],[11,"table","","Creates the basis for an <code>UPDATE</code> statement to the given …",83,[[]]],[11,"set","","Add another column value assignment to the query",83,[[],["update",3]]],[11,"so_that","","Adds <code>WHERE</code> conditions to the query. See Comparable for …",83,[[]]],[11,"integer","","Creates a new integer value.",28,[[]]],[11,"numeric","","Creates a new decimal value.",28,[[["bigdecimal",3]]]],[11,"float","","Creates a new float value.",28,[[]]],[11,"double","","Creates a new double value.",28,[[]]],[11,"text","","Creates a new string value.",28,[[]]],[11,"enum_variant","","Creates a new enum value.",28,[[]]],[11,"bytes","","Creates a new bytes value.",28,[[]]],[11,"boolean","","Creates a new boolean value.",28,[[]]],[11,"character","","Creates a new character value.",28,[[]]],[11,"array","","Creates a new array value.",28,[[]]],[11,"uuid","","Creates a new uuid value.",28,[[["uuid",3]]]],[11,"datetime","","Creates a new datetime value.",28,[[["utc",3],["datetime",3]]]],[11,"date","","Creates a new date value.",28,[[["naivedate",3]]]],[11,"time","","Creates a new time value.",28,[[["naivetime",3]]]],[11,"json","","Creates a new JSON value.",28,[[["value",4]]]],[11,"xml","","Creates a new XML value.",28,[[]]],[11,"is_null","","<code>true</code> if the <code>Value</code> is null.",28,[[]]],[11,"is_text","","<code>true</code> if the <code>Value</code> is text.",28,[[]]],[11,"as_str","","Returns a &str if the value is text, otherwise <code>None</code>.",28,[[],["option",4]]],[11,"as_char","","Returns a char if the value is a char, otherwise <code>None</code>.",28,[[],["option",4]]],[11,"to_string","","Returns a cloned String if the value is text, otherwise …",28,[[],[["option",4],["string",3]]]],[11,"into_string","","Transforms the <code>Value</code> to a <code>String</code> if it\'s text, otherwise …",28,[[],[["option",4],["string",3]]]],[11,"is_bytes","","Returns whether this value is the <code>Bytes</code> variant.",28,[[]]],[11,"as_bytes","","Returns a bytes slice if the value is text or a byte …",28,[[],["option",4]]],[11,"to_bytes","","Returns a cloned <code>Vec<u8></code> if the value is text or a byte …",28,[[],[["option",4],["vec",3]]]],[11,"is_integer","","<code>true</code> if the <code>Value</code> is an integer.",28,[[]]],[11,"as_i64","","Returns an <code>i64</code> if the value is an integer, otherwise <code>None</code>.",28,[[],["option",4]]],[11,"as_f64","","Returns a <code>f64</code> if the value is a double, otherwise <code>None</code>.",28,[[],["option",4]]],[11,"as_f32","","Returns a <code>f32</code> if the value is a double, otherwise <code>None</code>.",28,[[],["option",4]]],[11,"is_numeric","","<code>true</code> if the <code>Value</code> is a numeric value or can be converted …",28,[[]]],[11,"into_numeric","","Returns a bigdecimal, if the value is a numeric, float or …",28,[[],[["option",4],["bigdecimal",3]]]],[11,"as_numeric","","Returns a reference to a bigdecimal, if the value is a …",28,[[],[["bigdecimal",3],["option",4]]]],[11,"is_bool","","<code>true</code> if the <code>Value</code> is a boolean value.",28,[[]]],[11,"as_bool","","Returns a bool if the value is a boolean, otherwise <code>None</code>.",28,[[],["option",4]]],[11,"is_array","","<code>true</code> if the <code>Value</code> is an Array.",28,[[]]],[11,"is_uuid","","<code>true</code> if the <code>Value</code> is of UUID type.",28,[[]]],[11,"as_uuid","","Returns an UUID if the value is of UUID type, otherwise …",28,[[],[["uuid",3],["option",4]]]],[11,"is_datetime","","<code>true</code> if the <code>Value</code> is a DateTime.",28,[[]]],[11,"as_datetime","","Returns a <code>DateTime</code> if the value is a <code>DateTime</code>, otherwise …",28,[[],[["option",4],["datetime",3]]]],[11,"is_date","","<code>true</code> if the <code>Value</code> is a Date.",28,[[]]],[11,"as_date","","Returns a <code>NaiveDate</code> if the value is a <code>Date</code>, otherwise <code>None</code>…",28,[[],[["naivedate",3],["option",4]]]],[11,"is_time","","<code>true</code> if the <code>Value</code> is a <code>Time</code>.",28,[[]]],[11,"as_time","","Returns a <code>NaiveTime</code> if the value is a <code>Time</code>, otherwise <code>None</code>…",28,[[],[["naivetime",3],["option",4]]]],[11,"is_json","","<code>true</code> if the <code>Value</code> is a JSON value.",28,[[]]],[11,"as_json","","Returns a reference to a JSON Value if of Json type, …",28,[[],[["value",4],["option",4]]]],[11,"into_json","","Transforms to a JSON Value if of Json type, otherwise <code>None</code>…",28,[[],[["value",4],["option",4]]]],[11,"into_vec","","Returns a Vec if the value is an array of T, otherwise …",28,[[],[["vec",3],["option",4]]]],[11,"empty","","Create a new empty in-memory set of values.",85,[[]]],[11,"new","","Create a new in-memory set of values.",85,[[["row",3],["vec",3]]]],[11,"with_capacity","","Create a new in-memory set of values with an allocated …",85,[[]]],[11,"push","","Add value to the temporary table.",85,[[]]],[11,"len","","The number of rows in the in-memory table.",85,[[]]],[11,"is_empty","","True if has no rows.",85,[[]]],[11,"row_len","","",85,[[]]],[11,"flatten_row","","",85,[[],[["option",4],["row",3]]]],[11,"from_url","quaint::connector","Parse <code>ConnectionInfo</code> out from an SQL connection string.",30,[[],["result",6]]],[11,"dbname","","The provided database name. This will be <code>None</code> on SQLite.",30,[[],["option",4]]],[11,"schema_name","","This is what item names are prefixed with in queries.",30,[[]]],[11,"host","","The provided database host. This will be <code>\\\"localhost\\\"</code> on …",30,[[]]],[11,"username","","The provided database user name. This will be <code>None</code> on …",30,[[],[["cow",4],["option",4]]]],[11,"file_path","","The database file for SQLite, otherwise <code>None</code>.",30,[[],["option",4]]],[11,"sql_family","","The family of databases connected.",30,[[],["sqlfamily",4]]],[11,"port","","The provided database port, if applicable.",30,[[],["option",4]]],[11,"pg_bouncer","","Whether the pgbouncer mode is enabled.",30,[[]]],[11,"database_location","","A string describing the database location, meant for …",30,[[],["string",3]]],[11,"as_str","","Get a string representation of the family.",33,[[]]],[11,"from_scheme","","Convert url scheme to an SqlFamily.",33,[[],["option",4]]],[11,"scheme_is_supported","","Check if a family exists for the given scheme.",33,[[]]],[11,"is_postgres","","True, if family is PostgreSQL.",33,[[]]],[11,"is_mysql","","True, if family is MySQL.",33,[[]]],[11,"is_sqlite","","True, if family is SQLite.",33,[[]]],[11,"is_mssql","","True, if family is SQL Server.",33,[[]]],[11,"select","","Execute a <code>SELECT</code> query.",39,[[["select",3]],[["box",3],["pin",3]]]],[11,"insert","","Execute an <code>INSERT</code> query.",39,[[["insert",3]],[["box",3],["pin",3]]]],[11,"update","","Execute an <code>UPDATE</code> query, returning the number of affected …",39,[[["update",3]],[["pin",3],["box",3]]]],[11,"delete","","Execute a <code>DELETE</code> query, returning the number of affected …",39,[[["delete",3]],[["pin",3],["box",3]]]],[11,"server_reset_query","","Execute an arbitrary function in the beginning of each …",39,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"begin_statement","","Statement to begin a transaction",39,[[]]],[11,"start_transaction","","Starts a new transaction",40,[[],[["pin",3],["box",3]]]],[11,"at","","Take a value from a certain position in the row, if …",86,[[],[["option",4],["value",4]]]],[11,"get","","Take a value with the given column name from the row. …",86,[[],[["option",4],["value",4]]]],[11,"as_ref","","Make a referring ResultRowRef.",86,[[],["resultrowref",3]]],[11,"into_single","","",86,[[],[["value",4],["result",6]]]],[11,"at","","Take a value from a certain position in the row, if …",87,[[],[["option",4],["value",4]]]],[11,"get","","Take a value with the given column name from the row.",87,[[],[["option",4],["value",4]]]],[11,"new","","Creates a new instance, bound to the given column names …",60,[[["vec",3],["vec",3],["vec",3],["string",3]]]],[11,"last_insert_id","","The last id inserted, if available. Only works on certain …",60,[[],["option",4]]],[11,"columns","","An iterator of column names.",60,[[],["vec",3]]],[11,"len","","Returns the number of rows in the <code>ResultSet</code>.",60,[[]]],[11,"is_empty","","Returns true if the <code>ResultSet</code> contains no rows.",60,[[]]],[11,"first","","Returns the first row of the <code>ResultSet</code>, or None if the …",60,[[],[["resultrowref",3],["option",4]]]],[11,"get","","Returns a reference to a row in a given position.",60,[[],[["resultrowref",3],["option",4]]]],[11,"into_single","","Takes the first row if existing, otherwise returns error.",60,[[],[["result",6],["resultrow",3]]]],[11,"commit","","Commit the changes to the database and consume the …",89,[[]]],[11,"rollback","","Rolls back the changes to the database.",89,[[]]],[11,"connection_limit","","Maximum number of connections the pool can have (if used …",90,[[],["option",4]]],[11,"socket_timeout","","A duration how long one query can take.",90,[[],[["duration",3],["option",4]]]],[11,"connect_timeout","","A duration how long we can try to connect to the database.",90,[[],[["duration",3],["option",4]]]],[11,"pool_timeout","","A pool check_out timeout.",90,[[],[["duration",3],["option",4]]]],[11,"transaction_isolation_level","","The isolation level of a transaction.",90,[[],[["isolationlevel",4],["option",4]]]],[11,"dbname","","Name of the database.",90,[[]]],[11,"schema","","The prefix which to use when querying database.",90,[[]]],[11,"host","","Database hostname.",90,[[]]],[11,"username","","The username to use when connecting to the database.",90,[[],["option",4]]],[11,"port","","Database port.",90,[[]]],[11,"connection_string","","The JDBC connection string",90,[[]]],[11,"new","","Creates a new connection to SQL Server.",91,[[["mssqlurl",3]]]],[11,"new","","",90,[[],["result",6]]],[11,"new","","Parse <code>Url</code> to <code>MysqlUrl</code>. Returns error for mistyped …",93,[[["url",3]],[["result",4],["error",3]]]],[11,"url","","The bare <code>Url</code> to the database.",93,[[],["url",3]]],[11,"username","","The percent-decoded database username.",93,[[],["cow",4]]],[11,"password","","The percent-decoded database password.",93,[[],[["cow",4],["option",4]]]],[11,"dbname","","Name of the database connected. Defaults to <code>mysql</code>.",93,[[]]],[11,"host","","The database host. If <code>socket</code> and <code>host</code> are not set, …",93,[[]]],[11,"socket","","If set, connected to the database through a Unix socket.",93,[[],["option",4]]],[11,"port","","The database port, defaults to <code>3306</code>.",93,[[]]],[11,"connect_timeout","","The connection timeout.",93,[[],[["duration",3],["option",4]]]],[11,"pool_timeout","","The pool check_out timeout",93,[[],[["duration",3],["option",4]]]],[11,"socket_timeout","","The socket timeout",93,[[],[["duration",3],["option",4]]]],[11,"new","","Create a new MySQL connection using <code>OptsBuilder</code> from the …",92,[[["mysqlurl",3]]]],[11,"new","","Parse <code>Url</code> to <code>PostgresUrl</code>. Returns error for mistyped …",96,[[["url",3]],[["result",4],["error",3]]]],[11,"url","","The bare <code>Url</code> to the database.",96,[[],["url",3]]],[11,"username","","The percent-decoded database username.",96,[[],["cow",4]]],[11,"host","","The database host. Taken first from the <code>host</code> query …",96,[[]]],[11,"dbname","","Name of the database connected. Defaults to <code>postgres</code>.",96,[[]]],[11,"password","","The percent-decoded database password.",96,[[],["cow",4]]],[11,"port","","The database port, defaults to <code>5432</code>.",96,[[]]],[11,"schema","","The database schema, defaults to <code>public</code>.",96,[[]]],[11,"pg_bouncer","","Whether the pgbouncer mode is enabled.",96,[[]]],[11,"connect_timeout","","The connection timeout.",96,[[],[["duration",3],["option",4]]]],[11,"pool_timeout","","Pool check_out timeout",96,[[],[["duration",3],["option",4]]]],[11,"socket_timeout","","The socket timeout",96,[[],[["duration",3],["option",4]]]],[11,"new","","Create a new connection to the database.",94,[[["postgresurl",3]]]],[11,"new","","",97,[[],[["result",6],["sqlite",3]]]],[11,"new_in_memory","","Open a new SQLite database in memory.",97,[[["string",3]],[["result",6],["sqlite",3]]]],[11,"attach_database","","",97,[[]]]],"p":[[3,"Column"],[4,"DefaultValue"],[4,"TypeFamily"],[8,"Comparable"],[4,"Compare"],[4,"ConditionTree"],[8,"Conjunctive"],[8,"IntoCommonTableExpression"],[4,"ExpressionKind"],[3,"Grouping"],[8,"Groupable"],[8,"IntoGroupByDefinition"],[4,"IndexDefinition"],[4,"OnConflict"],[4,"Join"],[8,"Joinable"],[4,"SqlOp"],[8,"IntoOrderDefinition"],[4,"Order"],[8,"Orderable"],[3,"Ordering"],[4,"Query"],[4,"SelectQuery"],[3,"Row"],[8,"Aliasable"],[4,"TableType"],[3,"Table"],[8,"IntoRaw"],[4,"Value"],[4,"SslAcceptMode"],[4,"ConnectionInfo"],[13,"Sqlite"],[13,"InMemorySqlite"],[4,"SqlFamily"],[4,"EncryptMode"],[4,"IsolationLevel"],[8,"GetRow"],[8,"TakeRow"],[8,"ToColumnNames"],[8,"Queryable"],[8,"TransactionCapable"],[3,"SqliteParams"],[4,"DatabaseConstraint"],[3,"Error"],[4,"ErrorKind"],[13,"DatabaseDoesNotExist"],[13,"DatabaseAccessDenied"],[13,"DatabaseAlreadyExists"],[13,"AuthenticationFailed"],[13,"TableDoesNotExist"],[13,"UniqueConstraintViolation"],[13,"NullConstraintViolation"],[13,"ForeignKeyConstraintViolation"],[13,"ColumnNotFound"],[13,"LengthMismatch"],[13,"PoolTimeout"],[13,"TlsError"],[13,"ValueOutOfRange"],[3,"Builder"],[3,"Quaint"],[3,"ResultSet"],[3,"Quaint"],[8,"Visitor"],[3,"CommonTableExpression"],[3,"Delete"],[3,"Expression"],[3,"AggregateToString"],[3,"Average"],[3,"Count"],[3,"Lower"],[3,"Maximum"],[3,"Minimum"],[3,"RowNumber"],[3,"Sum"],[3,"Upper"],[3,"Function"],[3,"Insert"],[3,"SingleRowInsert"],[3,"MultiRowInsert"],[3,"JoinData"],[3,"Over"],[3,"Select"],[3,"Union"],[3,"Update"],[3,"Raw"],[3,"Values"],[3,"ResultRow"],[3,"ResultRowRef"],[3,"ResultSetIterator"],[3,"Transaction"],[3,"MssqlUrl"],[3,"Mssql"],[3,"Mysql"],[3,"MysqlUrl"],[3,"PostgreSql"],[3,"SslParams"],[3,"PostgresUrl"],[3,"Sqlite"],[3,"PooledConnection"],[3,"ValueDeserializer"],[3,"Mssql"],[3,"Mysql"],[3,"Postgres"],[3,"Sqlite"],[6,"GroupByDefinition"],[6,"OrderDefinition"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);