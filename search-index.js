var searchIndex = JSON.parse('{\
"quaint":{"doc":"quaintA database client abstraction for reading and…","i":[[4,"Value","quaint","A value we must parameterize for the prepared statement.…",null,null],[13,"Integer","","64-bit signed integer.",0,null],[13,"Float","","32-bit floating point.",0,null],[13,"Double","","64-bit floating point.",0,null],[13,"Text","","String value.",0,null],[13,"Enum","","Database enum value.",0,null],[13,"Bytes","","Bytes value.",0,null],[13,"Boolean","","Boolean value.",0,null],[13,"Char","","A single character.",0,null],[13,"Array","","An array value (PostgreSQL).",0,null],[13,"Numeric","","A numeric value.",0,null],[13,"Json","","A JSON value.",0,null],[13,"Xml","","A XML value.",0,null],[13,"Uuid","","An UUID value.",0,null],[13,"DateTime","","A datetime value.",0,null],[13,"Date","","A date value.",0,null],[13,"Time","","A time value.",0,null],[0,"ast","","An abstract syntax tree for SQL queries.",null,null],[3,"Column","quaint::ast","A column definition.",null,null],[12,"name","","",1,null],[3,"CommonTableExpression","","A builder for a common table expression (CTE) statement,…",null,null],[3,"Delete","","A builder for a `DELETE` statement.",null,null],[3,"Expression","","An expression that can be positioned in a query. Can be a…",null,null],[3,"AggregateToString","","An aggregate function that concatenates strings from a…",null,null],[3,"Average","","A representation of the `AVG` function in the database.",null,null],[3,"Count","","Returns the number of rows that matches a specified…",null,null],[3,"Lower","","A represention of the `LOWER` function in the database.",null,null],[3,"Maximum","","A represention of the `MAX` function in the database.",null,null],[3,"Minimum","","A represention of the `MIN` function in the database.",null,null],[3,"RowNumber","","A window function that assigns a sequential integer number…",null,null],[3,"Sum","","A represention of the `SUM` function in the database.",null,null],[3,"Upper","","A represention of the `UPPER` function in the database.",null,null],[3,"Function","","A database function definition",null,null],[3,"Grouping","","A list of definitions for the `GROUP BY` statement",null,null],[12,"0","","",2,null],[3,"Insert","","A builder for an `INSERT` statement.",null,null],[3,"SingleRowInsert","","A builder for an `INSERT` statement for a single row.",null,null],[3,"MultiRowInsert","","A builder for an `INSERT` statement for multiple rows.",null,null],[3,"JoinData","","The `JOIN` table and conditions.",null,null],[3,"Ordering","","A list of definitions for the `ORDER BY` statement.",null,null],[12,"0","","",3,null],[3,"Over","","Determines the partitioning and ordering of a rowset…",null,null],[3,"Row","","A collection of values surrounded by parentheses.",null,null],[12,"values","","",4,null],[3,"Select","","A builder for a `SELECT` statement.",null,null],[3,"Table","","A table definition",null,null],[12,"typ","","",5,null],[12,"alias","","",5,null],[12,"database","","",5,null],[3,"Union","","A builder for a `UNION`s over multiple `SELECT` statements.",null,null],[3,"Update","","A builder for an `UPDATE` statement.",null,null],[3,"Raw","","A value written to the query as-is without parameterization.",null,null],[3,"Values","","An in-memory temporary table. Can be used in some of the…",null,null],[4,"DefaultValue","","Defines a default value for a `Column`.",null,null],[13,"Provided","","A static value.",6,null],[13,"Generated","","Generated in the database.",6,null],[4,"Compare","","For modeling comparison expressions.",null,null],[13,"Equals","","`left = right`",7,null],[13,"NotEquals","","`left <> right`",7,null],[13,"LessThan","","`left < right`",7,null],[13,"LessThanOrEquals","","`left <= right`",7,null],[13,"GreaterThan","","`left > right`",7,null],[13,"GreaterThanOrEquals","","`left >= right`",7,null],[13,"In","","`left IN (..)`",7,null],[13,"NotIn","","`left NOT IN (..)`",7,null],[13,"Like","","`left LIKE %..%`",7,null],[13,"NotLike","","`left NOT LIKE %..%`",7,null],[13,"BeginsWith","","`left LIKE ..%`",7,null],[13,"NotBeginsWith","","`left NOT LIKE ..%`",7,null],[13,"EndsInto","","`left LIKE %..`",7,null],[13,"NotEndsInto","","`left NOT LIKE %..`",7,null],[13,"Null","","`value IS NULL`",7,null],[13,"NotNull","","`value IS NOT NULL`",7,null],[13,"Between","","`value` BETWEEN `left` AND `right`",7,null],[13,"NotBetween","","`value` NOT BETWEEN `left` AND `right`",7,null],[13,"Raw","","Raw comparator, allows to use an operator `left <raw>…",7,null],[4,"ConditionTree","","Tree structures and leaves for condition building.",null,null],[13,"And","","`(left_expression AND right_expression)`",8,null],[13,"Or","","`(left_expression OR right_expression)`",8,null],[13,"Not","","`(NOT expression)`",8,null],[13,"Single","","A single expression leaf",8,null],[13,"NoCondition","","A leaf that does nothing to the condition, `1=1`",8,null],[13,"NegativeCondition","","A leaf that cancels the condition, `1=0`",8,null],[4,"ExpressionKind","","An expression we can compare and use in database queries.",null,null],[13,"Parameterized","","Anything that we must parameterize before querying",9,null],[13,"RawValue","","A user-provided value we do not parameterize.",9,null],[13,"Column","","A database column",9,null],[13,"Row","","Data in a row form, e.g. (1, 2, 3)",9,null],[13,"Selection","","A nested `SELECT` or `SELECT .. UNION` statement",9,null],[13,"Function","","A database function call",9,null],[13,"Asterisk","","A qualified asterisk to a table",9,null],[13,"Op","","An operation: sum, sub, mul or div.",9,null],[13,"Values","","A `VALUES` statement",9,null],[13,"ConditionTree","","A tree of expressions to evaluate from the deepest value…",9,null],[13,"Compare","","A comparison expression",9,null],[13,"Value","","A single value, column, row or a nested select",9,null],[4,"IndexDefinition","","A definition of a database index.",null,null],[13,"Single","","",10,null],[13,"Compound","","",10,null],[4,"OnConflict","","`INSERT` conflict resolution strategies.",null,null],[13,"DoNothing","","When a row already exists, do nothing. Works with…",11,null],[4,"Join","","A representation of a `JOIN` statement.",null,null],[13,"Inner","","Implements an `INNER JOIN` with given `JoinData`.",12,null],[13,"Left","","Implements an `LEFT JOIN` with given `JoinData`.",12,null],[13,"Right","","Implements an `RIGHT JOIN` with given `JoinData`.",12,null],[13,"Full","","Implements an `FULL JOIN` with given `JoinData`.",12,null],[4,"SqlOp","","Calculation operations in SQL queries.",null,null],[13,"Add","","",13,null],[13,"Sub","","",13,null],[13,"Mul","","",13,null],[13,"Div","","",13,null],[13,"Rem","","",13,null],[4,"Order","","The ordering direction",null,null],[13,"Asc","","Ascending",14,null],[13,"Desc","","Descending",14,null],[4,"Query","","A database query",null,null],[13,"Select","","",15,null],[13,"Insert","","",15,null],[13,"Update","","",15,null],[13,"Delete","","",15,null],[13,"Union","","",15,null],[13,"Merge","","",15,null],[13,"Raw","","",15,null],[4,"SelectQuery","","A database query that only returns data without modifying…",null,null],[13,"Select","","",16,null],[13,"Union","","",16,null],[4,"TableType","","Either an identifier or a nested query.",null,null],[13,"Table","","",17,null],[13,"Query","","",17,null],[13,"Values","","",17,null],[4,"Value","","A value we must parameterize for the prepared statement.…",null,null],[13,"Integer","","64-bit signed integer.",0,null],[13,"Float","","32-bit floating point.",0,null],[13,"Double","","64-bit floating point.",0,null],[13,"Text","","String value.",0,null],[13,"Enum","","Database enum value.",0,null],[13,"Bytes","","Bytes value.",0,null],[13,"Boolean","","Boolean value.",0,null],[13,"Char","","A single character.",0,null],[13,"Array","","An array value (PostgreSQL).",0,null],[13,"Numeric","","A numeric value.",0,null],[13,"Json","","A JSON value.",0,null],[13,"Xml","","A XML value.",0,null],[13,"Uuid","","An UUID value.",0,null],[13,"DateTime","","A datetime value.",0,null],[13,"Date","","A date value.",0,null],[13,"Time","","A time value.",0,null],[5,"asterisk","","A quick alias to create an asterisk to a table.",null,[[],["expression",3]]],[5,"aggregate_to_string","","Aggregates the given field into a string.",null,[[],["function",3]]],[5,"avg","","Calculates the average value of a numeric column.",null,[[],["function",3]]],[5,"count","","Count of the underlying table where the given expression…",null,[[],["function",3]]],[5,"lower","","Converts the result of the expression into lowercase string.",null,[[],["function",3]]],[5,"max","","Calculates the maximum value of a numeric column.",null,[[],["function",3]]],[5,"min","","Calculates the minimum value of a numeric column.",null,[[],["function",3]]],[5,"row_number","","A number from 1 to n in specified order",null,[[],["rownumber",3]]],[5,"sum","","Calculates the sum value of a numeric column.",null,[[],["function",3]]],[5,"upper","","Converts the result of the expression into uppercase string.",null,[[],["function",3]]],[11,"default","","Sets the default value for the column.",1,[[]]],[11,"default_autogen","","True when the default value is set and automatically…",1,[[]]],[11,"new","","Create a column definition.",1,[[]]],[11,"table","","Include the table name in the column expression.",1,[[]]],[11,"opt_table","","Include the table name in the column expression, if table…",1,[[["option",4]]]],[11,"and","","An `AND` statement, is true when both sides are true.",8,[[],["conditiontree",4]]],[11,"or","","An `OR` statement, is true when one side is true.",8,[[],["conditiontree",4]]],[11,"not","","A `NOT` statement, is true when the expression is false.",8,[[],["conditiontree",4]]],[11,"single","","A single leaf, is true when the expression is true.",8,[[],["conditiontree",4]]],[11,"invert_if","","Inverts the entire condition tree if condition is met.",8,[[],["conditiontree",4]]],[11,"column","","Selects a named value from the nested expresion. The…",18,[[]]],[11,"from_table","","Creates a new `DELETE` statement for the given table.",19,[[]]],[11,"so_that","","Adds `WHERE` conditions to the query. See Comparable for…",19,[[]]],[11,"kind","","The type of the expression, dictates how it\'s implemented…",20,[[],["expressionkind",4]]],[11,"alias","","The name alias of the expression, how it can referred in…",20,[[],["option",4]]],[11,"is_asterisk","","",20,[[]]],[11,"order_by","","Define the order of the row number. Is the row order if…",21,[[]]],[11,"partition_by","","Define the partitioning of the row number",21,[[]]],[11,"new","","",2,[[["groupbydefinition",6],["vec",3]]]],[11,"is_empty","","",2,[[]]],[11,"has_autogen","","At least one of the index columns has automatically…",10,[[]]],[11,"contains","","True if the index definition contains the given column.",10,[[["column",3]]]],[11,"single_into","","Creates a new single row `INSERT` statement for the given…",22,[[],["singlerowinsert",3]]],[11,"single","","",22,[[],["singlerowinsert",3]]],[11,"multi_into","","Creates a new multi row `INSERT` statement for the given…",22,[[],["multirowinsert",3]]],[11,"multi","","",22,[[],["multirowinsert",3]]],[11,"expression_into","","",22,[[]]],[11,"on_conflict","","Sets the conflict resolution strategy.",22,[[["onconflict",4]]]],[11,"returning","","Sets the returned columns.",22,[[]]],[11,"value","","Adds a new value to the `INSERT` statement",23,[[],["singlerowinsert",3]]],[11,"build","","Convert into a common `Insert` statement.",23,[[],["insert",3]]],[11,"values","","Adds a new row to be inserted.",24,[[]]],[11,"build","","Convert into a common `Insert` statement.",24,[[],["insert",3]]],[11,"all_from","","Implement a join with no conditions.",25,[[]]],[11,"new","","",3,[[["vec",3],["orderdefinition",6]]]],[11,"is_empty","","",3,[[]]],[11,"is_empty","","",26,[[]]],[11,"is_select","","",15,[[]]],[11,"is_insert","","",15,[[]]],[11,"is_update","","",15,[[]]],[11,"is_delete","","",15,[[]]],[11,"is_union","","",15,[[]]],[11,"named_selection","","Finds all named values or columns from the selection.",16,[[],[["vec",3],["string",3]]]],[11,"new","","",4,[[]]],[11,"with_capacity","","",4,[[]]],[11,"pop","","",4,[[],[["option",4],["expression",3]]]],[11,"push","","",4,[[]]],[11,"is_empty","","",4,[[]]],[11,"len","","",4,[[]]],[11,"from_table","","Creates a new `SELECT` statement for the given table.",27,[[]]],[11,"and_from","","Adds a table to be selected.",27,[[]]],[11,"value","","Selects a static value as the column.",27,[[]]],[11,"column","","Adds a column to be selected.",27,[[]]],[11,"columns","","A bulk method to select multiple values.",27,[[]]],[11,"distinct","","Adds `DISTINCT` to the select query.",27,[[]]],[11,"so_that","","Adds `WHERE` conditions to the query, replacing the…",27,[[]]],[11,"and_where","","Adds an additional `WHERE` condition to the query…",27,[[]]],[11,"or_where","","Adds an additional `WHERE` condition to the query…",27,[[]]],[11,"inner_join","","Adds `INNER JOIN` clause to the query.",27,[[]]],[11,"left_join","","Adds `LEFT JOIN` clause to the query.",27,[[]]],[11,"right_join","","Adds `RIGHT JOIN` clause to the query.",27,[[]]],[11,"full_join","","Adds `FULL JOIN` clause to the query.",27,[[]]],[11,"order_by","","Adds an ordering to the `ORDER BY` section.",27,[[]]],[11,"group_by","","Adds a grouping to the `GROUP BY` section.",27,[[]]],[11,"having","","Adds group conditions to a query. Should be combined…",27,[[]]],[11,"limit","","Sets the `LIMIT` value.",27,[[]]],[11,"offset","","Sets the `OFFSET` value.",27,[[]]],[11,"with","","Adds a common table expression to the select.",27,[[["commontableexpression",3]]]],[11,"database","","Define in which database the table is located",5,[[]]],[11,"asterisk","","A qualified asterisk to this table",5,[[],["expression",3]]],[11,"add_unique_index","","Add unique index definition.",5,[[]]],[11,"new","","",28,[[["select",3]]]],[11,"all","","Creates a union with previous selection and the given…",28,[[["select",3]]]],[11,"distinct","","Creates a union with previous selection and the given…",28,[[["select",3]]]],[11,"table","","Creates the basis for an `UPDATE` statement to the given…",29,[[]]],[11,"set","","Add another column value assignment to the query",29,[[],["update",3]]],[11,"so_that","","Adds `WHERE` conditions to the query. See Comparable for…",29,[[]]],[11,"integer","quaint","Creates a new integer value.",0,[[]]],[11,"numeric","","Creates a new decimal value.",0,[[["bigdecimal",3]]]],[11,"float","","Creates a new float value.",0,[[]]],[11,"double","","Creates a new double value.",0,[[]]],[11,"text","","Creates a new string value.",0,[[]]],[11,"enum_variant","","Creates a new enum value.",0,[[]]],[11,"bytes","","Creates a new bytes value.",0,[[]]],[11,"boolean","","Creates a new boolean value.",0,[[]]],[11,"character","","Creates a new character value.",0,[[]]],[11,"array","","Creates a new array value.",0,[[]]],[11,"uuid","","Creates a new uuid value.",0,[[["uuid",3]]]],[11,"datetime","","Creates a new datetime value.",0,[[["datetime",3],["utc",3]]]],[11,"date","","Creates a new date value.",0,[[["naivedate",3]]]],[11,"time","","Creates a new time value.",0,[[["naivetime",3]]]],[11,"json","","Creates a new JSON value.",0,[[["value",4]]]],[11,"xml","","Creates a new XML value.",0,[[]]],[11,"is_null","","`true` if the `Value` is null.",0,[[]]],[11,"is_text","","`true` if the `Value` is text.",0,[[]]],[11,"as_str","","Returns a &str if the value is text, otherwise `None`.",0,[[],["option",4]]],[11,"as_char","","Returns a char if the value is a char, otherwise `None`.",0,[[],["option",4]]],[11,"to_string","","Returns a cloned String if the value is text, otherwise…",0,[[],[["string",3],["option",4]]]],[11,"into_string","","Transforms the `Value` to a `String` if it\'s text,…",0,[[],[["string",3],["option",4]]]],[11,"is_bytes","","Returns whether this value is the `Bytes` variant.",0,[[]]],[11,"as_bytes","","Returns a bytes slice if the value is text or a byte…",0,[[],["option",4]]],[11,"to_bytes","","Returns a cloned `Vec<u8>` if the value is text or a byte…",0,[[],[["vec",3],["option",4]]]],[11,"is_integer","","`true` if the `Value` is an integer.",0,[[]]],[11,"as_i64","","Returns an `i64` if the value is an integer, otherwise…",0,[[],["option",4]]],[11,"as_f64","","Returns a `f64` if the value is a double, otherwise `None`.",0,[[],["option",4]]],[11,"as_f32","","Returns a `f32` if the value is a double, otherwise `None`.",0,[[],["option",4]]],[11,"is_numeric","","`true` if the `Value` is a numeric value or can be…",0,[[]]],[11,"into_numeric","","Returns a bigdecimal, if the value is a numeric, float or…",0,[[],[["bigdecimal",3],["option",4]]]],[11,"as_numeric","","Returns a reference to a bigdecimal, if the value is a…",0,[[],[["option",4],["bigdecimal",3]]]],[11,"is_bool","","`true` if the `Value` is a boolean value.",0,[[]]],[11,"as_bool","","Returns a bool if the value is a boolean, otherwise `None`.",0,[[],["option",4]]],[11,"is_array","","`true` if the `Value` is an Array.",0,[[]]],[11,"is_uuid","","`true` if the `Value` is of UUID type.",0,[[]]],[11,"as_uuid","","Returns an UUID if the value is of UUID type, otherwise…",0,[[],[["uuid",3],["option",4]]]],[11,"is_datetime","","`true` if the `Value` is a DateTime.",0,[[]]],[11,"as_datetime","","Returns a `DateTime` if the value is a `DateTime`,…",0,[[],[["option",4],["datetime",3]]]],[11,"is_date","","`true` if the `Value` is a Date.",0,[[]]],[11,"as_date","","Returns a `NaiveDate` if the value is a `Date`, otherwise…",0,[[],[["option",4],["naivedate",3]]]],[11,"is_time","","`true` if the `Value` is a `Time`.",0,[[]]],[11,"as_time","","Returns a `NaiveTime` if the value is a `Time`, otherwise…",0,[[],[["naivetime",3],["option",4]]]],[11,"is_json","","`true` if the `Value` is a JSON value.",0,[[]]],[11,"as_json","","Returns a reference to a JSON Value if of Json type,…",0,[[],[["option",4],["value",4]]]],[11,"into_json","","Transforms to a JSON Value if of Json type, otherwise…",0,[[],[["value",4],["option",4]]]],[11,"into_vec","","Returns a Vec if the value is an array of T, otherwise…",0,[[],[["option",4],["vec",3]]]],[11,"empty","quaint::ast","Create a new empty in-memory set of values.",30,[[]]],[11,"new","","Create a new in-memory set of values.",30,[[["row",3],["vec",3]]]],[11,"with_capacity","","Create a new in-memory set of values with an allocated…",30,[[]]],[11,"push","","Add value to the temporary table.",30,[[]]],[11,"len","","The number of rows in the in-memory table.",30,[[]]],[11,"is_empty","","True if has no rows.",30,[[]]],[11,"row_len","","",30,[[]]],[11,"flatten_row","","",30,[[],[["row",3],["option",4]]]],[6,"GroupByDefinition","","Defines a grouping for the `GROUP BY` statement.",null,null],[6,"OrderDefinition","","Defines ordering for an `ORDER BY` statement.",null,null],[8,"Comparable","","An item that can be compared against other values in the…",null,null],[10,"equals","","Tests if both sides are the same value.",31,[[],["compare",4]]],[10,"not_equals","","Tests if both sides are not the same value.",31,[[],["compare",4]]],[10,"less_than","","Tests if the left side is smaller than the right side.",31,[[],["compare",4]]],[10,"less_than_or_equals","","Tests if the left side is smaller than the right side or…",31,[[],["compare",4]]],[10,"greater_than","","Tests if the left side is bigger than the right side.",31,[[],["compare",4]]],[10,"greater_than_or_equals","","Tests if the left side is bigger than the right side or…",31,[[],["compare",4]]],[10,"in_selection","","Tests if the left side is included in the right side…",31,[[],["compare",4]]],[10,"not_in_selection","","Tests if the left side is not included in the right side…",31,[[],["compare",4]]],[10,"like","","Tests if the left side includes the right side string.",31,[[],["compare",4]]],[10,"not_like","","Tests if the left side does not include the right side…",31,[[],["compare",4]]],[10,"begins_with","","Tests if the left side starts with the right side string.",31,[[],["compare",4]]],[10,"not_begins_with","","Tests if the left side doesn\'t start with the right side…",31,[[],["compare",4]]],[10,"ends_into","","Tests if the left side ends into the right side string.",31,[[],["compare",4]]],[10,"not_ends_into","","Tests if the left side does not end into the right side…",31,[[],["compare",4]]],[10,"is_null","","Tests if the left side is `NULL`.",31,[[],["compare",4]]],[10,"is_not_null","","Tests if the left side is not `NULL`.",31,[[],["compare",4]]],[10,"between","","Tests if the value is between two given values.",31,[[],["compare",4]]],[10,"not_between","","Tests if the value is not between two given values.",31,[[],["compare",4]]],[10,"compare_raw","","Compares two expressions with a custom operator.",31,[[],["compare",4]]],[8,"Conjunctive","","`AND`, `OR` and `NOT` conjunctive implementations.",null,null],[10,"and","","Builds an `AND` condition having `self` as the left leaf…",32,[[],["conditiontree",4]]],[10,"or","","Builds an `OR` condition having `self` as the left leaf…",32,[[],["conditiontree",4]]],[10,"not","","Builds a `NOT` condition having `self` as the condition.",32,[[],["conditiontree",4]]],[8,"IntoCommonTableExpression","","Conversion into a common table expression.",null,null],[11,"into_cte","","",33,[[],["commontableexpression",3]]],[8,"Groupable","","An item that can be used in the `GROUP BY` statement",null,null],[10,"group","","Group by `self`",34,[[],["groupbydefinition",6]]],[8,"IntoGroupByDefinition","","Convert the value into a group by definition.",null,null],[10,"into_group_by_definition","","",35,[[],["groupbydefinition",6]]],[8,"Joinable","","An item that can be joined.",null,null],[10,"on","","Add the `JOIN` conditions.",36,[[],["joindata",3]]],[8,"IntoOrderDefinition","","Convert the value into an order definition with order item…",null,null],[10,"into_order_definition","","",37,[[],["orderdefinition",6]]],[8,"Orderable","","An item that can be used in the `ORDER BY` statement",null,null],[10,"order","","Order by `self` in the given order",38,[[["option",4],["order",4]],["orderdefinition",6]]],[11,"ascend","","Change the order to `ASC`",38,[[],["orderdefinition",6]]],[11,"descend","","Change the order to `DESC`",38,[[],["orderdefinition",6]]],[8,"Aliasable","","An object that can be aliased.",null,null],[16,"Target","","",39,null],[10,"alias","","Alias table for usage elsewhere in the query.",39,[[]]],[8,"IntoRaw","","Converts the value into a state to skip parameterization.",null,null],[10,"raw","","",40,[[],["raw",3]]],[0,"connector","quaint","A set of abstractions for database connections.",null,null],[5,"sqlite_version","quaint::connector","Returns the SQLite version as a string; e.g., `\\\"3.16.2\\\"`…",null,[[]]],[3,"Mysql","","A connector interface for the MySQL database.",null,null],[3,"MysqlUrl","","Wraps a connection url and exposes the parsing logic used…",null,null],[3,"PostgreSql","","A connector interface for the PostgreSQL database.",null,null],[3,"SslParams","","",null,null],[3,"PostgresUrl","","Wraps a connection url and exposes the parsing logic used…",null,null],[3,"ResultRow","","An owned version of a `Row` in a `ResultSet`. See…",null,null],[3,"ResultRowRef","","A reference to a `Row` in a `ResultSet`. The columns can…",null,null],[3,"ResultSet","","Encapsulates a set of results and their respective column…",null,null],[3,"ResultSetIterator","","Thin iterator for ResultSet rows. Might become lazy one day.",null,null],[3,"MssqlUrl","","Wraps a connection url and exposes the parsing logic used…",null,null],[3,"Mssql","","A connector interface for the SQL Server database.",null,null],[3,"Sqlite","","A connector interface for the SQLite database",null,null],[3,"SqliteParams","","Wraps a connection url and exposes the parsing logic used…",null,null],[12,"connection_limit","","",41,null],[12,"file_path","","This is not a `PathBuf` because we need to `ATTACH` the…",41,null],[12,"db_name","","",41,null],[12,"socket_timeout","","",41,null],[3,"Transaction","","A representation of an SQL database transaction. If not…",null,null],[4,"SslAcceptMode","","",null,null],[13,"Strict","","",42,null],[13,"AcceptInvalidCerts","","",42,null],[4,"ConnectionInfo","","General information about a SQL connection.",null,null],[13,"Postgres","","A PostgreSQL connection URL.",43,null],[13,"Mysql","","A MySQL connection URL.",43,null],[13,"Mssql","","A SQL Server connection URL.",43,null],[13,"Sqlite","","A SQLite connection URL.",43,null],[12,"file_path","quaint::connector::ConnectionInfo","The filesystem path of the SQLite database.",44,null],[12,"db_name","","The name the database is bound to (with `ATTACH…",44,null],[13,"InMemorySqlite","quaint::connector","",43,null],[12,"db_name","quaint::connector::ConnectionInfo","",45,null],[4,"SqlFamily","quaint::connector","One of the supported SQL variants.",null,null],[13,"Postgres","","",46,null],[13,"Mysql","","",46,null],[13,"Sqlite","","",46,null],[13,"Mssql","","",46,null],[4,"EncryptMode","","TLS mode when connecting to SQL Server.",null,null],[13,"On","","All traffic is encrypted.",47,null],[13,"Off","","Only the login credentials are encrypted.",47,null],[13,"DangerPlainText","","Nothing is encrypted.",47,null],[4,"IsolationLevel","","Controls the locking and row versioning behavior of…",null,null],[13,"ReadUncommitted","","",48,null],[13,"ReadCommitted","","",48,null],[13,"RepeatableRead","","",48,null],[13,"Snapshot","","",48,null],[13,"Serializable","","",48,null],[11,"from_url","","Parse `ConnectionInfo` out from an SQL connection string.",43,[[],["result",6]]],[11,"dbname","","The provided database name. This will be `None` on SQLite.",43,[[],["option",4]]],[11,"schema_name","","This is what item names are prefixed with in queries.",43,[[]]],[11,"host","","The provided database host. This will be `\\\"localhost\\\"` on…",43,[[]]],[11,"username","","The provided database user name. This will be `None` on…",43,[[],[["cow",4],["option",4]]]],[11,"file_path","","The database file for SQLite, otherwise `None`.",43,[[],["option",4]]],[11,"sql_family","","The family of databases connected.",43,[[],["sqlfamily",4]]],[11,"port","","The provided database port, if applicable.",43,[[],["option",4]]],[11,"pg_bouncer","","Whether the pgbouncer mode is enabled.",43,[[]]],[11,"database_location","","A string describing the database location, meant for error…",43,[[],["string",3]]],[11,"as_str","","Get a string representation of the family.",46,[[]]],[11,"from_scheme","","Convert url scheme to an SqlFamily.",46,[[],["option",4]]],[11,"scheme_is_supported","","Check if a family exists for the given scheme.",46,[[]]],[11,"is_postgres","","True, if family is PostgreSQL.",46,[[]]],[11,"is_mysql","","True, if family is MySQL.",46,[[]]],[11,"is_sqlite","","True, if family is SQLite.",46,[[]]],[11,"is_mssql","","True, if family is SQL Server.",46,[[]]],[11,"at","","Take a value from a certain position in the row, if having…",49,[[],[["option",4],["value",4]]]],[11,"get","","Take a value with the given column name from the row.…",49,[[],[["option",4],["value",4]]]],[11,"as_ref","","Make a referring ResultRowRef.",49,[[],["resultrowref",3]]],[11,"into_single","","",49,[[],[["value",4],["result",6]]]],[11,"at","","Take a value from a certain position in the row, if having…",50,[[],[["option",4],["value",4]]]],[11,"get","","Take a value with the given column name from the row.",50,[[],[["option",4],["value",4]]]],[11,"new","","Creates a new instance, bound to the given column names…",51,[[["vec",3],["vec",3],["string",3],["vec",3]]]],[11,"last_insert_id","","The last id inserted, if available. Only works on certain…",51,[[],["option",4]]],[11,"columns","","An iterator of column names.",51,[[],["vec",3]]],[11,"len","","Returns the number of rows in the `ResultSet`.",51,[[]]],[11,"is_empty","","Returns true if the `ResultSet` contains no rows.",51,[[]]],[11,"first","","Returns the first row of the `ResultSet`, or None if the…",51,[[],[["resultrowref",3],["option",4]]]],[11,"get","","Returns a reference to a row in a given position.",51,[[],[["resultrowref",3],["option",4]]]],[11,"into_single","","Takes the first row if existing, otherwise returns error.",51,[[],[["resultrow",3],["result",6]]]],[11,"commit","","Commit the changes to the database and consume the…",52,[[]]],[11,"rollback","","Rolls back the changes to the database.",52,[[]]],[11,"connection_limit","","Maximum number of connections the pool can have (if used…",53,[[],["option",4]]],[11,"socket_timeout","","A duration how long one query can take.",53,[[],[["option",4],["duration",3]]]],[11,"connect_timeout","","A duration how long we can try to connect to the database.",53,[[],[["option",4],["duration",3]]]],[11,"transaction_isolation_level","","The isolation level of a transaction.",53,[[],[["option",4],["isolationlevel",4]]]],[11,"dbname","","Name of the database.",53,[[]]],[11,"schema","","The prefix which to use when querying database.",53,[[]]],[11,"host","","Database hostname.",53,[[]]],[11,"username","","The username to use when connecting to the database.",53,[[],["option",4]]],[11,"port","","Database port.",53,[[]]],[11,"new","","Creates a new connection to SQL Server.",54,[[["mssqlurl",3]]]],[11,"new","","",53,[[],["result",6]]],[11,"new","","Parse `Url` to `MysqlUrl`. Returns error for mistyped…",55,[[["url",3]],[["result",4],["error",3]]]],[11,"url","","The bare `Url` to the database.",55,[[],["url",3]]],[11,"username","","The percent-decoded database username.",55,[[],["cow",4]]],[11,"password","","The percent-decoded database password.",55,[[],[["cow",4],["option",4]]]],[11,"dbname","","Name of the database connected. Defaults to `mysql`.",55,[[]]],[11,"host","","The database host. If `socket` and `host` are not set,…",55,[[]]],[11,"socket","","If set, connected to the database through a Unix socket.",55,[[],["option",4]]],[11,"port","","The database port, defaults to `3306`.",55,[[]]],[11,"connect_timeout","","The connection timeout.",55,[[],[["option",4],["duration",3]]]],[11,"new","","Create a new MySQL connection using `OptsBuilder` from the…",56,[[["mysqlurl",3]],["result",6]]],[11,"new","","Parse `Url` to `PostgresUrl`. Returns error for mistyped…",57,[[["url",3]],[["result",4],["error",3]]]],[11,"url","","The bare `Url` to the database.",57,[[],["url",3]]],[11,"username","","The percent-decoded database username.",57,[[],["cow",4]]],[11,"host","","The database host. Taken first from the `host` query…",57,[[]]],[11,"dbname","","Name of the database connected. Defaults to `postgres`.",57,[[]]],[11,"password","","The percent-decoded database password.",57,[[],["cow",4]]],[11,"port","","The database port, defaults to `5432`.",57,[[]]],[11,"schema","","The database schema, defaults to `public`.",57,[[]]],[11,"pg_bouncer","","Whether the pgbouncer mode is enabled.",57,[[]]],[11,"connect_timeout","","The connection timeout.",57,[[],[["option",4],["duration",3]]]],[11,"new","","Create a new connection to the database.",58,[[["postgresurl",3]]]],[11,"new","","",59,[[],[["result",6],["sqlite",3]]]],[11,"new_in_memory","","Open a new SQLite database in memory.",59,[[["string",3]],[["result",6],["sqlite",3]]]],[11,"attach_database","","",59,[[]]],[8,"ValueIndex","","",null,null],[8,"GetRow","","",null,null],[10,"get_result_row","","",60,[[],[["result",6],["vec",3]]]],[8,"TakeRow","","",null,null],[10,"take_result_row","","",61,[[],[["result",6],["vec",3]]]],[8,"ToColumnNames","","",null,null],[10,"to_column_names","","",62,[[],[["vec",3],["string",3]]]],[8,"Queryable","","Represents a connection or a transaction that can be…",null,null],[10,"query","","Execute the given query.",63,[[["query",4]],[["pin",3],["box",3]]]],[10,"query_raw","","Execute a query given as SQL, interpolating the given…",63,[[],[["pin",3],["box",3]]]],[10,"execute","","Execute the given query, returning the number of affected…",63,[[["query",4]],[["pin",3],["box",3]]]],[10,"execute_raw","","Execute a query given as SQL, interpolating the given…",63,[[],[["pin",3],["box",3]]]],[10,"raw_cmd","","Run a command in the database, for queries that can\'t be…",63,[[],[["box",3],["pin",3]]]],[10,"version","","Return the version of the underlying database, queried…",63,[[],[["pin",3],["box",3]]]],[11,"select","","Execute a `SELECT` query.",63,[[["select",3]],[["pin",3],["box",3]]]],[11,"insert","","Execute an `INSERT` query.",63,[[["insert",3]],[["pin",3],["box",3]]]],[11,"update","","Execute an `UPDATE` query, returning the number of…",63,[[["update",3]],[["pin",3],["box",3]]]],[11,"delete","","Execute a `DELETE` query, returning the number of affected…",63,[[["delete",3]],[["box",3],["pin",3]]]],[11,"server_reset_query","","Execute an arbitrary function in the beginning of each…",63,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"begin_statement","","Statement to begin a transaction",63,[[]]],[8,"TransactionCapable","","A thing that can start a new transaction.",null,null],[11,"start_transaction","","Starts a new transaction",64,[[],[["box",3],["pin",3]]]],[0,"error","quaint","Error module",null,null],[3,"Error","quaint::error","The error types for database I/O, connection and query…",null,null],[4,"DatabaseConstraint","","",null,null],[13,"Fields","","",65,null],[13,"Index","","",65,null],[13,"ForeignKey","","",65,null],[4,"ErrorKind","","",null,null],[13,"QueryError","","",66,null],[13,"DatabaseDoesNotExist","","",66,null],[12,"db_name","quaint::error::ErrorKind","",67,null],[13,"DatabaseAccessDenied","quaint::error","",66,null],[12,"db_name","quaint::error::ErrorKind","",68,null],[13,"DatabaseAlreadyExists","quaint::error","",66,null],[12,"db_name","quaint::error::ErrorKind","",69,null],[13,"AuthenticationFailed","quaint::error","",66,null],[12,"user","quaint::error::ErrorKind","",70,null],[13,"NotFound","quaint::error","",66,null],[13,"TableDoesNotExist","","",66,null],[12,"table","quaint::error::ErrorKind","",71,null],[13,"UniqueConstraintViolation","quaint::error","",66,null],[12,"constraint","quaint::error::ErrorKind","",72,null],[13,"NullConstraintViolation","quaint::error","",66,null],[12,"constraint","quaint::error::ErrorKind","",73,null],[13,"ForeignKeyConstraintViolation","quaint::error","",66,null],[12,"constraint","quaint::error::ErrorKind","",74,null],[13,"ConnectionError","quaint::error","",66,null],[13,"ColumnReadFailure","","",66,null],[13,"ResultIndexOutOfBounds","","",66,null],[13,"ColumnNotFound","","",66,null],[12,"column","quaint::error::ErrorKind","",75,null],[13,"ResultTypeMismatch","quaint::error","",66,null],[13,"DatabaseUrlIsInvalid","","",66,null],[13,"ConversionError","","",66,null],[13,"LengthMismatch","","",66,null],[12,"column","quaint::error::ErrorKind","",76,null],[13,"InvalidConnectionArguments","quaint::error","",66,null],[13,"IoError","","",66,null],[13,"ConnectTimeout","","",66,null],[13,"Timeout","","",66,null],[13,"TlsError","","",66,null],[12,"message","quaint::error::ErrorKind","",77,null],[13,"ValueOutOfRange","quaint::error","",66,null],[12,"message","quaint::error::ErrorKind","",78,null],[13,"FromRowError","quaint::error","",66,null],[11,"original_code","","The error code sent by the database, if available.",79,[[],["option",4]]],[11,"original_message","","The original error message sent by the database, if…",79,[[],["option",4]]],[11,"kind","","A more specific error type for matching.",79,[[],["errorkind",4]]],[0,"pooled","quaint","A connection pool to a SQL database.A pool is created…",null,null],[3,"PooledConnection","quaint::pooled","A connection from the pool. Implements Queryable.",null,null],[3,"Quaint","","The main entry point and an abstraction over database…",null,null],[3,"Builder","","A `Builder` to construct an instance of a `Quaint` pool.",null,null],[11,"connection_limit","","The maximum number of connections in the pool.",80,[[]]],[11,"max_idle","","The maximum number of idle connections the pool can…",80,[[]]],[11,"connect_timeout","","A timeout for acquiring a connection with the `check_out`…",80,[[["duration",3]]]],[11,"max_idle_lifetime","","A time how long an idling connection can be kept in the…",80,[[["duration",3]]]],[11,"test_on_check_out","","Perform a health check before returning a connection from…",80,[[]]],[11,"health_check_interval","","Sets the interval how often a connection health will be…",80,[[["duration",3]]]],[11,"build","","Consume the builder and create a new instance of a pool.",80,[[],["quaint",3]]],[11,"builder","","Creates a new builder for a Quaint connection pool with…",81,[[],[["result",6],["builder",3]]]],[11,"capacity","","The number of connections in the pool.",81,[[]]],[11,"check_out","","Reserve a connection from the pool.",81,[[]]],[11,"connection_info","","Info about the connection and underlying database.",81,[[],["connectioninfo",4]]],[0,"prelude","quaint","A \\\"prelude\\\" for users of the `quaint` crate.",null,null],[3,"ResultRow","quaint::prelude","An owned version of a `Row` in a `ResultSet`. See…",null,null],[3,"ResultSet","","Encapsulates a set of results and their respective column…",null,null],[3,"Transaction","","A representation of an SQL database transaction. If not…",null,null],[4,"ConnectionInfo","","General information about a SQL connection.",null,null],[13,"Postgres","","A PostgreSQL connection URL.",43,null],[13,"Mysql","","A MySQL connection URL.",43,null],[13,"Mssql","","A SQL Server connection URL.",43,null],[13,"Sqlite","","A SQLite connection URL.",43,null],[12,"file_path","quaint::prelude::ConnectionInfo","The filesystem path of the SQLite database.",44,null],[12,"db_name","","The name the database is bound to (with `ATTACH…",44,null],[13,"InMemorySqlite","quaint::prelude","",43,null],[12,"db_name","quaint::prelude::ConnectionInfo","",45,null],[4,"SqlFamily","quaint::prelude","One of the supported SQL variants.",null,null],[13,"Postgres","","",46,null],[13,"Mysql","","",46,null],[13,"Sqlite","","",46,null],[13,"Mssql","","",46,null],[8,"Queryable","","Represents a connection or a transaction that can be…",null,null],[10,"query","","Execute the given query.",63,[[["query",4]],[["pin",3],["box",3]]]],[10,"query_raw","","Execute a query given as SQL, interpolating the given…",63,[[],[["pin",3],["box",3]]]],[10,"execute","","Execute the given query, returning the number of affected…",63,[[["query",4]],[["pin",3],["box",3]]]],[10,"execute_raw","","Execute a query given as SQL, interpolating the given…",63,[[],[["pin",3],["box",3]]]],[10,"raw_cmd","","Run a command in the database, for queries that can\'t be…",63,[[],[["box",3],["pin",3]]]],[10,"version","","Return the version of the underlying database, queried…",63,[[],[["pin",3],["box",3]]]],[11,"select","quaint::connector","Execute a `SELECT` query.",63,[[["select",3]],[["pin",3],["box",3]]]],[11,"insert","","Execute an `INSERT` query.",63,[[["insert",3]],[["pin",3],["box",3]]]],[11,"update","","Execute an `UPDATE` query, returning the number of…",63,[[["update",3]],[["pin",3],["box",3]]]],[11,"delete","","Execute a `DELETE` query, returning the number of affected…",63,[[["delete",3]],[["box",3],["pin",3]]]],[11,"server_reset_query","","Execute an arbitrary function in the beginning of each…",63,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"begin_statement","","Statement to begin a transaction",63,[[]]],[8,"TransactionCapable","quaint::prelude","A thing that can start a new transaction.",null,null],[11,"start_transaction","quaint::connector","Starts a new transaction",64,[[],[["box",3],["pin",3]]]],[0,"serde","quaint","Convert results from the database into any type…",null,null],[3,"ValueDeserializer","quaint::serde","",null,null],[5,"from_rows","","Deserialize each row of a `ResultSet`.",null,[[["resultset",3]],[["result",6],["vec",3]]]],[5,"from_row","","Deserialize a row into any type implementing `Deserialize`.",null,[[["resultrow",3]],[["result",6],["deserializeowned",8]]]],[11,"from_first","quaint::connector","Takes the first row and deserializes it.",51,[[],[["result",6],["deserializeowned",8]]]],[0,"single","quaint","A single connection abstraction to a SQL database.",null,null],[3,"Quaint","quaint::single","The main entry point and an abstraction over a database…",null,null],[11,"new","","Create a new connection to the database. The connection…",82,[[]]],[11,"new_in_memory","","Open a new SQLite database in memory.",82,[[["string",3],["option",4]],[["quaint",3],["result",6]]]],[11,"connection_info","","Info about the connection and underlying database.",82,[[],["connectioninfo",4]]],[0,"visitor","quaint","Visitors for reading an abstract SQL syntax tree,…",null,null],[3,"Mssql","quaint::visitor","A visitor to generate queries for the SQL Server database.",null,null],[3,"Mysql","","A visitor to generate queries for the MySQL database.",null,null],[3,"Postgres","","A visitor to generate queries for the PostgreSQL database.",null,null],[3,"Sqlite","","A visitor to generate queries for the SQLite database.",null,null],[6,"Result","","",null,null],[8,"Visitor","","A function travelling through the query AST, building the…",null,null],[18,"C_BACKTICK_OPEN","","Opening backtick character to surround identifiers, such…",83,null],[18,"C_BACKTICK_CLOSE","","Closing backtick character to surround identifiers, such…",83,null],[18,"C_WILDCARD","","Wildcard character to be used in `LIKE` queries.",83,null],[10,"build","","Convert the given `Query` to an SQL string and a vector of…",83,[[],["result",6]]],[10,"write","","Write to the query.",83,[[["display",8]],["result",6]]],[11,"compatibility_modifications","","A point to modify an incoming query to make it compatible…",83,[[["query",4]],["query",4]]],[11,"surround_with","","",83,[[],["result",6]]],[10,"add_parameter","","When called, the visitor decided to not render the…",83,[[["value",4]]]],[10,"visit_limit_and_offset","","The `LIMIT` and `OFFSET` statement in the query",83,[[["value",4],["option",4]],["result",6]]],[10,"visit_insert","","A walk through an `INSERT` statement",83,[[["insert",3]],["result",6]]],[10,"parameter_substitution","","What to use to substitute a parameter in the query.",83,[[],["result",6]]],[10,"visit_aggregate_to_string","","What to use to substitute a parameter in the query.",83,[[["expression",3]],["result",6]]],[10,"visit_raw_value","","Visit a non-parameterized value.",83,[[["value",4]],["result",6]]],[11,"visit_parameterized","","A visit to a value we parameterize",83,[[["value",4]],["result",6]]],[11,"visit_joins","","The join statements in the query",83,[[["join",4],["vec",3]],["result",6]]],[11,"visit_join_data","","",83,[[["joindata",3]],["result",6]]],[11,"visit_select","","A walk through a `SELECT` statement",83,[[["select",3]],["result",6]]],[11,"visit_update","","A walk through an `UPDATE` statement",83,[[["update",3]],["result",6]]],[11,"visit_delete","","A walk through an `DELETE` statement",83,[[["delete",3]],["result",6]]],[11,"delimited_identifiers","","A helper for delimiting an identifier, surrounding every…",83,[[],["result",6]]],[11,"visit_merge","","Visit an SQL `MERGE` query.",83,[[["merge",3]],["result",6]]],[11,"visit_query","","A walk through a complete `Query` statement",83,[[["query",4]],["result",6]]],[11,"visit_selection","","",83,[[["selectquery",4]],["result",6]]],[11,"visit_union","","A walk through a union of `SELECT` statements",83,[[["union",3]],["result",6]]],[11,"visit_columns","","The selected columns",83,[[["vec",3],["expression",3]],["result",6]]],[11,"visit_operation","","",83,[[["sqlop",4]],["result",6]]],[11,"visit_expression","","A visit to a value used in an expression",83,[[["expression",3]],["result",6]]],[11,"visit_multiple_tuple_comparison","","",83,[[["row",3],["values",3]],["result",6]]],[11,"visit_values","","",83,[[["values",3]],["result",6]]],[11,"visit_table","","A database table identifier",83,[[["table",3]],["result",6]]],[11,"visit_column","","A database column identifier",83,[[["column",3]],["result",6]]],[11,"visit_row","","A row of data used as an expression",83,[[["row",3]],["result",6]]],[11,"visit_conditions","","A walk through the query conditions",83,[[["conditiontree",4]],["result",6]]],[11,"visit_compare","","A comparison expression",83,[[["compare",4]],["result",6]]],[11,"visit_equals","","",83,[[["expression",3]],["result",6]]],[11,"visit_not_equals","","",83,[[["expression",3]],["result",6]]],[11,"visit_ordering","","A visit in the `ORDER BY` section of the query",83,[[["ordering",3]],["result",6]]],[11,"visit_grouping","","A visit in the `GROUP BY` section of the query",83,[[["grouping",3]],["result",6]]],[11,"visit_average","","",83,[[["average",3]],["result",6]]],[11,"visit_function","","",83,[[["function",3]],["result",6]]],[11,"visit_partitioning","","",83,[[["over",3]],["result",6]]],[11,"visit_cte","","",83,[[["commontableexpression",3]],["result",6]]],[6,"Result","quaint","",null,null],[14,"values","","Convert given set of tuples into `Values`.",null,null],[14,"col","","Marks a given string or a tuple as a column. Useful when…",null,null],[14,"val","","Marks a given string as a value. Useful when using a value…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","quaint::ast","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","quaint::connector","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"into_iter","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","quaint::error","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"as_fail","","",79,[[],["fail",8]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"as_fail","","",66,[[],["fail",8]]],[11,"from","quaint::pooled","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","quaint::serde","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","quaint::single","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","quaint::visitor","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"equals","quaint::ast","",20,[[],["compare",4]]],[11,"not_equals","","",20,[[],["compare",4]]],[11,"less_than","","",20,[[],["compare",4]]],[11,"less_than_or_equals","","",20,[[],["compare",4]]],[11,"greater_than","","",20,[[],["compare",4]]],[11,"greater_than_or_equals","","",20,[[],["compare",4]]],[11,"in_selection","","",20,[[],["compare",4]]],[11,"not_in_selection","","",20,[[],["compare",4]]],[11,"like","","",20,[[],["compare",4]]],[11,"not_like","","",20,[[],["compare",4]]],[11,"begins_with","","",20,[[],["compare",4]]],[11,"not_begins_with","","",20,[[],["compare",4]]],[11,"ends_into","","",20,[[],["compare",4]]],[11,"not_ends_into","","",20,[[],["compare",4]]],[11,"is_null","","",20,[[],["compare",4]]],[11,"is_not_null","","",20,[[],["compare",4]]],[11,"between","","",20,[[],["compare",4]]],[11,"not_between","","",20,[[],["compare",4]]],[11,"compare_raw","","",20,[[],["compare",4]]],[11,"equals","","",4,[[],["compare",4]]],[11,"not_equals","","",4,[[],["compare",4]]],[11,"less_than","","",4,[[],["compare",4]]],[11,"less_than_or_equals","","",4,[[],["compare",4]]],[11,"greater_than","","",4,[[],["compare",4]]],[11,"greater_than_or_equals","","",4,[[],["compare",4]]],[11,"in_selection","","",4,[[],["compare",4]]],[11,"not_in_selection","","",4,[[],["compare",4]]],[11,"like","","",4,[[],["compare",4]]],[11,"not_like","","",4,[[],["compare",4]]],[11,"begins_with","","",4,[[],["compare",4]]],[11,"not_begins_with","","",4,[[],["compare",4]]],[11,"ends_into","","",4,[[],["compare",4]]],[11,"not_ends_into","","",4,[[],["compare",4]]],[11,"is_null","","",4,[[],["compare",4]]],[11,"is_not_null","","",4,[[],["compare",4]]],[11,"between","","",4,[[],["compare",4]]],[11,"not_between","","",4,[[],["compare",4]]],[11,"compare_raw","","",4,[[],["compare",4]]],[11,"group","","",1,[[],["groupbydefinition",6]]],[11,"into_group_by_definition","","",1,[[],["groupbydefinition",6]]],[11,"into_group_by_definition","quaint","",102,[[],["groupbydefinition",6]]],[11,"order","quaint::ast","",1,[[["option",4],["order",4]],["orderdefinition",6]]],[11,"into_order_definition","","",1,[[],["orderdefinition",6]]],[11,"into_order_definition","quaint","",103,[[],["orderdefinition",6]]],[11,"alias","quaint::ast","",1,[[]]],[11,"alias","","",20,[[]]],[11,"alias","","",92,[[]]],[11,"alias","","",5,[[]]],[11,"build","quaint::visitor","",98,[[],["result",6]]],[11,"write","","",98,[[["display",8]],["result",6]]],[11,"add_parameter","","",98,[[["value",4]]]],[11,"compatibility_modifications","","A point to modify an incoming query to make it compatible…",98,[[["query",4]],["query",4]]],[11,"visit_equals","","",98,[[["expression",3]],["result",6]]],[11,"visit_not_equals","","",98,[[["expression",3]],["result",6]]],[11,"visit_raw_value","","",98,[[["value",4]],["result",6]]],[11,"visit_limit_and_offset","","",98,[[["value",4],["option",4]],["result",6]]],[11,"visit_insert","","",98,[[["insert",3]],["result",6]]],[11,"visit_merge","","",98,[[["merge",3]],["result",6]]],[11,"parameter_substitution","","",98,[[],["result",6]]],[11,"visit_aggregate_to_string","","",98,[[["expression",3]],["result",6]]],[11,"visit_multiple_tuple_comparison","","",98,[[["row",3],["values",3]],["result",6]]],[11,"visit_ordering","","",98,[[["ordering",3]],["result",6]]],[11,"visit_average","","",98,[[["average",3]],["result",6]]],[11,"build","","",99,[[],["result",6]]],[11,"write","","",99,[[["display",8]],["result",6]]],[11,"visit_raw_value","","",99,[[["value",4]],["result",6]]],[11,"visit_insert","","",99,[[["insert",3]],["result",6]]],[11,"parameter_substitution","","",99,[[],["result",6]]],[11,"add_parameter","","",99,[[["value",4]]]],[11,"visit_limit_and_offset","","",99,[[["value",4],["option",4]],["result",6]]],[11,"visit_aggregate_to_string","","",99,[[["expression",3]],["result",6]]],[11,"visit_equals","","",99,[[["expression",3]],["result",6]]],[11,"visit_not_equals","","",99,[[["expression",3]],["result",6]]],[11,"build","","",100,[[],["result",6]]],[11,"write","","",100,[[["display",8]],["result",6]]],[11,"add_parameter","","",100,[[["value",4]]]],[11,"parameter_substitution","","",100,[[],["result",6]]],[11,"visit_limit_and_offset","","",100,[[["value",4],["option",4]],["result",6]]],[11,"visit_raw_value","","",100,[[["value",4]],["result",6]]],[11,"visit_insert","","",100,[[["insert",3]],["result",6]]],[11,"visit_aggregate_to_string","","",100,[[["expression",3]],["result",6]]],[11,"visit_equals","","",100,[[["expression",3]],["result",6]]],[11,"visit_not_equals","","",100,[[["expression",3]],["result",6]]],[11,"build","","",101,[[],["result",6]]],[11,"write","","",101,[[["display",8]],["result",6]]],[11,"visit_raw_value","","",101,[[["value",4]],["result",6]]],[11,"visit_insert","","",101,[[["insert",3]],["result",6]]],[11,"parameter_substitution","","",101,[[],["result",6]]],[11,"add_parameter","","",101,[[["value",4]]]],[11,"visit_limit_and_offset","","",101,[[["value",4],["option",4]],["result",6]]],[11,"visit_aggregate_to_string","","",101,[[["expression",3]],["result",6]]],[11,"visit_values","","",101,[[["values",3]],["result",6]]],[11,"query","quaint::connector","",52,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",52,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",52,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",52,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",52,[[],[["box",3],["pin",3]]]],[11,"version","","",52,[[],[["pin",3],["box",3]]]],[11,"query","","",54,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",54,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",54,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",54,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",54,[[],[["box",3],["pin",3]]]],[11,"version","","",54,[[],[["pin",3],["box",3]]]],[11,"begin_statement","","",54,[[]]],[11,"query","","",56,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",56,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",56,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",56,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",56,[[],[["box",3],["pin",3]]]],[11,"version","","",56,[[],[["pin",3],["box",3]]]],[11,"query","","",58,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",58,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",58,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",58,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",58,[[],[["box",3],["pin",3]]]],[11,"version","","",58,[[],[["pin",3],["box",3]]]],[11,"server_reset_query","","",58,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"query","","",59,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",59,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",59,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",59,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",59,[[],[["box",3],["pin",3]]]],[11,"version","","",59,[[],[["pin",3],["box",3]]]],[11,"query","quaint::pooled","",96,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",96,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",96,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",96,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",96,[[],[["box",3],["pin",3]]]],[11,"version","","",96,[[],[["pin",3],["box",3]]]],[11,"server_reset_query","","",96,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"begin_statement","","",96,[[]]],[11,"query","quaint::single","",82,[[["query",4]],[["pin",3],["box",3]]]],[11,"execute","","",82,[[["query",4]],[["pin",3],["box",3]]]],[11,"query_raw","","",82,[[],[["pin",3],["box",3]]]],[11,"execute_raw","","",82,[[],[["pin",3],["box",3]]]],[11,"raw_cmd","","",82,[[],[["box",3],["pin",3]]]],[11,"version","","",82,[[],[["pin",3],["box",3]]]],[11,"begin_statement","","",82,[[]]],[11,"start_transaction","quaint::connector","",54,[[],[["box",3],["pin",3]]]],[11,"from","quaint::ast","",6,[[]]],[11,"from","","",20,[[["column",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["string",3]]]],[11,"from","","",1,[[],["column",3]]],[11,"from","","",8,[[["compare",4]]]],[11,"from","","",20,[[["compare",4]]]],[11,"from","","",20,[[["conditiontree",4]]]],[11,"from","","",8,[[["select",3]]]],[11,"from","","",15,[[["delete",3]]]],[11,"from","","",20,[[["row",3]]]],[11,"from","","",20,[[["function",3]]]],[11,"from","","",20,[[["raw",3]]]],[11,"from","","",20,[[["values",3]]]],[11,"from","","",20,[[["sqlop",4]]]],[11,"from","","",20,[[]]],[11,"from","","",20,[[["vec",3]]]],[11,"from","","",20,[[["expressionkind",4]]]],[11,"from","","",92,[[["rownumber",3]]]],[11,"from","","",20,[[["rownumber",3]]]],[11,"from","","",92,[[["count",3]]]],[11,"from","","",20,[[["count",3]]]],[11,"from","","",92,[[["aggregatetostring",3]]]],[11,"from","","",20,[[["aggregatetostring",3]]]],[11,"from","","",92,[[["average",3]]]],[11,"from","","",20,[[["average",3]]]],[11,"from","","",92,[[["sum",3]]]],[11,"from","","",20,[[["sum",3]]]],[11,"from","","",92,[[["lower",3]]]],[11,"from","","",20,[[["lower",3]]]],[11,"from","","",92,[[["upper",3]]]],[11,"from","","",20,[[["upper",3]]]],[11,"from","","",92,[[["minimum",3]]]],[11,"from","","",20,[[["minimum",3]]]],[11,"from","","",92,[[["maximum",3]]]],[11,"from","","",20,[[["maximum",3]]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[["vec",3]]]],[11,"from","","",15,[[["insert",3]]]],[11,"from","","",22,[[["singlerowinsert",3]]]],[11,"from","","",22,[[["multirowinsert",3]]]],[11,"from","","",15,[[["singlerowinsert",3]],["query",4]]],[11,"from","","",15,[[["multirowinsert",3]],["query",4]]],[11,"from","","",25,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[["select",3]]]],[11,"from","","",16,[[["union",3]]]],[11,"from","","",15,[[["selectquery",4]]]],[11,"from","","",4,[[["vec",3]],["row",3]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"from","","",20,[[["select",3]],["expression",3]]],[11,"from","","",15,[[["select",3]],["query",4]]],[11,"from","","",5,[[],["table",3]]],[11,"from","","",5,[[["string",3]],["table",3]]],[11,"from","","",5,[[],["table",3]]],[11,"from","","",5,[[],["table",3]]],[11,"from","","",5,[[],["table",3]]],[11,"from","","",5,[[],["table",3]]],[11,"from","","",5,[[["string",3]]]],[11,"from","","",5,[[["row",3],["vec",3]]]],[11,"from","","",5,[[["values",3]]]],[11,"from","","",5,[[],["table",3]]],[11,"from","","",5,[[["select",3]]]],[11,"from","","",15,[[["union",3]]]],[11,"from","","",20,[[["union",3]]]],[11,"from","","",15,[[["update",3]]]],[11,"from","quaint","",0,[[]]],[11,"from","","",0,[[["option",4]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["option",4]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["option",4]]]],[11,"from","","",0,[[["string",3]]]],[11,"from","","",0,[[["string",3],["option",4]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["option",4]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["option",4]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["option",4]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["option",4]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["option",4]]]],[11,"from","","",0,[[["datetime",3],["utc",3]]]],[11,"from","","",0,[[["option",4],["datetime",3]]]],[11,"from","","",0,[[["naivetime",3]]]],[11,"from","","",0,[[["option",4],["naivetime",3]]]],[11,"from","","",0,[[["naivedate",3]]]],[11,"from","","",0,[[["option",4],["naivedate",3]]]],[11,"from","","",0,[[["bigdecimal",3]]]],[11,"from","","",0,[[["bigdecimal",3],["option",4]]]],[11,"from","","",0,[[["jsonvalue",4]]]],[11,"from","","",0,[[["option",4],["jsonvalue",4]]]],[11,"from","","",0,[[["uuid",3]]]],[11,"from","","",0,[[["uuid",3],["option",4]]]],[11,"from","quaint::ast","",30,[[]]],[11,"from","quaint::error","",79,[[["error",4]],["error",3]]],[11,"from","","",79,[[["error",4]],["error",3]]],[11,"from","","",79,[[["error",3]],["error",3]]],[11,"from","","",79,[[["error",3]],["error",3]]],[11,"from","","",79,[[["error",3]],["error",3]]],[11,"from","","",79,[[["error",4]],["error",3]]],[11,"from","","",79,[[["fromsqlerror",4]],["error",3]]],[11,"from","","",66,[[["error",3]]]],[11,"from","","",79,[[["parsebigdecimalerror",4]]]],[11,"from","","",79,[[["error",3]]]],[11,"from","","",79,[[["error",3]]]],[11,"from","","",79,[[["tryfrominterror",3]]]],[11,"from","","",79,[[["error",3]],["error",3]]],[11,"from","","",79,[[["error",4],["error",3]]]],[11,"from","","",79,[[["elapsed",3]]]],[11,"from","","",79,[[["parseerror",4]],["error",3]]],[11,"from","","",79,[[["error",3]],["error",3]]],[11,"from","","",79,[[["parseinterror",3]],["error",3]]],[11,"from","","",79,[[["parseboolerror",3]],["error",3]]],[11,"from","","",79,[[["fromutf8error",3]],["error",3]]],[11,"into_iter","quaint::ast","",4,[[]]],[11,"into_iter","","",30,[[]]],[11,"into_iter","quaint::connector","",49,[[]]],[11,"into_iter","","",51,[[]]],[11,"next","","",95,[[],["option",4]]],[11,"clone","quaint::ast","",1,[[],["column",3]]],[11,"clone","","",6,[[],["defaultvalue",4]]],[11,"clone","","",7,[[],["compare",4]]],[11,"clone","","",8,[[],["conditiontree",4]]],[11,"clone","","",18,[[],["commontableexpression",3]]],[11,"clone","","",19,[[],["delete",3]]],[11,"clone","","",20,[[],["expression",3]]],[11,"clone","","",9,[[],["expressionkind",4]]],[11,"clone","","",84,[[],["aggregatetostring",3]]],[11,"clone","","",85,[[],["average",3]]],[11,"clone","","",86,[[],["count",3]]],[11,"clone","","",87,[[],["lower",3]]],[11,"clone","","",88,[[],["maximum",3]]],[11,"clone","","",89,[[],["minimum",3]]],[11,"clone","","",21,[[],["rownumber",3]]],[11,"clone","","",90,[[],["sum",3]]],[11,"clone","","",91,[[],["upper",3]]],[11,"clone","","",92,[[],["function",3]]],[11,"clone","","",2,[[],["grouping",3]]],[11,"clone","","",10,[[],["indexdefinition",4]]],[11,"clone","","",22,[[],["insert",3]]],[11,"clone","","",23,[[],["singlerowinsert",3]]],[11,"clone","","",24,[[],["multirowinsert",3]]],[11,"clone","","",11,[[],["onconflict",4]]],[11,"clone","","",25,[[],["joindata",3]]],[11,"clone","","",12,[[],["join",4]]],[11,"clone","","",13,[[],["sqlop",4]]],[11,"clone","","",3,[[],["ordering",3]]],[11,"clone","","",14,[[],["order",4]]],[11,"clone","","",26,[[],["over",3]]],[11,"clone","","",15,[[],["query",4]]],[11,"clone","","",16,[[],["selectquery",4]]],[11,"clone","","",4,[[],["row",3]]],[11,"clone","","",27,[[],["select",3]]],[11,"clone","","",17,[[],["tabletype",4]]],[11,"clone","","",5,[[],["table",3]]],[11,"clone","","",28,[[],["union",3]]],[11,"clone","","",29,[[],["update",3]]],[11,"clone","","",93,[[],["raw",3]]],[11,"clone","quaint","",0,[[],["value",4]]],[11,"clone","quaint::ast","",30,[[],["values",3]]],[11,"clone","quaint::connector","",43,[[],["connectioninfo",4]]],[11,"clone","","",46,[[],["sqlfamily",4]]],[11,"clone","","",53,[[],["mssqlurl",3]]],[11,"clone","","",47,[[],["encryptmode",4]]],[11,"clone","","",48,[[],["isolationlevel",4]]],[11,"clone","","",55,[[],["mysqlurl",3]]],[11,"clone","","",42,[[],["sslacceptmode",4]]],[11,"clone","","",94,[[],["sslparams",3]]],[11,"clone","","",57,[[],["postgresurl",3]]],[11,"clone","quaint::pooled","",81,[[],["quaint",3]]],[11,"clone","quaint::single","",82,[[],["quaint",3]]],[11,"default","quaint::ast","",1,[[],["column",3]]],[11,"default","","",6,[[]]],[11,"default","","",8,[[]]],[11,"default","","",21,[[],["rownumber",3]]],[11,"default","","",2,[[],["grouping",3]]],[11,"default","","",3,[[],["ordering",3]]],[11,"default","","",26,[[],["over",3]]],[11,"default","","",4,[[],["row",3]]],[11,"default","","",27,[[],["select",3]]],[11,"default","","",28,[[],["union",3]]],[11,"default","","",30,[[],["values",3]]],[11,"default","quaint::connector","",51,[[],["resultset",3]]],[11,"eq","quaint::ast","",6,[[["defaultvalue",4]]]],[11,"ne","","",6,[[["defaultvalue",4]]]],[11,"eq","","",1,[[["column",3]]]],[11,"eq","","",7,[[["compare",4]]]],[11,"ne","","",7,[[["compare",4]]]],[11,"eq","","",8,[[["conditiontree",4]]]],[11,"ne","","",8,[[["conditiontree",4]]]],[11,"eq","","",18,[[["commontableexpression",3]]]],[11,"ne","","",18,[[["commontableexpression",3]]]],[11,"eq","","",19,[[["delete",3]]]],[11,"ne","","",19,[[["delete",3]]]],[11,"eq","","",20,[[["expression",3]]]],[11,"ne","","",20,[[["expression",3]]]],[11,"eq","","",9,[[["expressionkind",4]]]],[11,"ne","","",9,[[["expressionkind",4]]]],[11,"eq","","",84,[[["aggregatetostring",3]]]],[11,"ne","","",84,[[["aggregatetostring",3]]]],[11,"eq","","",85,[[["average",3]]]],[11,"ne","","",85,[[["average",3]]]],[11,"eq","","",86,[[["count",3]]]],[11,"ne","","",86,[[["count",3]]]],[11,"eq","","",87,[[["lower",3]]]],[11,"ne","","",87,[[["lower",3]]]],[11,"eq","","",88,[[["maximum",3]]]],[11,"ne","","",88,[[["maximum",3]]]],[11,"eq","","",89,[[["minimum",3]]]],[11,"ne","","",89,[[["minimum",3]]]],[11,"eq","","",21,[[["rownumber",3]]]],[11,"ne","","",21,[[["rownumber",3]]]],[11,"eq","","",90,[[["sum",3]]]],[11,"ne","","",90,[[["sum",3]]]],[11,"eq","","",91,[[["upper",3]]]],[11,"ne","","",91,[[["upper",3]]]],[11,"eq","","",92,[[["function",3]]]],[11,"ne","","",92,[[["function",3]]]],[11,"eq","","",2,[[["grouping",3]]]],[11,"ne","","",2,[[["grouping",3]]]],[11,"eq","","",10,[[["indexdefinition",4]]]],[11,"ne","","",10,[[["indexdefinition",4]]]],[11,"eq","","",22,[[["insert",3]]]],[11,"ne","","",22,[[["insert",3]]]],[11,"eq","","",23,[[["singlerowinsert",3]]]],[11,"ne","","",23,[[["singlerowinsert",3]]]],[11,"eq","","",24,[[["multirowinsert",3]]]],[11,"ne","","",24,[[["multirowinsert",3]]]],[11,"eq","","",11,[[["onconflict",4]]]],[11,"eq","","",25,[[["joindata",3]]]],[11,"ne","","",25,[[["joindata",3]]]],[11,"eq","","",12,[[["join",4]]]],[11,"ne","","",12,[[["join",4]]]],[11,"eq","","",13,[[["sqlop",4]]]],[11,"ne","","",13,[[["sqlop",4]]]],[11,"eq","","",3,[[["ordering",3]]]],[11,"ne","","",3,[[["ordering",3]]]],[11,"eq","","",14,[[["order",4]]]],[11,"eq","","",26,[[["over",3]]]],[11,"ne","","",26,[[["over",3]]]],[11,"eq","","",15,[[["query",4]]]],[11,"ne","","",15,[[["query",4]]]],[11,"eq","","",16,[[["selectquery",4]]]],[11,"ne","","",16,[[["selectquery",4]]]],[11,"eq","","",4,[[["row",3]]]],[11,"ne","","",4,[[["row",3]]]],[11,"eq","","",27,[[["select",3]]]],[11,"ne","","",27,[[["select",3]]]],[11,"eq","","",17,[[["tabletype",4]]]],[11,"ne","","",17,[[["tabletype",4]]]],[11,"eq","","",5,[[["table",3]]]],[11,"eq","","",28,[[["union",3]]]],[11,"ne","","",28,[[["union",3]]]],[11,"eq","","",29,[[["update",3]]]],[11,"ne","","",29,[[["update",3]]]],[11,"eq","","",93,[[["raw",3]]]],[11,"ne","","",93,[[["raw",3]]]],[11,"eq","quaint","",0,[[["value",4]]]],[11,"ne","","",0,[[["value",4]]]],[11,"eq","quaint::ast","",30,[[["values",3]]]],[11,"ne","","",30,[[["values",3]]]],[11,"eq","quaint::connector","",46,[[["sqlfamily",4]]]],[11,"eq","","",42,[[["sslacceptmode",4]]]],[11,"eq","quaint::error","",65,[[["databaseconstraint",4]]]],[11,"ne","","",65,[[["databaseconstraint",4]]]],[11,"fmt","quaint::ast","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","quaint","",0,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::ast","",30,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::connector","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::error","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::serde","",97,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::single","",82,[[["formatter",3]],["result",6]]],[11,"fmt","quaint","",0,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::connector","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","quaint::error","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"div","quaint::ast","",20,[[]]],[11,"rem","","",20,[[]]],[11,"sub","","",20,[[]]],[11,"add","","",20,[[]]],[11,"mul","","",20,[[]]],[11,"index","quaint::connector","",50,[[],["value",4]]],[11,"index","","",49,[[],["value",4]]],[11,"try_from","quaint","",0,[[["columndata",4]],["result",6]]],[11,"try_from","quaint::connector","",41,[[],["result",6]]],[11,"try_from","","",59,[[],["result",6]]],[11,"from_str","","",47,[[],["result",6]]],[11,"from_str","","",48,[[],["result",6]]],[11,"deserialize_any","quaint::serde","",97,[[["visitor",8]],["result",4]]],[11,"deserialize_option","","",97,[[["visitor",8]],["result",4]]],[11,"deserialize_bytes","","",97,[[],["result",4]]],[11,"deserialize_bool","","",97,[[],["result",4]]],[11,"deserialize_i8","","",97,[[],["result",4]]],[11,"deserialize_i16","","",97,[[],["result",4]]],[11,"deserialize_i32","","",97,[[],["result",4]]],[11,"deserialize_i64","","",97,[[],["result",4]]],[11,"deserialize_u8","","",97,[[],["result",4]]],[11,"deserialize_u16","","",97,[[],["result",4]]],[11,"deserialize_u32","","",97,[[],["result",4]]],[11,"deserialize_u64","","",97,[[],["result",4]]],[11,"deserialize_f32","","",97,[[],["result",4]]],[11,"deserialize_f64","","",97,[[],["result",4]]],[11,"deserialize_char","","",97,[[],["result",4]]],[11,"deserialize_str","","",97,[[],["result",4]]],[11,"deserialize_byte_buf","","",97,[[],["result",4]]],[11,"deserialize_string","","",97,[[],["result",4]]],[11,"deserialize_unit","","",97,[[],["result",4]]],[11,"deserialize_unit_struct","","",97,[[],["result",4]]],[11,"deserialize_newtype_struct","","",97,[[],["result",4]]],[11,"deserialize_seq","","",97,[[],["result",4]]],[11,"deserialize_tuple","","",97,[[],["result",4]]],[11,"deserialize_tuple_struct","","",97,[[],["result",4]]],[11,"deserialize_map","","",97,[[],["result",4]]],[11,"deserialize_struct","","",97,[[],["result",4]]],[11,"deserialize_enum","","",97,[[],["result",4]]],[11,"deserialize_identifier","","",97,[[],["result",4]]],[11,"deserialize_ignored_any","","",97,[[],["result",4]]],[11,"into_deserializer","quaint","",0,[[]]],[11,"to_sql","","",0,[[],["columndata",4]]],[11,"to_sql","","",0,[[["postgrestype",3],["bytesmut",3]],[["isnull",4],["box",3],["result",4]]]],[11,"accepts","","",0,[[["postgrestype",3]]]],[11,"to_sql_checked","","",0,[[["type",3],["bytesmut",3]],[["result",4],["isnull",4],["box",3]]]],[11,"to_sql","","",0,[[],[["result",4],["tosqloutput",4],["rusqlerror",4]]]],[11,"into_cte","quaint::ast","",33,[[],["commontableexpression",3]]],[11,"ascend","","Change the order to `ASC`",38,[[],["orderdefinition",6]]],[11,"descend","","Change the order to `DESC`",38,[[],["orderdefinition",6]]],[11,"select","quaint::connector","Execute a `SELECT` query.",63,[[["select",3]],[["pin",3],["box",3]]]],[11,"insert","","Execute an `INSERT` query.",63,[[["insert",3]],[["pin",3],["box",3]]]],[11,"update","","Execute an `UPDATE` query, returning the number of…",63,[[["update",3]],[["pin",3],["box",3]]]],[11,"delete","","Execute a `DELETE` query, returning the number of affected…",63,[[["delete",3]],[["box",3],["pin",3]]]],[11,"server_reset_query","","Execute an arbitrary function in the beginning of each…",63,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"begin_statement","","Statement to begin a transaction",63,[[]]],[11,"start_transaction","","Starts a new transaction",64,[[],[["box",3],["pin",3]]]]],"p":[[4,"Value"],[3,"Column"],[3,"Grouping"],[3,"Ordering"],[3,"Row"],[3,"Table"],[4,"DefaultValue"],[4,"Compare"],[4,"ConditionTree"],[4,"ExpressionKind"],[4,"IndexDefinition"],[4,"OnConflict"],[4,"Join"],[4,"SqlOp"],[4,"Order"],[4,"Query"],[4,"SelectQuery"],[4,"TableType"],[3,"CommonTableExpression"],[3,"Delete"],[3,"Expression"],[3,"RowNumber"],[3,"Insert"],[3,"SingleRowInsert"],[3,"MultiRowInsert"],[3,"JoinData"],[3,"Over"],[3,"Select"],[3,"Union"],[3,"Update"],[3,"Values"],[8,"Comparable"],[8,"Conjunctive"],[8,"IntoCommonTableExpression"],[8,"Groupable"],[8,"IntoGroupByDefinition"],[8,"Joinable"],[8,"IntoOrderDefinition"],[8,"Orderable"],[8,"Aliasable"],[8,"IntoRaw"],[3,"SqliteParams"],[4,"SslAcceptMode"],[4,"ConnectionInfo"],[13,"Sqlite"],[13,"InMemorySqlite"],[4,"SqlFamily"],[4,"EncryptMode"],[4,"IsolationLevel"],[3,"ResultRow"],[3,"ResultRowRef"],[3,"ResultSet"],[3,"Transaction"],[3,"MssqlUrl"],[3,"Mssql"],[3,"MysqlUrl"],[3,"Mysql"],[3,"PostgresUrl"],[3,"PostgreSql"],[3,"Sqlite"],[8,"GetRow"],[8,"TakeRow"],[8,"ToColumnNames"],[8,"Queryable"],[8,"TransactionCapable"],[4,"DatabaseConstraint"],[4,"ErrorKind"],[13,"DatabaseDoesNotExist"],[13,"DatabaseAccessDenied"],[13,"DatabaseAlreadyExists"],[13,"AuthenticationFailed"],[13,"TableDoesNotExist"],[13,"UniqueConstraintViolation"],[13,"NullConstraintViolation"],[13,"ForeignKeyConstraintViolation"],[13,"ColumnNotFound"],[13,"LengthMismatch"],[13,"TlsError"],[13,"ValueOutOfRange"],[3,"Error"],[3,"Builder"],[3,"Quaint"],[3,"Quaint"],[8,"Visitor"],[3,"AggregateToString"],[3,"Average"],[3,"Count"],[3,"Lower"],[3,"Maximum"],[3,"Minimum"],[3,"Sum"],[3,"Upper"],[3,"Function"],[3,"Raw"],[3,"SslParams"],[3,"ResultSetIterator"],[3,"PooledConnection"],[3,"ValueDeserializer"],[3,"Mssql"],[3,"Mysql"],[3,"Postgres"],[3,"Sqlite"],[6,"GroupByDefinition"],[6,"OrderDefinition"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);