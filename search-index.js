var N=null,E="",T="t",U="u",searchIndex={};
var R=["prisma_query","values","ConditionTree","Compare","Select","Insert","Update","Delete","UnionAll","Column","Function","conditiontree","groupbydefinition","singlerowinsert","orderdefinition","is_empty","from_table","Adds `WHERE` conditions to the query. See Comparable for…","order_by","database","asterisk","databasevalue","so_that","option","datetime","compare","The World's Most Advanced Open Source Relational Database","postgresql","prisma_query::error","field_name","prisma_query::error::Error","parameterizedvalue","string","What to use to substitute a parameter in the query.","joindata","A comparison expression","resultrowref","result","resultset","try_from","borrow_mut","try_into","into_iter","type_id","borrow","typeid","to_owned","clone_into","prisma_query::ast","prisma_query::connector","prisma_query::visitor","not_equals","less_than","less_than_or_equals","greater_than","greater_than_or_equals","in_selection","not_in_selection","not_like","begins_with","not_begins_with","ends_into","not_ends_into","is_null","is_not_null","not_between","between","into_group_by_definition","into_order_definition","visit_insert","parameter_substitution","add_parameter","visit_limit_and_offset","visit_aggregate_to_string","with_connection","execute_on_connection","query_on_connection","query_on_raw_connection","with_transaction","expression","aggregatetostring","rownumber","function","grouping","insert","onconflict","ordering","tabletype","unionall","columnnames","column","select","update","delete","multirowinsert","default","formatter","tosqloutput","rusqlerror","postgrestype","backtrace","Change the order to `ASC`","Change the order to `DESC`","ColumnNames","Expression","OnConflict","TableType","DatabaseValue","ParameterizedValue","RowNumber","SingleRowInsert","MultiRowInsert","Comparable","Conjuctive","Groupable","IntoGroupByDefinition","IntoOrderDefinition","Orderable","Aliasable","PostgreSql","ResultSet","ResultRowRef","ResultRow","Connectional","Transactional","ResultSetIterator","AggregateToString","GroupByDefinition","OrderDefinition"];

searchIndex[R[0]]={"doc":"prisma-query","i":[[3,R[120],R[0],"Encapsulates a set of results and their respective column…",N,N],[3,R[121],E,"A reference to a `Row` in a `ResultSet`. The columns can…",N,N],[3,R[125],E,"Thin iterator for ResultSet rows. Might become lazy one day.",N,N],[3,R[122],E,E,N,N],[3,R[103],E,E,N,N],[12,"names",E,E,0,N],[3,"Row",E,E,N,N],[12,R[1],E,E,1,N],[0,"ast",E,"An abstract syntax tree for SQL queries.",N,N],[3,R[9],R[48],"A column definition.",N,N],[12,"name",E,E,2,N],[3,R[7],E,"A builder for a `DELETE` statement.",N,N],[3,R[126],E,E,N,N],[3,"Count",E,E,N,N],[3,R[109],E,E,N,N],[3,R[10],E,"A database function definition",N,N],[3,"Grouping",E,"A list of definitions for the `GROUP BY` statement",N,N],[12,"0",E,E,3,N],[3,R[5],E,"A builder for an `INSERT` statement.",N,N],[3,R[110],E,E,N,N],[3,R[111],E,E,N,N],[3,"JoinData",E,"The `JOIN` table and conditions.",N,N],[3,"Ordering",E,"A list of definitions for the `ORDER BY` statement",N,N],[12,"0",E,E,4,N],[3,"Over",E,E,N,N],[3,"Row",E,"A collection of values surrounded by parentheses.",N,N],[12,R[1],E,E,5,N],[3,R[4],E,"A builder for a `SELECT` statement.",N,N],[3,"Table",E,"A table definition",N,N],[12,"typ",E,E,6,N],[12,"alias",E,E,6,N],[12,R[19],E,E,6,N],[3,R[8],E,"A builder for a `UNION ALL` over multiple `SELECT`…",N,N],[12,"0",E,E,7,N],[3,R[6],E,"A builder for an `UPDATE` statement.",N,N],[4,R[3],E,"For modeling comparison expression",N,N],[13,"Equals",E,"`left = right`",8,N],[13,"NotEquals",E,"`left <> right`",8,N],[13,"LessThan",E,"`left < right`",8,N],[13,"LessThanOrEquals",E,"`left <= right`",8,N],[13,"GreaterThan",E,"`left > right`",8,N],[13,"GreaterThanOrEquals",E,"`left >= right`",8,N],[13,"In",E,"`left IN (..)`",8,N],[13,"NotIn",E,"`left NOT IN (..)`",8,N],[13,"Like",E,"`left LIKE %..%`",8,N],[13,"NotLike",E,"`left NOT LIKE %..%`",8,N],[13,"BeginsWith",E,"`left LIKE ..%`",8,N],[13,"NotBeginsWith",E,"`left NOT LIKE ..%`",8,N],[13,"EndsInto",E,"`left LIKE %..`",8,N],[13,"NotEndsInto",E,"`left NOT LIKE %..`",8,N],[13,"Null",E,"`value IS NULL`",8,N],[13,"NotNull",E,"`value IS NOT NULL`",8,N],[13,"Between",E,"`value` BETWEEN `left` AND `right`",8,N],[13,"NotBetween",E,"`value` NOT BETWEEN `left` AND `right`",8,N],[4,R[2],E,"Tree structures and leaves for condition building.",N,N],[13,"And",E,"`(left_expression AND right_expression)`",9,N],[13,"Or",E,"`(left_expression OR right_expression)`",9,N],[13,"Not",E,"`(NOT expression)`",9,N],[13,"Single",E,"A single expression leaf",9,N],[13,"NoCondition",E,"A leaf that does nothing to the condition, `1=1`",9,N],[13,"NegativeCondition",E,"A leaf that cancels the condition, `1=0`",9,N],[4,R[104],E,"A database expression.",N,N],[13,R[2],E,"A tree of expressions to evaluate from the deepest value…",10,N],[13,R[3],E,R[35],10,N],[13,"Value",E,"A single value, column, row or a nested select",10,N],[4,"Id",E,E,N,N],[13,"String",E,E,11,N],[13,"Int",E,E,11,N],[13,"UUID",E,E,11,N],[4,R[105],E,"`INSERT` conflict resolution strategies.",N,N],[13,"DoNothing",E,"When a row already exists, do nothing.",12,N],[4,"Join",E,"A representation of a `JOIN` statement.",N,N],[13,"Inner",E,"Implements an `INNER JOIN` with given `JoinData`.",13,N],[13,"LeftOuter",E,"Implements an `LEFT OUTER JOIN` with given `JoinData`.",13,N],[4,"Order",E,"The ordering direction",N,N],[13,"Asc",E,"Ascending",14,N],[13,"Desc",E,"Descending",14,N],[4,"Query",E,"A database query",N,N],[13,R[4],E,"Query for fetching data. E.g. the `SELECT` query.",15,N],[13,R[5],E,E,15,N],[13,R[6],E,E,15,N],[13,R[7],E,E,15,N],[13,R[8],E,E,15,N],[13,"Raw",E,E,15,N],[4,R[106],E,E,N,N],[13,"Table",E,E,16,N],[13,"Query",E,E,16,N],[4,R[107],E,"A value we can compare and use in database queries.",N,N],[13,"Parameterized",E,"Anything that we must parameterize before querying",17,N],[13,R[9],E,"A database column",17,N],[13,"Row",E,"Data in a row form, e.g. (1, 2, 3)",17,N],[13,R[4],E,"A nested `SELECT` statement",17,N],[13,R[10],E,"A database function call",17,N],[13,"Asterisk",E,"A qualified asterisk to a table",17,N],[4,R[108],E,"A value we must parameterize for the prepared statement.",N,N],[13,"Null",E,"A database null",18,N],[13,"Integer",E,"An integer value",18,N],[13,"Real",E,"A floating point value",18,N],[13,"Text",E,"A string value",18,N],[13,"Boolean",E,"A boolean value",18,N],[13,"Array",E,E,18,N],[13,"Json",E,"A JSON value",18,N],[13,"Uuid",E,E,18,N],[13,"DateTime",E,E,18,N],[5,"aggregate_to_string",E,"Aggregates the given field into a string.",N,[[[T]],[R[80]]]],[5,"count",E,"Count of the underlying table where the given expression…",N,[[[T]],["count"]]],[5,"row_number",E,"A number from 1 to n in specified order",N,[[],[R[81]]]],[5,R[20],E,"A quick alias to create an asterisk to a table.",N,[[],[R[21]]]],[11,"new",E,"Create a column definition.",2,[[["s"]],["self"]]],[11,"table",E,"Include the table name in the column expression.",2,[[[T]],["self"]]],[11,"opt_table",E,"Include the table name in the column expression, if table…",2,[[[R[23]]],["self"]]],[11,"alias",E,"Give the column an alias in the query.",2,[[["s"]],["self"]]],[11,"and",E,"An `AND` statement, is true when both sides are true.",9,[[["e"],["j"]],[R[11]]]],[11,"or",E,"An `OR` statement, is true when one side is true.",9,[[["e"],["j"]],[R[11]]]],[11,"not",E,"A `NOT` statement, is true when the expression is false.",9,[[["e"]],[R[11]]]],[11,"single",E,"A single leaf, is true when the expression is true.",9,[[["e"]],[R[11]]]],[11,"invert_if",E,"Inverts the entire condition tree if condition is met.",9,[[["bool"]],[R[11]]]],[11,R[16],E,"Creates a new `DELETE` statement for the given table.",19,[[[T]],["self"]]],[11,R[22],E,R[17],19,[[[T]],["self"]]],[11,R[18],E,"Define the order of the row number. Is the row order if…",20,[[[T]],["self"]]],[11,"partition_by",E,"Define the partitioning of the row number",20,[[[T]],["self"]]],[11,"alias",E,"Give the function an alias in the query.",21,[[["s"]],["self"]]],[11,"new",E,E,3,[[["vec",[R[12]]],[R[12]]],["self"]]],[11,R[15],E,E,3,[[["self"]],["bool"]]],[11,"single_into",E,"Creates a new single row `INSERT` statement for the given…",22,[[[T]],[R[13]]]],[11,"multi_into",E,"Creates a new multi row `INSERT` statement for the given…",22,[[["vec"],[T]],[R[94]]]],[11,"on_conflict",E,"Sets the conflict resolution strategy.",22,[[[R[85]]],["self"]]],[11,"returning",E,"Sets the returned columns. Works only with PostgreSQL.",22,[[["vec"]],["self"]]],[11,"value",E,"Adds a new value to the `INSERT` statement",23,[[["k"],["v"]],[R[13]]]],[11,R[1],E,"Adds a new row to be inserted.",24,[[["v"]],["self"]]],[11,"new",E,E,4,[[[R[14]],["vec",[R[14]]]],["self"]]],[11,R[15],E,E,4,[[["self"]],["bool"]]],[11,R[15],E,E,25,[[["self"]],["bool"]]],[11,"is_select",E,E,15,[[["self"]],["bool"]]],[11,"is_insert",E,E,15,[[["self"]],["bool"]]],[11,"is_update",E,E,15,[[["self"]],["bool"]]],[11,"is_delete",E,E,15,[[["self"]],["bool"]]],[11,"is_union_all",E,E,15,[[["self"]],["bool"]]],[11,"new",E,E,5,[[],["self"]]],[11,"push",E,E,5,[[[T]],["self"]]],[11,R[15],E,E,5,[[["self"]],["bool"]]],[11,R[16],E,"Creates a new `SELECT` statement for the given table.",26,[[[T]],["self"]]],[11,"value",E,"Selects a static value as the column.",26,[[[T]],["self"]]],[11,R[90],E,"Adds a column to be selected.",26,[[[T]],["self"]]],[11,"columns",E,"A bulk method to select multiple values.",26,[[["vec"]],["self"]]],[11,R[22],E,R[17],26,[[[T]],["self"]]],[11,"inner_join",E,"Adds `INNER JOIN` clause to the query.",26,[[["j"]],["self"]]],[11,"left_outer_join",E,"Adds `LEFT OUTER JOIN` clause to the query.",26,[[["j"]],["self"]]],[11,R[18],E,"Adds an ordering to the `ORDER BY` section.",26,[[[T]],["self"]]],[11,"group_by",E,"Adds a grouping to the `GROUP BY` section.",26,[[[T]],["self"]]],[11,"limit",E,"Sets the `LIMIT` value.",26,[[["usize"]],["self"]]],[11,"offset",E,"Sets the `OFFSET` value.",26,[[["usize"]],["self"]]],[11,R[19],E,"Define in which database the table is located",6,[[[T]],["self"]]],[11,R[20],E,"A qualified asterisk to this table",6,[[],[R[21]]]],[11,"add",E,"Creates a union with previous and given `SELECT` statement.",7,[[[R[91]]],["self"]]],[11,"table",E,"Creates the basis for an `UPDATE` statement to the given…",27,[[[T]],["self"]]],[11,"set",E,"Add another column value assignment to the query",27,[[["k"],["v"]],[R[92]]]],[11,R[22],E,R[17],27,[[[T]],["self"]]],[11,R[63],E,"`true` if the `ParameterizedValue` is null.",18,[[["self"]],["bool"]]],[11,"is_text",E,"`true` if the `ParameterizedValue` is text.",18,[[["self"]],["bool"]]],[11,"as_str",E,"Returns a &str if the value is a text, otherwise `None`.",18,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"into_string",E,"Transforms the `ParameterizedValue` to a `String` if it's…",18,[[],[[R[32]],[R[23],[R[32]]]]]],[11,"is_integer",E,"`true` if the `ParameterizedValue` is an integer.",18,[[["self"]],["bool"]]],[11,"as_i64",E,"Returns an i64 if the value is an integer, otherwise `None`.",18,[[["self"]],[[R[23],["i64"]],["i64"]]]],[11,"is_real",E,"`true` if the `ParameterizedValue` is a real value.",18,[[["self"]],["bool"]]],[11,"as_f64",E,"Returns a f64 if the value is a real value, otherwise…",18,[[["self"]],[["f64"],[R[23],["f64"]]]]],[11,"is_bool",E,"`true` if the `ParameterizedValue` is a boolean value.",18,[[["self"]],["bool"]]],[11,"as_bool",E,"Returns a bool if the value is a boolean, otherwise `None`.",18,[[["self"]],[[R[23],["bool"]],["bool"]]]],[11,"is_uuid",E,"`true` if the `ParameterizedValue` is of UUID type.",18,[[["self"]],["bool"]]],[11,"as_uuid",E,"Returns an UUID if the value is of UUID type, otherwise…",18,[[["self"]],[["uuid"],[R[23],["uuid"]]]]],[11,"is_datetime",E,"`true` if the `ParameterizedValue` is a DateTime.",18,[[["self"]],["bool"]]],[11,"as_datetime",E,"Returns a DateTime if the value is a DateTime, otherwise…",18,[[["self"]],[[R[24],["utc"]],[R[23],[R[24]]]]]],[11,"is_json",E,"`true` if the `ParameterizedValue` is a JSON value.",18,[[["self"]],["bool"]]],[11,"as_json",E,"Returns a reference to a JSON Value if of Json type,…",18,[[["self"]],[["value"],[R[23],["value"]]]]],[11,"into_json",E,"Transforms to a JSON Value if of Json type, otherwise…",18,[[],[["value"],[R[23],["value"]]]]],[6,R[127],E,E,N,N],[6,R[128],E,E,N,N],[8,R[112],E,"An item that can be compared against other values in the…",N,N],[10,"equals",E,"Tests if both sides are the same value.",28,[[[T]],[R[25]]]],[10,R[51],E,"Tests if both sides are not the same value.",28,[[[T]],[R[25]]]],[10,R[52],E,"Tests if the left side is smaller than the right side.",28,[[[T]],[R[25]]]],[10,R[53],E,"Tests if the left side is smaller than the right side or…",28,[[[T]],[R[25]]]],[10,R[54],E,"Tests if the left side is bigger than the right side.",28,[[[T]],[R[25]]]],[10,R[55],E,"Tests if the left side is bigger than the right side or…",28,[[[T]],[R[25]]]],[10,R[56],E,"Tests if the left side is included in the right side…",28,[[[T]],[R[25]]]],[10,R[57],E,"Tests if the left side is not included in the right side…",28,[[[T]],[R[25]]]],[10,"like",E,"Tests if the left side includes the right side string.",28,[[[T]],[R[25]]]],[10,R[58],E,"Tests if the left side does not include the right side…",28,[[[T]],[R[25]]]],[10,R[59],E,"Tests if the left side starts with the right side string.",28,[[[T]],[R[25]]]],[10,R[60],E,"Tests if the left side doesn't start with the right side…",28,[[[T]],[R[25]]]],[10,R[61],E,"Tests if the left side ends into the right side string.",28,[[[T]],[R[25]]]],[10,R[62],E,"Tests if the left side does not end into the right side…",28,[[[T]],[R[25]]]],[10,R[63],E,"Tests if the left side is `NULL`.",28,[[],[R[25]]]],[10,R[64],E,"Tests if the left side is not `NULL`.",28,[[],[R[25]]]],[10,R[66],E,"Tests if the value is between two given values.",28,[[["v"],[T]],[R[25]]]],[10,R[65],E,"Tests if the value is not between two given values.",28,[[["v"],[T]],[R[25]]]],[8,R[113],E,"`AND`, `OR` and `NOT` conjuctive implementations.",N,N],[10,"and",E,"Builds an `AND` condition having `self` as the left leaf…",29,[[["e"]],[R[11]]]],[10,"or",E,"Builds an `OR` condition having `self` as the left leaf…",29,[[["e"]],[R[11]]]],[10,"not",E,"Builds a `NOT` condition having `self` as the condition.",29,[[],[R[11]]]],[8,R[114],E,"An item that can be used in the `GROUP BY` statement",N,N],[10,"group",E,"Group by `self`",30,[[],[R[12]]]],[8,R[115],E,"Convert the value into a group by definition.",N,N],[10,R[67],E,E,31,[[],[R[12]]]],[8,"Joinable",E,"An item that can be joined.",N,N],[10,"on",E,"Add the `JOIN` conditions.",32,[[[T]],[R[34]]]],[8,R[116],E,"Convert the value into an order definition with order item…",N,N],[10,R[68],E,E,33,[[],[R[14]]]],[8,R[117],E,"An item that can be used in the `ORDER BY` statement",N,N],[10,"order",E,"Order by `self` in the given order",34,[[["order"],[R[23],["order"]]],[R[14]]]],[11,"ascend",E,R[101],34,[[],[R[14]]]],[11,"descend",E,R[102],34,[[],[R[14]]]],[8,R[118],E,"An object that can be aliased.",N,N],[10,"alias",E,"Alias table for usage elsewhere in the query.",35,[[[T]],["table"]]],[0,"connector",R[0],E,N,N],[3,"Sqlite",R[49],E,N,N],[3,R[119],E,R[26],N,N],[3,"Mysql",E,R[26],N,N],[12,"db_name",E,E,36,N],[11,"new",E,E,37,[[["u32"],[R[32]],["bool"]],[[R[37],["sqlite"]],["sqlite"]]]],[11,"does_file_exist",E,E,37,[[["self"]],["bool"]]],[11,"new",E,E,38,[[["u32"],["config"]],[[R[27]],[R[37],[R[27]]]]]],[11,"new",E,E,36,[[["optsbuilder"]],[[R[37],["mysql"]],["mysql"]]]],[11,"new_from_url",E,E,36,[[["str"]],[[R[37],["mysql"]],["mysql"]]]],[0,"error",R[0],E,N,N],[4,"Error",R[28],E,N,N],[13,"QueryError",E,E,39,N],[13,"NotFound",E,E,39,N],[13,"UniqueConstraintViolation",E,E,39,N],[12,R[29],R[30],E,39,N],[13,"NullConstraintViolation",R[28],E,39,N],[12,R[29],R[30],E,39,N],[13,"ConnectionError",R[28],E,39,N],[13,"ColumnReadFailure",E,E,39,N],[13,"ResultIndexOutOfBounds",E,E,39,N],[13,"ColumnNotFound",E,E,39,N],[13,"ResultTypeMismatch",E,E,39,N],[13,"DatabaseUrlIsInvalid",E,E,39,N],[0,"visitor",R[0],"Visitors for reading an abstract SQL syntax tree,…",N,N],[3,"Sqlite",R[50],"A visitor for generating queries for an SQLite database.…",N,N],[3,"Postgres",E,E,N,N],[3,"Mysql",E,E,N,N],[8,"Visitor",E,"A function travelling through the query AST, building the…",N,N],[18,"C_BACKTICK",E,"Backtick character to surround identifiers, such as column…",40,N],[18,"C_WILDCARD",E,"Wildcard character to be used in `LIKE` queries.",40,N],[10,"build",E,"Convert the given `Query` to an SQL string and a vector of…",40,[[["q"]]]],[10,R[71],E,"When called, the visitor decided to not render the…",40,[[[R[31]],["self"]]]],[10,R[72],E,"The `LIMIT` and `OFFSET` statement in the query",40,[[[R[31]],["self"],[R[23],[R[31]]]],[[R[32]],[R[23],[R[32]]]]]],[10,R[69],E,"A walk through an `INSERT` statement",40,[[["self"],[R[84]]],[R[32]]]],[10,R[70],E,R[33],40,[[["self"]],[R[32]]]],[10,R[73],E,R[33],40,[[[R[21]],["self"]],[R[32]]]],[11,"visit_parameterized",E,"A visit to a value we parameterize",40,[[[R[31]],["self"]],[R[32]]]],[11,"visit_joins",E,"The join statements in the query",40,[[["self"],["join"],["vec",["join"]]],[R[32]]]],[11,"visit_join_data",E,E,40,[[[R[34]],["self"]],[R[32]]]],[11,"visit_select",E,"A walk through a `SELECT` statement",40,[[[R[91]],["self"]],[R[32]]]],[11,"visit_update",E,"A walk through an `UPDATE` statement",40,[[["self"],[R[92]]],[R[32]]]],[11,"visit_delete",E,"A walk through an `DELETE` statement",40,[[[R[93]],["self"]],[R[32]]]],[11,"delimited_identifiers",E,"A helper for delimiting an identifier, surrounding every…",40,[[["str"],["vec",["str"]]],[R[32]]]],[11,"visit_query",E,"A walk through a complete `Query` statement",40,[[["self"],["query"]],[R[32]]]],[11,"visit_union_all",E,"A walk through a union of `SELECT` statements",40,[[["self"],[R[88]]],[R[32]]]],[11,"visit_columns",E,"The selected columns",40,[[[R[21]],["self"],["vec",[R[21]]]],[R[32]]]],[11,"visit_database_value",E,"A visit to a value used in an expression",40,[[[R[21]],["self"]],[R[32]]]],[11,"visit_table",E,"A database table identifier",40,[[["table"],["self"],["bool"]],[R[32]]]],[11,"visit_column",E,"A database column identifier",40,[[["self"],[R[90]]],[R[32]]]],[11,"visit_row",E,"A row of data used as an expression",40,[[["self"],["row"]],[R[32]]]],[11,"visit_conditions",E,"A walk through the query conditions",40,[[[R[11]],["self"]],[R[32]]]],[11,"visit_expression",E,"An expression that can either be a single value, a set of…",40,[[["self"],[R[79]]],[R[32]]]],[11,"visit_compare",E,R[35],40,[[[R[25]],["self"]],[R[32]]]],[11,"visit_ordering",E,"A visit in the `ORDER BY` section of the query",40,[[["self"],[R[86]]],[R[32]]]],[11,"visit_grouping",E,"A visit in the `GROUP BY` section of the query",40,[[[R[83]],["self"]],[R[32]]]],[11,"visit_function",E,E,40,[[[R[82]],["self"]],[R[32]]]],[11,"visit_partitioning",E,E,40,[[["self"],["over"]],[R[32]]]],[11,"new",R[0],"Creates a new instance, bound to the given column names…",41,[[["vec",["row"]],[R[89]],["row"]],[R[38]]]],[11,"len",E,"Returns the number of rows in the `ResultSet`.",41,[[["self"]],["usize"]]],[11,R[15],E,"Returns true if the `ResultSet` contains no rows.",41,[[["self"]],["bool"]]],[11,"first",E,"Returns the first row of the `ResultSet`, or None if the…",41,[[["self"]],[[R[23],[R[36]]],[R[36]]]]],[11,"get",E,"Returns a reference to a row in a given position.",41,[[["self"],["usize"]],[[R[23],[R[36]]],[R[36]]]]],[11,"at",E,E,42,[[["self"],["usize"]],[[R[31]],[R[23],[R[31]]]]]],[11,"get",E,E,42,[[["str"],["self"]],[[R[31]],[R[23],[R[31]]]]]],[11,"at",E,E,43,[[["self"],["usize"]],[[R[31]],[R[23],[R[31]]]]]],[11,"get",E,E,43,[[["str"],["self"]],[[R[31]],[R[23],[R[31]]]]]],[11,"as_ref",E,E,43,[[["self"]],[R[36]]]],[6,"Result",E,E,N,N],[8,"ValueIndex",E,E,N,N],[8,R[123],E,E,N,N],[10,R[74],E,"Opens a connection, which is valid inside the given…",44,[[["str"],["self"],["f"]],[R[37]]]],[10,R[75],E,E,44,[[["str"],["self"],["query"]],[[R[37],[R[23]]],[R[23],["id"]]]]],[10,R[76],E,E,44,[[["str"],["self"],["query"]],[[R[37],[R[38]]],[R[38]]]]],[10,R[77],E,E,44,[[["str"],["self"]],[[R[37],[R[38]]],[R[38]]]]],[8,"ToRow",E,E,N,N],[10,"to_result_row",E,E,45,[[["self"]],[[R[37],["row"]],["row"]]]],[8,"Transaction",E,"Represents a transaction.",N,N],[8,R[124],E,E,N,N],[16,"Error",E,E,46,N],[10,R[78],E,"Opens a connection and a transaction, which is valid…",46,[[["str"],["self"],["f"]],[R[37]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[42],E,E,41,[[],["i"]]],[11,"into",E,E,41,[[],[U]]],[11,R[39],E,E,41,[[[U]],[R[37]]]],[11,R[44],E,E,41,[[["self"]],[T]]],[11,R[43],E,E,41,[[["self"]],[R[45]]]],[11,R[40],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[],[R[37]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[39],E,E,42,[[[U]],[R[37]]]],[11,R[44],E,E,42,[[["self"]],[T]]],[11,R[43],E,E,42,[[["self"]],[R[45]]]],[11,R[40],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[],[R[37]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[42],E,E,47,[[],["i"]]],[11,"into",E,E,47,[[],[U]]],[11,R[39],E,E,47,[[[U]],[R[37]]]],[11,R[44],E,E,47,[[["self"]],[T]]],[11,R[43],E,E,47,[[["self"]],[R[45]]]],[11,R[40],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[],[R[37]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[39],E,E,43,[[[U]],[R[37]]]],[11,R[44],E,E,43,[[["self"]],[T]]],[11,R[43],E,E,43,[[["self"]],[R[45]]]],[11,R[40],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[],[R[37]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[[T],["self"]]]],[11,R[39],E,E,0,[[[U]],[R[37]]]],[11,R[44],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[R[45]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[[T],["self"]]]],[11,R[39],E,E,1,[[[U]],[R[37]]]],[11,R[44],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[R[45]]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[],[R[37]]]],[11,"from",R[48],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[[T],["self"]]]],[11,R[39],E,E,2,[[[U]],[R[37]]]],[11,R[44],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[R[45]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[],[R[37]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[[T],["self"]]]],[11,R[39],E,E,19,[[[U]],[R[37]]]],[11,R[44],E,E,19,[[["self"]],[T]]],[11,R[43],E,E,19,[[["self"]],[R[45]]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[],[R[37]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[[T],["self"]]]],[11,R[39],E,E,48,[[[U]],[R[37]]]],[11,R[44],E,E,48,[[["self"]],[T]]],[11,R[43],E,E,48,[[["self"]],[R[45]]]],[11,R[40],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[],[R[37]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[[T],["self"]]]],[11,R[39],E,E,49,[[[U]],[R[37]]]],[11,R[44],E,E,49,[[["self"]],[T]]],[11,R[43],E,E,49,[[["self"]],[R[45]]]],[11,R[40],E,E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[],[R[37]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[[T],["self"]]]],[11,R[39],E,E,20,[[[U]],[R[37]]]],[11,R[44],E,E,20,[[["self"]],[T]]],[11,R[43],E,E,20,[[["self"]],[R[45]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[],[R[37]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[[T],["self"]]]],[11,R[39],E,E,21,[[[U]],[R[37]]]],[11,R[44],E,E,21,[[["self"]],[T]]],[11,R[43],E,E,21,[[["self"]],[R[45]]]],[11,R[40],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[[T],["self"]]]],[11,R[39],E,E,3,[[[U]],[R[37]]]],[11,R[44],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[R[45]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[],[R[37]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[[T],["self"]]]],[11,R[39],E,E,22,[[[U]],[R[37]]]],[11,R[44],E,E,22,[[["self"]],[T]]],[11,R[43],E,E,22,[[["self"]],[R[45]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[],[R[37]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[39],E,E,23,[[[U]],[R[37]]]],[11,R[44],E,E,23,[[["self"]],[T]]],[11,R[43],E,E,23,[[["self"]],[R[45]]]],[11,R[40],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[],[R[37]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[39],E,E,24,[[[U]],[R[37]]]],[11,R[44],E,E,24,[[["self"]],[T]]],[11,R[43],E,E,24,[[["self"]],[R[45]]]],[11,R[40],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[],[R[37]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[[T],["self"]]]],[11,R[39],E,E,50,[[[U]],[R[37]]]],[11,R[44],E,E,50,[[["self"]],[T]]],[11,R[43],E,E,50,[[["self"]],[R[45]]]],[11,R[40],E,E,50,[[["self"]],[T]]],[11,R[41],E,E,50,[[],[R[37]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[[T],["self"]]]],[11,R[39],E,E,4,[[[U]],[R[37]]]],[11,R[44],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[R[45]]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[],[R[37]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[[T],["self"]]]],[11,R[39],E,E,25,[[[U]],[R[37]]]],[11,R[44],E,E,25,[[["self"]],[T]]],[11,R[43],E,E,25,[[["self"]],[R[45]]]],[11,R[40],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[[T],["self"]]]],[11,R[39],E,E,5,[[[U]],[R[37]]]],[11,R[44],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[R[45]]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[],[R[37]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[[T],["self"]]]],[11,R[39],E,E,26,[[[U]],[R[37]]]],[11,R[44],E,E,26,[[["self"]],[T]]],[11,R[43],E,E,26,[[["self"]],[R[45]]]],[11,R[40],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[[T],["self"]]]],[11,R[39],E,E,6,[[[U]],[R[37]]]],[11,R[44],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[R[45]]]],[11,R[40],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[],[R[37]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[[T],["self"]]]],[11,R[39],E,E,7,[[[U]],[R[37]]]],[11,R[44],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[R[45]]]],[11,R[40],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[],[R[37]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[[T],["self"]]]],[11,R[39],E,E,27,[[[U]],[R[37]]]],[11,R[44],E,E,27,[[["self"]],[T]]],[11,R[43],E,E,27,[[["self"]],[R[45]]]],[11,R[40],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[],[R[37]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[[T],["self"]]]],[11,R[39],E,E,8,[[[U]],[R[37]]]],[11,R[44],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[R[45]]]],[11,R[40],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[[T],["self"]]]],[11,R[39],E,E,9,[[[U]],[R[37]]]],[11,R[44],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"]],[R[45]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[],[R[37]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[[T],["self"]]]],[11,R[39],E,E,10,[[[U]],[R[37]]]],[11,R[44],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[["self"]],[R[45]]]],[11,R[40],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[],[R[37]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[[T],["self"]]]],[11,R[39],E,E,11,[[[U]],[R[37]]]],[11,R[44],E,E,11,[[["self"]],[T]]],[11,R[43],E,E,11,[[["self"]],[R[45]]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[],[R[37]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[[T],["self"]]]],[11,R[39],E,E,12,[[[U]],[R[37]]]],[11,R[44],E,E,12,[[["self"]],[T]]],[11,R[43],E,E,12,[[["self"]],[R[45]]]],[11,R[40],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[],[R[37]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[[T],["self"]]]],[11,R[39],E,E,13,[[[U]],[R[37]]]],[11,R[44],E,E,13,[[["self"]],[T]]],[11,R[43],E,E,13,[[["self"]],[R[45]]]],[11,R[40],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[],[R[37]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[[T],["self"]]]],[11,R[39],E,E,14,[[[U]],[R[37]]]],[11,R[44],E,E,14,[[["self"]],[T]]],[11,R[43],E,E,14,[[["self"]],[R[45]]]],[11,R[40],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[],[R[37]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[[T],["self"]]]],[11,R[39],E,E,15,[[[U]],[R[37]]]],[11,R[44],E,E,15,[[["self"]],[T]]],[11,R[43],E,E,15,[[["self"]],[R[45]]]],[11,R[40],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[],[R[37]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[[T],["self"]]]],[11,R[39],E,E,16,[[[U]],[R[37]]]],[11,R[44],E,E,16,[[["self"]],[T]]],[11,R[43],E,E,16,[[["self"]],[R[45]]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[],[R[37]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[[T],["self"]]]],[11,R[39],E,E,17,[[[U]],[R[37]]]],[11,R[44],E,E,17,[[["self"]],[T]]],[11,R[43],E,E,17,[[["self"]],[R[45]]]],[11,R[40],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[],[R[37]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[[T],["self"]]]],[11,R[39],E,E,18,[[[U]],[R[37]]]],[11,R[44],E,E,18,[[["self"]],[T]]],[11,R[43],E,E,18,[[["self"]],[R[45]]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[],[R[37]]]],[11,"to_value",E,E,18,[[["self"]],["value"]]],[11,"from",R[49],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[39],E,E,37,[[[U]],[R[37]]]],[11,R[44],E,E,37,[[["self"]],[T]]],[11,R[43],E,E,37,[[["self"]],[R[45]]]],[11,R[40],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[],[R[37]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[39],E,E,38,[[[U]],[R[37]]]],[11,R[44],E,E,38,[[["self"]],[T]]],[11,R[43],E,E,38,[[["self"]],[R[45]]]],[11,R[40],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[],[R[37]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[39],E,E,36,[[[U]],[R[37]]]],[11,R[44],E,E,36,[[["self"]],[T]]],[11,R[43],E,E,36,[[["self"]],[R[45]]]],[11,R[40],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[],[R[37]]]],[11,"from",R[28],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,"to_string",E,E,39,[[["self"]],[R[32]]]],[11,R[39],E,E,39,[[[U]],[R[37]]]],[11,R[44],E,E,39,[[["self"]],[T]]],[11,R[43],E,E,39,[[["self"]],[R[45]]]],[11,R[40],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[],[R[37]]]],[11,"as_fail",E,E,39,[[["self"]],["fail"]]],[11,"from",R[50],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[39],E,E,51,[[[U]],[R[37]]]],[11,R[44],E,E,51,[[["self"]],[T]]],[11,R[43],E,E,51,[[["self"]],[R[45]]]],[11,R[40],E,E,51,[[["self"]],[T]]],[11,R[41],E,E,51,[[],[R[37]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[39],E,E,52,[[[U]],[R[37]]]],[11,R[44],E,E,52,[[["self"]],[T]]],[11,R[43],E,E,52,[[["self"]],[R[45]]]],[11,R[40],E,E,52,[[["self"]],[T]]],[11,R[41],E,E,52,[[],[R[37]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[39],E,E,53,[[[U]],[R[37]]]],[11,R[44],E,E,53,[[["self"]],[T]]],[11,R[43],E,E,53,[[["self"]],[R[45]]]],[11,R[40],E,E,53,[[["self"]],[T]]],[11,R[41],E,E,53,[[],[R[37]]]],[11,"equals",R[48],E,5,[[[T]],[R[25]]]],[11,R[51],E,E,5,[[[T]],[R[25]]]],[11,R[52],E,E,5,[[[T]],[R[25]]]],[11,R[53],E,E,5,[[[T]],[R[25]]]],[11,R[54],E,E,5,[[[T]],[R[25]]]],[11,R[55],E,E,5,[[[T]],[R[25]]]],[11,R[56],E,E,5,[[[T]],[R[25]]]],[11,R[57],E,E,5,[[[T]],[R[25]]]],[11,"like",E,E,5,[[[T]],[R[25]]]],[11,R[58],E,E,5,[[[T]],[R[25]]]],[11,R[59],E,E,5,[[[T]],[R[25]]]],[11,R[60],E,E,5,[[[T]],[R[25]]]],[11,R[61],E,E,5,[[[T]],[R[25]]]],[11,R[62],E,E,5,[[[T]],[R[25]]]],[11,R[63],E,E,5,[[],[R[25]]]],[11,R[64],E,E,5,[[],[R[25]]]],[11,R[66],E,E,5,[[["v"],[T]],[R[25]]]],[11,R[65],E,E,5,[[["v"],[T]],[R[25]]]],[11,"equals",E,E,17,[[[T]],[R[25]]]],[11,R[51],E,E,17,[[[T]],[R[25]]]],[11,R[52],E,E,17,[[[T]],[R[25]]]],[11,R[53],E,E,17,[[[T]],[R[25]]]],[11,R[54],E,E,17,[[[T]],[R[25]]]],[11,R[55],E,E,17,[[[T]],[R[25]]]],[11,R[56],E,E,17,[[[T]],[R[25]]]],[11,R[57],E,E,17,[[[T]],[R[25]]]],[11,"like",E,E,17,[[[T]],[R[25]]]],[11,R[58],E,E,17,[[[T]],[R[25]]]],[11,R[59],E,E,17,[[[T]],[R[25]]]],[11,R[60],E,E,17,[[[T]],[R[25]]]],[11,R[61],E,E,17,[[[T]],[R[25]]]],[11,R[62],E,E,17,[[[T]],[R[25]]]],[11,R[63],E,E,17,[[],[R[25]]]],[11,R[64],E,E,17,[[],[R[25]]]],[11,R[66],E,E,17,[[["v"],[T]],[R[25]]]],[11,R[65],E,E,17,[[["v"],[T]],[R[25]]]],[11,"group",E,E,2,[[],[R[12]]]],[11,R[67],E,E,2,[[],[R[12]]]],[11,R[67],R[0],E,54,[[],[R[12]]]],[11,"order",R[48],E,2,[[["order"],[R[23],["order"]]],[R[14]]]],[11,R[68],E,E,2,[[],[R[14]]]],[11,R[68],R[0],E,55,[[],[R[14]]]],[11,"alias",R[48],E,6,[[[T]],["table"]]],[11,"build",R[50],E,51,[[["q"]]]],[11,R[69],E,E,51,[[["self"],[R[84]]],[R[32]]]],[11,R[70],E,E,51,[[["self"]],[R[32]]]],[11,R[71],E,E,51,[[[R[31]],["self"]]]],[11,R[72],E,E,51,[[[R[31]],["self"],[R[23],[R[31]]]],[[R[32]],[R[23],[R[32]]]]]],[11,R[73],E,E,51,[[[R[21]],["self"]],[R[32]]]],[11,"build",E,E,52,[[["q"]]]],[11,R[71],E,E,52,[[[R[31]],["self"]]]],[11,R[70],E,E,52,[[["self"]],[R[32]]]],[11,R[72],E,E,52,[[[R[31]],["self"],[R[23],[R[31]]]],[[R[32]],[R[23],[R[32]]]]]],[11,R[69],E,E,52,[[["self"],[R[84]]],[R[32]]]],[11,R[73],E,E,52,[[[R[21]],["self"]],[R[32]]]],[11,"build",E,E,53,[[["q"]]]],[11,R[69],E,E,53,[[["self"],[R[84]]],[R[32]]]],[11,R[70],E,E,53,[[["self"]],[R[32]]]],[11,R[71],E,E,53,[[[R[31]],["self"]]]],[11,R[72],E,E,53,[[[R[31]],["self"],[R[23],[R[31]]]],[[R[32]],[R[23],[R[32]]]]]],[11,R[73],E,E,53,[[[R[21]],["self"]],[R[32]]]],[11,R[74],R[49],E,37,[[["str"],["self"],["f"]],[R[37]]]],[11,R[75],E,E,37,[[["str"],["self"],["query"]],[[R[37],[R[23]]],[R[23],["id"]]]]],[11,R[76],E,E,37,[[["str"],["self"],["query"]],[[R[37],[R[38]]],[R[38]]]]],[11,R[77],E,E,37,[[["str"],["self"]],[[R[37],[R[38]]],[R[38]]]]],[11,R[74],E,E,38,[[["str"],["self"],["f"]],[R[37]]]],[11,R[75],E,E,38,[[["str"],["self"],["query"]],[[R[37],[R[23]]],[R[23],["id"]]]]],[11,R[76],E,E,38,[[["str"],["self"],["query"]],[[R[37],[R[38]]],[R[38]]]]],[11,R[77],E,E,38,[[["str"],["self"]],[[R[37],[R[38]]],[R[38]]]]],[11,R[74],E,E,36,[[["str"],["self"],["f"]],[R[37]]]],[11,R[75],E,E,36,[[["str"],["self"],["query"]],[[R[37],[R[23]]],[R[23],["id"]]]]],[11,R[76],E,E,36,[[["str"],["self"],["query"]],[[R[37],[R[38]]],[R[38]]]]],[11,R[77],E,E,36,[[["str"],["self"]],[[R[37],[R[38]]],[R[38]]]]],[11,R[78],E,E,37,[[["str"],["self"],["f"]],[R[37]]]],[11,R[78],E,E,38,[[["str"],["self"],["f"]],[R[37]]]],[11,R[78],E,E,36,[[["str"],["self"],["f"]],[R[37]]]],[11,"eq",R[48],E,2,[[[R[90]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[90]],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[25]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[25]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[11]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[11]],["self"]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[93]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[93]]],["bool"]]],[11,"eq",E,E,10,[[[R[79]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[79]],["self"]],["bool"]]],[11,"eq",E,E,48,[[[R[80]],["self"]],["bool"]]],[11,"ne",E,E,48,[[[R[80]],["self"]],["bool"]]],[11,"eq",E,E,49,[[["count"],["self"]],["bool"]]],[11,"ne",E,E,49,[[["count"],["self"]],["bool"]]],[11,"eq",E,E,20,[[[R[81]],["self"]],["bool"]]],[11,"ne",E,E,20,[[[R[81]],["self"]],["bool"]]],[11,"eq",E,E,21,[[[R[82]],["self"]],["bool"]]],[11,"ne",E,E,21,[[[R[82]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[83]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[83]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["id"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["id"]],["bool"]]],[11,"eq",E,E,22,[[[R[84]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[84]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[85]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[34]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[34]]],["bool"]]],[11,"eq",E,E,13,[[["join"],["self"]],["bool"]]],[11,"ne",E,E,13,[[["join"],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[86]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[86]]],["bool"]]],[11,"eq",E,E,14,[[["order"],["self"]],["bool"]]],[11,"eq",E,E,25,[[["over"],["self"]],["bool"]]],[11,"ne",E,E,25,[[["over"],["self"]],["bool"]]],[11,"eq",E,E,15,[[["query"],["self"]],["bool"]]],[11,"ne",E,E,15,[[["query"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["row"],["self"]],["bool"]]],[11,"ne",E,E,5,[[["row"],["self"]],["bool"]]],[11,"eq",E,E,26,[[[R[91]],["self"]],["bool"]]],[11,"ne",E,E,26,[[[R[91]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[87]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[87]]],["bool"]]],[11,"eq",E,E,6,[[["table"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["table"],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[88]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[88]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[92]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[92]]],["bool"]]],[11,"eq",E,E,18,[[[R[31]],["self"]],["bool"]]],[11,"ne",E,E,18,[[[R[31]],["self"]],["bool"]]],[11,"eq",E,E,17,[[[R[21]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[21]],["self"]],["bool"]]],[11,"eq",R[0],E,1,[[["self"],["row"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["row"]],["bool"]]],[11,"eq",E,E,0,[[[R[89]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[89]],["self"]],["bool"]]],[11,"clone",R[48],E,2,[[["self"]],[R[90]]]],[11,"clone",E,E,8,[[["self"]],[R[25]]]],[11,"clone",E,E,9,[[["self"]],[R[11]]]],[11,"clone",E,E,19,[[["self"]],[R[93]]]],[11,"clone",E,E,10,[[["self"]],[R[79]]]],[11,"clone",E,E,48,[[["self"]],[R[80]]]],[11,"clone",E,E,49,[[["self"]],["count"]]],[11,"clone",E,E,20,[[["self"]],[R[81]]]],[11,"clone",E,E,21,[[["self"]],[R[82]]]],[11,"clone",E,E,3,[[["self"]],[R[83]]]],[11,"clone",E,E,11,[[["self"]],["id"]]],[11,"clone",E,E,22,[[["self"]],[R[84]]]],[11,"clone",E,E,12,[[["self"]],[R[85]]]],[11,"clone",E,E,50,[[["self"]],[R[34]]]],[11,"clone",E,E,13,[[["self"]],["join"]]],[11,"clone",E,E,4,[[["self"]],[R[86]]]],[11,"clone",E,E,14,[[["self"]],["order"]]],[11,"clone",E,E,25,[[["self"]],["over"]]],[11,"clone",E,E,15,[[["self"]],["query"]]],[11,"clone",E,E,5,[[["self"]],["row"]]],[11,"clone",E,E,26,[[["self"]],[R[91]]]],[11,"clone",E,E,16,[[["self"]],[R[87]]]],[11,"clone",E,E,6,[[["self"]],["table"]]],[11,"clone",E,E,7,[[["self"]],[R[88]]]],[11,"clone",E,E,27,[[["self"]],[R[92]]]],[11,"clone",E,E,18,[[["self"]],[R[31]]]],[11,"clone",E,E,17,[[["self"]],[R[21]]]],[11,"clone",R[0],E,1,[[["self"]],["row"]]],[11,"clone",E,E,0,[[["self"]],[R[89]]]],[11,"from",R[48],E,17,[[[R[90]]],["self"]]],[11,"from",E,E,2,[[["str"]],["self"]]],[11,"from",E,E,2,[[[R[32]]],["self"]]],[11,"from",E,E,2,[[],[R[90]]]],[11,"from",E,E,9,[[[R[25]]],["self"]]],[11,"from",E,E,10,[[[R[25]]],["self"]]],[11,"from",E,E,10,[[[R[11]]],["self"]]],[11,"from",E,E,9,[[[R[91]]],["self"]]],[11,"from",E,E,15,[[[R[93]]],["self"]]],[11,"from",E,E,10,[[[R[91]]],[R[79]]]],[11,"from",E,E,21,[[[R[81]]],["self"]]],[11,"from",E,E,17,[[[R[81]]],["self"]]],[11,"from",E,E,21,[[["count"]],["self"]]],[11,"from",E,E,17,[[["count"]],["self"]]],[11,"from",E,E,21,[[[R[80]]],["self"]]],[11,"from",E,E,17,[[[R[80]]],["self"]]],[11,"from",E,E,15,[[[R[84]]],["self"]]],[11,"from",E,E,22,[[[R[13]]],["self"]]],[11,"from",E,E,22,[[[R[94]]],["self"]]],[11,"from",E,E,15,[[[R[13]]],["query"]]],[11,"from",E,E,15,[[[R[94]]],["query"]]],[11,"from",E,E,15,[[[T]],["self"]]],[11,"from",E,E,5,[[["vec"]],["row"]]],[11,"from",E,E,5,[[],["self"]]],[11,"from",E,E,5,[[],["self"]]],[11,"from",E,E,5,[[],["self"]]],[11,"from",E,E,5,[[],["self"]]],[11,"from",E,E,17,[[[R[91]]],[R[21]]]],[11,"from",E,E,15,[[[R[91]]],["query"]]],[11,"from",E,E,6,[[["str"]],["table"]]],[11,"from",E,E,6,[[],["table"]]],[11,"from",E,E,6,[[[R[32]]],["self"]]],[11,"from",E,E,6,[[],["table"]]],[11,"from",E,E,6,[[[R[91]]],["self"]]],[11,"from",E,E,7,[[[R[91]]],["self"]]],[11,"from",E,E,15,[[[R[88]]],["self"]]],[11,"from",E,E,15,[[[R[92]]],["self"]]],[11,"from",E,E,18,[[["str"]],["self"]]],[11,"from",E,E,18,[[[R[32]]],["self"]]],[11,"from",E,E,18,[[["usize"]],["self"]]],[11,"from",E,E,18,[[["i32"]],["self"]]],[11,"from",E,E,18,[[["i64"]],["self"]]],[11,"from",E,E,18,[[["f64"]],["self"]]],[11,"from",E,E,18,[[["bool"]],["self"]]],[11,"from",E,E,18,[[["value"]],["self"]]],[11,"from",E,E,18,[[["uuid"]],["self"]]],[11,"from",E,E,18,[[[R[24],["utc"]],["utc"]],["self"]]],[11,"from",E,E,17,[[["row"]],["self"]]],[11,"from",E,E,17,[[[R[82]]],["self"]]],[11,"from",E,E,17,[[[T]],["self"]]],[11,"from",E,E,17,[[["vec"]],["self"]]],[11,"from",R[28],E,39,[[["error"]],["error"]]],[11,"from",E,E,39,[[["fromsqlerror"]],["error"]]],[11,"from",E,E,39,[[["error"]],["error"]]],[11,"from",E,E,39,[[["error"]],["error"]]],[11,"from",E,E,39,[[["error"]],["error"]]],[11,"from",E,E,39,[[["fromutf8error"]],["error"]]],[11,"from",E,E,39,[[["error"]],["error"]]],[11,"from",E,E,39,[[["parseerror"]],["error"]]],[11,"from",R[0],E,1,[[["vec"]],["self"]]],[11,"from",E,E,0,[[["vec"]],["self"]]],[11,R[42],E,E,41,[[]]],[11,"next",E,E,47,[[["self"]],[R[23]]]],[11,R[95],R[48],E,2,[[],[R[90]]]],[11,R[95],E,E,9,[[],["self"]]],[11,R[95],E,E,20,[[],[R[81]]]],[11,R[95],E,E,3,[[],[R[83]]]],[11,R[95],E,E,4,[[],[R[86]]]],[11,R[95],E,E,25,[[],["over"]]],[11,R[95],E,E,5,[[],["row"]]],[11,R[95],E,E,26,[[],[R[91]]]],[11,R[95],E,E,7,[[],[R[88]]]],[11,R[95],R[0],E,1,[[],["row"]]],[11,R[95],E,E,0,[[],[R[89]]]],[11,"fmt",R[48],E,2,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,19,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,10,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,48,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,49,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,20,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,21,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,11,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,22,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,12,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,50,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,13,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,4,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,14,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,25,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,15,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,26,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,16,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,27,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,18,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,17,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",R[28],E,39,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",R[0],E,41,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",E,E,0,[[[R[96]],["self"]],[R[37]]]],[11,"fmt",R[28],E,39,[[["self"],[R[96]]],[R[37]]]],[11,"hash",R[48],E,11,[[["self"],["__h"]]]],[11,"index",R[0],E,42,[[["i"],["self"]],[R[31]]]],[11,"index",E,E,43,[[["i"],["self"]],[R[31]]]],[11,R[39],R[49],"Todo connection limit configuration",37,[[["str"]],[[R[37],["sqlite"]],["sqlite"]]]],[11,"to_sql",R[48],E,18,[[["self"]],[[R[98]],[R[97]],[R[37],[R[97],R[98]]]]]],[11,"to_sql",E,E,18,[[["self"],["vec"],["type"]],[["box",["error"]],[R[37],["isnull","box"]],["isnull"]]]],[11,"accepts",E,E,18,[[["type"]],["bool"]]],[11,"to_sql_checked",E,E,18,[[["self"],["vec"],["type"]],[["box",["error"]],[R[37],["isnull","box"]],["isnull"]]]],[11,"from_sql",E,E,11,[[[R[99]]],[["box",["error"]],[R[37],["id","box"]],["id"]]]],[11,"accepts",E,E,11,[[[R[99]]],["bool"]]],[11,"name",R[28],E,39,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"cause",E,E,39,[[["self"]],[["fail"],[R[23],["fail"]]]]],[11,R[100],E,E,39,[[["self"]],[[R[100]],[R[23],[R[100]]]]]],[11,"ascend",R[48],R[101],34,[[],[R[14]]]],[11,"descend",E,R[102],34,[[],[R[14]]]]],"p":[[3,R[103]],[3,"Row"],[3,R[9]],[3,"Grouping"],[3,"Ordering"],[3,"Row"],[3,"Table"],[3,R[8]],[4,R[3]],[4,R[2]],[4,R[104]],[4,"Id"],[4,R[105]],[4,"Join"],[4,"Order"],[4,"Query"],[4,R[106]],[4,R[107]],[4,R[108]],[3,R[7]],[3,R[109]],[3,R[10]],[3,R[5]],[3,R[110]],[3,R[111]],[3,"Over"],[3,R[4]],[3,R[6]],[8,R[112]],[8,R[113]],[8,R[114]],[8,R[115]],[8,"Joinable"],[8,R[116]],[8,R[117]],[8,R[118]],[3,"Mysql"],[3,"Sqlite"],[3,R[119]],[4,"Error"],[8,"Visitor"],[3,R[120]],[3,R[121]],[3,R[122]],[8,R[123]],[8,"ToRow"],[8,R[124]],[3,R[125]],[3,R[126]],[3,"Count"],[3,"JoinData"],[3,"Sqlite"],[3,"Postgres"],[3,"Mysql"],[6,R[127]],[6,R[128]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);