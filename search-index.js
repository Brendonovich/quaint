var N=null,E="",T="t",U="u",searchIndex={};
var R=["quaint","ConditionTree","Compare","Select","Insert","Update","Delete","UnionAll","Column","Function","conditiontree","groupbydefinition","singlerowinsert","orderdefinition","is_empty","from_table","Adds `WHERE` conditions to the query. See Comparable for…","order_by","database","asterisk","databasevalue","so_that","option","datetime","compare","connection_limit","Wraps a connection url and exposes the parsing logic used…","parameterizedvalue","Take a value from a certain position in the row, if having…","string","resultrowref","username","password","query_params","sslparams","from_params","result","resultset","Executes a query given as SQL, interpolating the given…","transaction","quaint::error","quaint::error::Error","db_name","field_name","CheckOut","optsbuilder","What to use to substitute a parameter in the query.","joindata","A comparison expression","quaint::ast","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","borrow","typeid","to_string","quaint::connector","into_iter","try_poll","quaint::pool","quaint::visitor","not_equals","less_than","less_than_or_equals","greater_than","greater_than_or_equals","in_selection","not_in_selection","not_like","begins_with","not_begins_with","ends_into","not_ends_into","is_null","is_not_null","not_between","between","into_group_by_definition","into_order_definition","query_raw","execute_raw","turn_off_fk_constraints","turn_on_fk_constraints","empty_tables","start_transaction","execute","raw_cmd","visit_insert","parameter_substitution","add_parameter","visit_limit_and_offset","visit_aggregate_to_string","display","insert","default","rownumber","grouping","expression","aggregatetostring","onconflict","ordering","unionall","mysqlurlqueryparams","postgresurlqueryparams","function","tabletype","sslacceptmode","multirowinsert","formatter","backtrace","postgrestype","tosqloutput","rusqlerror","Change the order to `ASC`","Change the order to `DESC`","Empties the given set of tables.","For inserting data. Returns the ID of the last inserted row.","For updating data.","For deleting data.","Expression","OnConflict","TableType","DatabaseValue","ParameterizedValue","RowNumber","SingleRowInsert","MultiRowInsert","Comparable","Conjuctive","Groupable","IntoGroupByDefinition","IntoOrderDefinition","Orderable","Aliasable","MysqlParams","PostgresParams","SqliteParams","SslAcceptMode","ResultRow","ResultRowRef","ResultSet","Transaction","PostgresUrl","PostgreSql","ToColumnNames","Queryable","MysqlManager","PostgresManager","SqliteManager","AggregateToString","MysqlUrlQueryParams","SslParams","PostgresUrlQueryParams","ResultSetIterator","GroupByDefinition","OrderDefinition"];

searchIndex["quaint"]={"doc":R[0],"i":[[0,"ast",R[0],"An abstract syntax tree for SQL queries.",N,N],[3,R[8],R[49],"A column definition.",N,N],[12,"name",E,E,0,N],[3,R[6],E,"A builder for a `DELETE` statement.",N,N],[3,R[152],E,E,N,N],[3,"Count",E,E,N,N],[3,R[127],E,E,N,N],[3,R[9],E,"A database function definition",N,N],[3,"Grouping",E,"A list of definitions for the `GROUP BY` statement",N,N],[12,"0",E,E,1,N],[3,R[4],E,"A builder for an `INSERT` statement.",N,N],[3,R[128],E,E,N,N],[3,R[129],E,E,N,N],[3,"JoinData",E,"The `JOIN` table and conditions.",N,N],[3,"Ordering",E,"A list of definitions for the `ORDER BY` statement",N,N],[12,"0",E,E,2,N],[3,"Over",E,E,N,N],[3,"Row",E,"A collection of values surrounded by parentheses.",N,N],[12,"values",E,E,3,N],[3,R[3],E,"A builder for a `SELECT` statement.",N,N],[3,"Table",E,"A table definition",N,N],[12,"typ",E,E,4,N],[12,"alias",E,E,4,N],[12,R[18],E,E,4,N],[3,R[7],E,"A builder for a `UNION ALL` over multiple `SELECT`…",N,N],[12,"0",E,E,5,N],[3,R[5],E,"A builder for an `UPDATE` statement.",N,N],[4,R[2],E,"For modeling comparison expression",N,N],[13,"Equals",E,"`left = right`",6,N],[13,"NotEquals",E,"`left <> right`",6,N],[13,"LessThan",E,"`left < right`",6,N],[13,"LessThanOrEquals",E,"`left <= right`",6,N],[13,"GreaterThan",E,"`left > right`",6,N],[13,"GreaterThanOrEquals",E,"`left >= right`",6,N],[13,"In",E,"`left IN (..)`",6,N],[13,"NotIn",E,"`left NOT IN (..)`",6,N],[13,"Like",E,"`left LIKE %..%`",6,N],[13,"NotLike",E,"`left NOT LIKE %..%`",6,N],[13,"BeginsWith",E,"`left LIKE ..%`",6,N],[13,"NotBeginsWith",E,"`left NOT LIKE ..%`",6,N],[13,"EndsInto",E,"`left LIKE %..`",6,N],[13,"NotEndsInto",E,"`left NOT LIKE %..`",6,N],[13,"Null",E,"`value IS NULL`",6,N],[13,"NotNull",E,"`value IS NOT NULL`",6,N],[13,"Between",E,"`value` BETWEEN `left` AND `right`",6,N],[13,"NotBetween",E,"`value` NOT BETWEEN `left` AND `right`",6,N],[4,R[1],E,"Tree structures and leaves for condition building.",N,N],[13,"And",E,"`(left_expression AND right_expression)`",7,N],[13,"Or",E,"`(left_expression OR right_expression)`",7,N],[13,"Not",E,"`(NOT expression)`",7,N],[13,"Single",E,"A single expression leaf",7,N],[13,"NoCondition",E,"A leaf that does nothing to the condition, `1=1`",7,N],[13,"NegativeCondition",E,"A leaf that cancels the condition, `1=0`",7,N],[4,R[122],E,"A database expression.",N,N],[13,R[1],E,"A tree of expressions to evaluate from the deepest value…",8,N],[13,R[2],E,R[48],8,N],[13,"Value",E,"A single value, column, row or a nested select",8,N],[4,"Id",E,E,N,N],[13,"String",E,E,9,N],[13,"Int",E,E,9,N],[13,"UUID",E,E,9,N],[4,R[123],E,"`INSERT` conflict resolution strategies.",N,N],[13,"DoNothing",E,"When a row already exists, do nothing.",10,N],[4,"Join",E,"A representation of a `JOIN` statement.",N,N],[13,"Inner",E,"Implements an `INNER JOIN` with given `JoinData`.",11,N],[13,"LeftOuter",E,"Implements an `LEFT OUTER JOIN` with given `JoinData`.",11,N],[4,"Order",E,"The ordering direction",N,N],[13,"Asc",E,"Ascending",12,N],[13,"Desc",E,"Descending",12,N],[4,"Query",E,"A database query",N,N],[13,R[3],E,"Query for fetching data. E.g. the `SELECT` query.",13,N],[13,R[4],E,E,13,N],[13,R[5],E,E,13,N],[13,R[6],E,E,13,N],[13,R[7],E,E,13,N],[13,"Raw",E,E,13,N],[4,R[124],E,E,N,N],[13,"Table",E,E,14,N],[13,"Query",E,E,14,N],[4,R[125],E,"A value we can compare and use in database queries.",N,N],[13,"Parameterized",E,"Anything that we must parameterize before querying",15,N],[13,R[8],E,"A database column",15,N],[13,"Row",E,"Data in a row form, e.g. (1, 2, 3)",15,N],[13,R[3],E,"A nested `SELECT` statement",15,N],[13,R[9],E,"A database function call",15,N],[13,"Asterisk",E,"A qualified asterisk to a table",15,N],[4,R[126],E,"A value we must parameterize for the prepared statement.",N,N],[13,"Null",E,E,16,N],[13,"Integer",E,E,16,N],[13,"Real",E,E,16,N],[13,"Text",E,E,16,N],[13,"Boolean",E,E,16,N],[13,"Char",E,E,16,N],[13,"Array",E,E,16,N],[13,"Json",E,E,16,N],[13,"Uuid",E,E,16,N],[13,"DateTime",E,E,16,N],[5,"aggregate_to_string",E,"Aggregates the given field into a string.",N,[[[T]],[R[101]]]],[5,"count",E,"Count of the underlying table where the given expression…",N,[[[T]],["count"]]],[5,"row_number",E,"A number from 1 to n in specified order",N,[[],[R[98]]]],[5,R[19],E,"A quick alias to create an asterisk to a table.",N,[[],[R[20]]]],[11,"new",E,"Create a column definition.",0,[[["s"]],["self"]]],[11,"table",E,"Include the table name in the column expression.",0,[[[T]],["self"]]],[11,"opt_table",E,"Include the table name in the column expression, if table…",0,[[[R[22]]],["self"]]],[11,"alias",E,"Give the column an alias in the query.",0,[[["s"]],["self"]]],[11,"and",E,"An `AND` statement, is true when both sides are true.",7,[[["j"],["e"]],[R[10]]]],[11,"or",E,"An `OR` statement, is true when one side is true.",7,[[["j"],["e"]],[R[10]]]],[11,"not",E,"A `NOT` statement, is true when the expression is false.",7,[[["e"]],[R[10]]]],[11,"single",E,"A single leaf, is true when the expression is true.",7,[[["e"]],[R[10]]]],[11,"invert_if",E,"Inverts the entire condition tree if condition is met.",7,[[["bool"]],[R[10]]]],[11,R[15],E,"Creates a new `DELETE` statement for the given table.",17,[[[T]],["self"]]],[11,R[21],E,R[16],17,[[[T]],["self"]]],[11,R[17],E,"Define the order of the row number. Is the row order if…",18,[[[T]],["self"]]],[11,"partition_by",E,"Define the partitioning of the row number",18,[[[T]],["self"]]],[11,"alias",E,"Give the function an alias in the query.",19,[[["s"]],["self"]]],[11,"new",E,E,1,[[["vec",[R[11]]],[R[11]]],["self"]]],[11,R[14],E,E,1,[[["self"]],["bool"]]],[11,"single_into",E,"Creates a new single row `INSERT` statement for the given…",20,[[[T]],[R[12]]]],[11,"multi_into",E,"Creates a new multi row `INSERT` statement for the given…",20,[[["vec"],[T]],[R[110]]]],[11,"on_conflict",E,"Sets the conflict resolution strategy.",20,[[[R[102]]],["self"]]],[11,"returning",E,"Sets the returned columns. Works only with PostgreSQL.",20,[[["vec"]],["self"]]],[11,"value",E,"Adds a new value to the `INSERT` statement",21,[[["k"],["v"]],[R[12]]]],[11,"values",E,"Adds a new row to be inserted.",22,[[["v"]],["self"]]],[11,"new",E,E,2,[[["vec",[R[13]]],[R[13]]],["self"]]],[11,R[14],E,E,2,[[["self"]],["bool"]]],[11,R[14],E,E,23,[[["self"]],["bool"]]],[11,"is_select",E,E,13,[[["self"]],["bool"]]],[11,"is_insert",E,E,13,[[["self"]],["bool"]]],[11,"is_update",E,E,13,[[["self"]],["bool"]]],[11,"is_delete",E,E,13,[[["self"]],["bool"]]],[11,"is_union_all",E,E,13,[[["self"]],["bool"]]],[11,"new",E,E,3,[[],["self"]]],[11,"push",E,E,3,[[[T]],["self"]]],[11,R[14],E,E,3,[[["self"]],["bool"]]],[11,R[15],E,"Creates a new `SELECT` statement for the given table.",24,[[[T]],["self"]]],[11,"value",E,"Selects a static value as the column.",24,[[[T]],["self"]]],[11,"column",E,"Adds a column to be selected.",24,[[[T]],["self"]]],[11,"columns",E,"A bulk method to select multiple values.",24,[[["vec"]],["self"]]],[11,R[21],E,R[16],24,[[[T]],["self"]]],[11,"inner_join",E,"Adds `INNER JOIN` clause to the query.",24,[[["j"]],["self"]]],[11,"left_outer_join",E,"Adds `LEFT OUTER JOIN` clause to the query.",24,[[["j"]],["self"]]],[11,R[17],E,"Adds an ordering to the `ORDER BY` section.",24,[[[T]],["self"]]],[11,"group_by",E,"Adds a grouping to the `GROUP BY` section.",24,[[[T]],["self"]]],[11,"limit",E,"Sets the `LIMIT` value.",24,[[["usize"]],["self"]]],[11,"offset",E,"Sets the `OFFSET` value.",24,[[["usize"]],["self"]]],[11,R[18],E,"Define in which database the table is located",4,[[[T]],["self"]]],[11,R[19],E,"A qualified asterisk to this table",4,[[],[R[20]]]],[11,"union_all",E,"Creates a union with previous and given `SELECT` statement.",5,[[["select"]],["self"]]],[11,"table",E,"Creates the basis for an `UPDATE` statement to the given…",25,[[[T]],["self"]]],[11,"set",E,"Add another column value assignment to the query",25,[[["k"],["v"]],["update"]]],[11,R[21],E,R[16],25,[[[T]],["self"]]],[11,R[76],E,"`true` if the `ParameterizedValue` is null.",16,[[["self"]],["bool"]]],[11,"is_text",E,"`true` if the `ParameterizedValue` is text.",16,[[["self"]],["bool"]]],[11,"as_str",E,"Returns a &str if the value is text, otherwise `None`.",16,[[["self"]],[["str"],[R[22],["str"]]]]],[11,"as_char",E,"Returns a char if the value is a char, otherwise `None`.",16,[[["self"]],[[R[22],["char"]],["char"]]]],[11,R[58],E,"Returns a cloned String if the value is text, otherwise…",16,[[["self"]],[[R[29]],[R[22],[R[29]]]]]],[11,"into_string",E,"Transforms the `ParameterizedValue` to a `String` if it's…",16,[[],[[R[29]],[R[22],[R[29]]]]]],[11,"is_integer",E,"`true` if the `ParameterizedValue` is an integer.",16,[[["self"]],["bool"]]],[11,"as_i64",E,"Returns an i64 if the value is an integer, otherwise `None`.",16,[[["self"]],[["i64"],[R[22],["i64"]]]]],[11,"is_real",E,"`true` if the `ParameterizedValue` is a real value.",16,[[["self"]],["bool"]]],[11,"as_f64",E,"Returns a f64 if the value is a real value, otherwise…",16,[[["self"]],[[R[22],["f64"]],["f64"]]]],[11,"is_bool",E,"`true` if the `ParameterizedValue` is a boolean value.",16,[[["self"]],["bool"]]],[11,"as_bool",E,"Returns a bool if the value is a boolean, otherwise `None`.",16,[[["self"]],[[R[22],["bool"]],["bool"]]]],[11,"is_uuid",E,"`true` if the `ParameterizedValue` is of UUID type.",16,[[["self"]],["bool"]]],[11,"as_uuid",E,"Returns an UUID if the value is of UUID type, otherwise…",16,[[["self"]],[["uuid"],[R[22],["uuid"]]]]],[11,"is_datetime",E,"`true` if the `ParameterizedValue` is a DateTime.",16,[[["self"]],["bool"]]],[11,"as_datetime",E,"Returns a DateTime if the value is a DateTime, otherwise…",16,[[["self"]],[[R[22],[R[23]]],[R[23],["utc"]]]]],[11,"is_json",E,"`true` if the `ParameterizedValue` is a JSON value.",16,[[["self"]],["bool"]]],[11,"as_json",E,"Returns a reference to a JSON Value if of Json type,…",16,[[["self"]],[[R[22],["value"]],["value"]]]],[11,"into_json",E,"Transforms to a JSON Value if of Json type, otherwise…",16,[[],[[R[22],["value"]],["value"]]]],[11,"into_vec",E,"Returns a Vec if the value is an array of T, otherwise…",16,[[],[[R[22],["vec"]],["vec"]]]],[6,R[157],E,E,N,N],[6,R[158],E,E,N,N],[8,R[130],E,"An item that can be compared against other values in the…",N,N],[10,"equals",E,"Tests if both sides are the same value.",26,[[[T]],[R[24]]]],[10,R[64],E,"Tests if both sides are not the same value.",26,[[[T]],[R[24]]]],[10,R[65],E,"Tests if the left side is smaller than the right side.",26,[[[T]],[R[24]]]],[10,R[66],E,"Tests if the left side is smaller than the right side or…",26,[[[T]],[R[24]]]],[10,R[67],E,"Tests if the left side is bigger than the right side.",26,[[[T]],[R[24]]]],[10,R[68],E,"Tests if the left side is bigger than the right side or…",26,[[[T]],[R[24]]]],[10,R[69],E,"Tests if the left side is included in the right side…",26,[[[T]],[R[24]]]],[10,R[70],E,"Tests if the left side is not included in the right side…",26,[[[T]],[R[24]]]],[10,"like",E,"Tests if the left side includes the right side string.",26,[[[T]],[R[24]]]],[10,R[71],E,"Tests if the left side does not include the right side…",26,[[[T]],[R[24]]]],[10,R[72],E,"Tests if the left side starts with the right side string.",26,[[[T]],[R[24]]]],[10,R[73],E,"Tests if the left side doesn't start with the right side…",26,[[[T]],[R[24]]]],[10,R[74],E,"Tests if the left side ends into the right side string.",26,[[[T]],[R[24]]]],[10,R[75],E,"Tests if the left side does not end into the right side…",26,[[[T]],[R[24]]]],[10,R[76],E,"Tests if the left side is `NULL`.",26,[[],[R[24]]]],[10,R[77],E,"Tests if the left side is not `NULL`.",26,[[],[R[24]]]],[10,R[79],E,"Tests if the value is between two given values.",26,[[[T],["v"]],[R[24]]]],[10,R[78],E,"Tests if the value is not between two given values.",26,[[[T],["v"]],[R[24]]]],[8,R[131],E,"`AND`, `OR` and `NOT` conjuctive implementations.",N,N],[10,"and",E,"Builds an `AND` condition having `self` as the left leaf…",27,[[["e"]],[R[10]]]],[10,"or",E,"Builds an `OR` condition having `self` as the left leaf…",27,[[["e"]],[R[10]]]],[10,"not",E,"Builds a `NOT` condition having `self` as the condition.",27,[[],[R[10]]]],[8,R[132],E,"An item that can be used in the `GROUP BY` statement",N,N],[10,"group",E,"Group by `self`",28,[[],[R[11]]]],[8,R[133],E,"Convert the value into a group by definition.",N,N],[10,R[80],E,E,29,[[],[R[11]]]],[8,"Joinable",E,"An item that can be joined.",N,N],[10,"on",E,"Add the `JOIN` conditions.",30,[[[T]],[R[47]]]],[8,R[134],E,"Convert the value into an order definition with order item…",N,N],[10,R[81],E,E,31,[[],[R[13]]]],[8,R[135],E,"An item that can be used in the `ORDER BY` statement",N,N],[10,"order",E,"Order by `self` in the given order",32,[[["order"],[R[22],["order"]]],[R[13]]]],[11,"ascend",E,R[116],32,[[],[R[13]]]],[11,"descend",E,R[117],32,[[],[R[13]]]],[8,R[136],E,"An object that can be aliased.",N,N],[10,"alias",E,"Alias table for usage elsewhere in the query.",33,[[[T]],["table"]]],[0,"connector",R[0],"A set of abstractions for database connections.",N,N],[3,"Mysql",R[59],"A connector interface for the MySQL database.",N,N],[3,R[137],E,E,N,N],[12,R[25],E,E,34,N],[12,"dbname",E,E,34,N],[12,"config",E,E,34,N],[3,"MysqlUrl",E,R[26],N,N],[3,R[153],E,E,N,N],[3,R[146],E,"A connector interface for the PostgreSQL database.",N,N],[3,R[138],E,E,N,N],[12,R[25],E,E,35,N],[12,"dbname",E,E,35,N],[12,"schema",E,E,35,N],[12,"config",E,E,35,N],[12,"ssl_params",E,E,35,N],[3,R[154],E,E,N,N],[3,R[145],E,R[26],N,N],[3,R[155],E,E,N,N],[3,"Sqlite",E,"A connector interface for the SQLite database",N,N],[3,R[139],E,E,N,N],[12,R[25],E,E,36,N],[12,"file_path",E,"This is not a `PathBuf` because we need to `ATTACH` the…",36,N],[3,R[141],E,"An owned version of a `Row` in a `ResultSet`. See…",N,N],[3,R[142],E,"A reference to a `Row` in a `ResultSet`. The columns can…",N,N],[3,R[143],E,"Encapsulates a set of results and their respective column…",N,N],[3,R[156],E,"Thin iterator for ResultSet rows. Might become lazy one day.",N,N],[3,"DBIO",E,"The main unit of asynchronous IO. For now just a shell for…",N,N],[3,R[144],E,"A representation of an SQL database transaction. If not…",N,N],[4,R[140],E,E,N,N],[13,"Strict",E,E,37,N],[13,"AcceptInvalidCerts",E,E,37,N],[11,"at",E,R[28],38,[[["self"],["usize"]],[[R[27]],[R[22],[R[27]]]]]],[11,"get",E,"Take a value with the given column name from the row.…",38,[[["self"],["str"]],[[R[27]],[R[22],[R[27]]]]]],[11,"as_ref",E,"Make a referring ResultRowRef.",38,[[["self"]],[R[30]]]],[11,"at",E,R[28],39,[[["self"],["usize"]],[[R[27]],[R[22],[R[27]]]]]],[11,"get",E,"Take a value with the given column name from the row.",39,[[["self"],["str"]],[[R[27]],[R[22],[R[27]]]]]],[11,"new",E,"Creates a new instance, bound to the given column names…",40,[[["vec",[R[29]]],["vec",["vec"]],[R[29]],["vec",[R[27]]]],[R[37]]]],[11,"columns",E,"An iterator of column names.",40,[[["self"]],[["keys",[R[29],"usize"]],[R[29]],["usize"]]]],[11,"len",E,"Returns the number of rows in the `ResultSet`.",40,[[["self"]],["usize"]]],[11,R[14],E,"Returns true if the `ResultSet` contains no rows.",40,[[["self"]],["bool"]]],[11,"first",E,"Returns the first row of the `ResultSet`, or None if the…",40,[[["self"]],[[R[22],[R[30]]],[R[30]]]]],[11,"get",E,"Returns a reference to a row in a given position.",40,[[["self"],["usize"]],[[R[22],[R[30]]],[R[30]]]]],[11,"commit",E,"Commit the changes to the database and consume the…",41,[[["self"]]]],[11,"rollback",E,"Rolls back the changes to the database.",41,[[["self"]]]],[11,"new",E,E,42,[[["f"]],["self"]]],[11,"new",E,E,43,[[["url"]],[["error"],[R[36],["error"]]]]],[11,"url",E,E,43,[[["self"]],["url"]]],[11,R[31],E,E,43,[[["self"]],[["str"],["cow",["str"]]]]],[11,R[32],E,E,43,[[["self"]],[[R[22],["cow"]],["cow",["str"]]]]],[11,"dbname",E,E,43,[[["self"]],["str"]]],[11,"host",E,E,43,[[["self"]],["str"]]],[11,"socket",E,E,43,[[["self"]],[R[22]]]],[11,"port",E,E,43,[[["self"]],["u16"]]],[11,R[33],E,E,43,[[["self"]],[R[105]]]],[11,"new",E,E,44,[[[R[45]]],[R[36]]]],[11,R[35],E,E,44,[[["mysqlparams"]],[R[36]]]],[11,"new",E,E,45,[[["url"]],[["error"],[R[36],["error"]]]]],[11,"url",E,E,45,[[["self"]],["url"]]],[11,R[31],E,E,45,[[["self"]],[["str"],["cow",["str"]]]]],[11,"host",E,E,45,[[["self"]],["str"]]],[11,"dbname",E,E,45,[[["self"]],["str"]]],[11,R[32],E,E,45,[[["self"]],[["str"],["cow",["str"]]]]],[11,"port",E,E,45,[[["self"]],["u16"]]],[11,"schema",E,E,45,[[["self"]],[R[29]]]],[11,"default_connection_limit",E,E,45,[[],["usize"]]],[11,R[33],E,E,45,[[["self"]],[R[106]]]],[11,"new",E,E,46,[[["config"],[R[29]],[R[22],[R[29]]],[R[22],[R[34]]],[R[34]]]]],[11,R[35],E,E,46,[[["postgresparams"]]]],[11,"new",E,E,47,[[["str"]],[[R[36],["sqlite"]],["sqlite"]]]],[11,"attach_database",E,E,47,[[["self"],["str"]],[R[36]]]],[8,"ValueIndex",E,E,N,N],[8,"ToRow",E,E,N,N],[10,"to_result_row",E,E,48,[[["self"]],[["vec",[R[27]]],[R[36],["vec"]]]]],[8,R[147],E,E,N,N],[10,"to_column_names",E,E,49,[[["self"]],[["vec",[R[29]]],[R[29]]]]],[8,R[148],E,"Represents a connection or a transaction that can be…",N,N],[10,R[88],E,"Executes the given query and returns the ID of the last…",50,[[["self"],["query"]],[["dbio",[R[22]]],[R[22],["id"]]]]],[10,"query",E,"Executes the given query and returns the result set.",50,[[["self"],["query"]],[["dbio",[R[37]]],[R[37]]]]],[10,R[82],E,R[38],50,[[["self"],["str"]],[["dbio",[R[37]]],[R[37]]]]],[10,R[83],E,R[38],50,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[10,R[84],E,"Turns off all foreign key constraints.",50,[[["self"]],["dbio"]]],[10,R[85],E,"Turns on all foreign key constraints.",50,[[["self"]],["dbio"]]],[10,R[87],E,"Starts a new transaction",50,[[["self"]],[["dbio",[R[39]]],[R[39]]]]],[10,R[89],E,"Runs a command in the database, for queries that can't be…",50,[[["self"],["str"]],["dbio"]]],[11,R[86],E,R[118],50,[[["vec",["table"]],["self"],["table"]],["dbio"]]],[11,R[96],E,R[119],50,[[["self"],[R[96]]],[["dbio",[R[22]]],[R[22],["id"]]]]],[11,"update",E,R[120],50,[[["self"],["update"]],["dbio"]]],[11,"delete",E,R[121],50,[[["self"],["delete"]],["dbio"]]],[0,"error",R[0],E,N,N],[4,"Error",R[40],E,N,N],[13,"QueryError",E,E,51,N],[13,"DatabaseDoesNotExist",E,E,51,N],[12,R[42],R[41],E,51,N],[13,"DatabaseAccessDenied",R[40],E,51,N],[12,R[42],R[41],E,51,N],[13,"DatabaseAlreadyExists",R[40],E,51,N],[12,R[42],R[41],E,51,N],[13,"AuthenticationFailed",R[40],E,51,N],[12,"user",R[41],E,51,N],[13,"NotFound",R[40],E,51,N],[13,"UniqueConstraintViolation",E,E,51,N],[12,R[43],R[41],E,51,N],[13,"NullConstraintViolation",R[40],E,51,N],[12,R[43],R[41],E,51,N],[13,"ConnectionError",R[40],E,51,N],[13,"ColumnReadFailure",E,E,51,N],[13,"ResultIndexOutOfBounds",E,E,51,N],[13,"ColumnNotFound",E,E,51,N],[13,"ResultTypeMismatch",E,E,51,N],[13,"DatabaseUrlIsInvalid",E,E,51,N],[13,"ConversionError",E,E,51,N],[13,"InvalidConnectionArguments",E,E,51,N],[13,"IoError",E,E,51,N],[13,"ConnectTimeout",E,E,51,N],[13,"Timeout",E,E,51,N],[13,"TlsError",E,E,51,N],[12,"message",R[41],E,51,N],[0,"pool",R[0],E,N,N],[3,R[44],R[62],"A check out of a resource from a `Pool`. The resource is…",N,N],[8,"Manage",E,"A trait for managing the lifecycle of a resource.",N,N],[16,"Resource",E,E,52,N],[16,"Dependencies",E,E,52,N],[16,R[44],E,E,52,N],[16,"Error",E,E,52,N],[16,"CreateFuture",E,E,52,N],[10,"create",E,"Creates a new instance of the managed resource.",52,[[["self"]]]],[10,"status",E,E,52,[[["self"]],["status"]]],[16,"RecycleFuture",E,E,52,N],[10,"recycle",E,"Recycling a resource is done periodically to determine…",52,[[["self"]]]],[3,"Pool",E,"A handle to a pool through which resources are requested.",N,N],[3,R[149],E,E,N,N],[3,R[150],E,E,N,N],[3,R[151],E,E,N,N],[5,"sqlite",E,E,N,[[["str"]],[["pool",["sqlitemanager"]],[R[36],["pool"]]]]],[5,"postgres",E,E,N,[[["url"]],[[R[36],["pool"]],["pool",["postgresmanager"]]]]],[5,"mysql",E,E,N,[[["url"]],[[R[36],["pool"]],["pool",["mysqlmanager"]]]]],[11,"new",E,E,53,[[[R[45]]],["self"]]],[11,"new",E,E,54,[[["config"],[R[29]],[R[22],[R[29]]],[R[22],[R[34]]],[R[34]]],["self"]]],[11,"new",E,E,55,[[[R[29]],["str"]],["self"]]],[0,"visitor",R[0],"Visitors for reading an abstract SQL syntax tree,…",N,N],[3,"Sqlite",R[63],"A visitor to generate queries for the SQLite database.",N,N],[3,"Postgres",E,"A visitor to generate queries for the PostgreSQL database.",N,N],[3,"Mysql",E,"A visitor to generate queries for the MySQL database.",N,N],[8,"Visitor",E,"A function travelling through the query AST, building the…",N,N],[18,"C_BACKTICK",E,"Backtick character to surround identifiers, such as column…",56,N],[18,"C_WILDCARD",E,"Wildcard character to be used in `LIKE` queries.",56,N],[10,"build",E,"Convert the given `Query` to an SQL string and a vector of…",56,[[["q"]]]],[10,"write",E,"Write to the query.",56,[[["self"],[R[95]]],[R[36]]]],[11,"surround_with",E,E,56,[[["self"],["str"],["f"]],[R[36]]]],[10,R[92],E,"When called, the visitor decided to not render the…",56,[[["self"],[R[27]]]]],[10,R[93],E,"The `LIMIT` and `OFFSET` statement in the query",56,[[["self"],[R[22],[R[27]]],[R[27]]],[R[36]]]],[10,R[90],E,"A walk through an `INSERT` statement",56,[[["self"],[R[96]]],[R[36]]]],[10,R[91],E,R[46],56,[[["self"]],[R[36]]]],[10,R[94],E,R[46],56,[[["self"],[R[20]]],[R[36]]]],[11,"visit_parameterized",E,"A visit to a value we parameterize",56,[[["self"],[R[27]]],[R[36]]]],[11,"visit_joins",E,"The join statements in the query",56,[[["self"],["vec",["join"]],["join"]],[R[36]]]],[11,"visit_join_data",E,E,56,[[["self"],[R[47]]],[R[36]]]],[11,"visit_select",E,"A walk through a `SELECT` statement",56,[[["self"],["select"]],[R[36]]]],[11,"visit_update",E,"A walk through an `UPDATE` statement",56,[[["self"],["update"]],[R[36]]]],[11,"visit_delete",E,"A walk through an `DELETE` statement",56,[[["self"],["delete"]],[R[36]]]],[11,"delimited_identifiers",E,"A helper for delimiting an identifier, surrounding every…",56,[[["self"]],[R[36]]]],[11,"visit_query",E,"A walk through a complete `Query` statement",56,[[["self"],["query"]]]],[11,"visit_union_all",E,"A walk through a union of `SELECT` statements",56,[[["self"],[R[104]]],[R[36]]]],[11,"visit_columns",E,"The selected columns",56,[[["self"],[R[20]],["vec",[R[20]]]],[R[36]]]],[11,"visit_database_value",E,"A visit to a value used in an expression",56,[[["self"],[R[20]]],[R[36]]]],[11,"visit_table",E,"A database table identifier",56,[[["self"],["bool"],["table"]],[R[36]]]],[11,"visit_column",E,"A database column identifier",56,[[["self"],["column"]],[R[36]]]],[11,"visit_row",E,"A row of data used as an expression",56,[[["self"],["row"]],[R[36]]]],[11,"visit_conditions",E,"A walk through the query conditions",56,[[["self"],[R[10]]],[R[36]]]],[11,"visit_expression",E,"An expression that can either be a single value, a set of…",56,[[["self"],[R[100]]],[R[36]]]],[11,"visit_compare",E,R[48],56,[[["self"],[R[24]]],[R[36]]]],[11,"visit_ordering",E,"A visit in the `ORDER BY` section of the query",56,[[["self"],[R[103]]],[R[36]]]],[11,"visit_grouping",E,"A visit in the `GROUP BY` section of the query",56,[[["self"],[R[99]]],[R[36]]]],[11,"visit_function",E,E,56,[[["self"],[R[107]]],[R[36]]]],[11,"visit_partitioning",E,E,56,[[["self"],["over"]],[R[36]]]],[6,"Result",R[0],E,N,N],[11,R[50],R[49],E,0,[[["self"]],[T]]],[11,R[51],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[52],E,E,0,[[[U]],[R[36]]]],[11,R[53],E,E,0,[[],[R[36]]]],[11,R[54],E,E,0,[[["self"]],[T]]],[11,R[56],E,E,0,[[["self"]],[T]]],[11,R[55],E,E,0,[[["self"]],[R[57]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[51],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[52],E,E,17,[[[U]],[R[36]]]],[11,R[53],E,E,17,[[],[R[36]]]],[11,R[54],E,E,17,[[["self"]],[T]]],[11,R[56],E,E,17,[[["self"]],[T]]],[11,R[55],E,E,17,[[["self"]],[R[57]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[50],E,E,57,[[["self"]],[T]]],[11,R[51],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[52],E,E,57,[[[U]],[R[36]]]],[11,R[53],E,E,57,[[],[R[36]]]],[11,R[54],E,E,57,[[["self"]],[T]]],[11,R[56],E,E,57,[[["self"]],[T]]],[11,R[55],E,E,57,[[["self"]],[R[57]]]],[11,"vzip",E,E,57,[[],["v"]]],[11,R[50],E,E,58,[[["self"]],[T]]],[11,R[51],E,E,58,[[["self"],[T]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[52],E,E,58,[[[U]],[R[36]]]],[11,R[53],E,E,58,[[],[R[36]]]],[11,R[54],E,E,58,[[["self"]],[T]]],[11,R[56],E,E,58,[[["self"]],[T]]],[11,R[55],E,E,58,[[["self"]],[R[57]]]],[11,"vzip",E,E,58,[[],["v"]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[51],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[52],E,E,18,[[[U]],[R[36]]]],[11,R[53],E,E,18,[[],[R[36]]]],[11,R[54],E,E,18,[[["self"]],[T]]],[11,R[56],E,E,18,[[["self"]],[T]]],[11,R[55],E,E,18,[[["self"]],[R[57]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[51],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[52],E,E,19,[[[U]],[R[36]]]],[11,R[53],E,E,19,[[],[R[36]]]],[11,R[54],E,E,19,[[["self"]],[T]]],[11,R[56],E,E,19,[[["self"]],[T]]],[11,R[55],E,E,19,[[["self"]],[R[57]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[51],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[52],E,E,1,[[[U]],[R[36]]]],[11,R[53],E,E,1,[[],[R[36]]]],[11,R[54],E,E,1,[[["self"]],[T]]],[11,R[56],E,E,1,[[["self"]],[T]]],[11,R[55],E,E,1,[[["self"]],[R[57]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[51],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[52],E,E,20,[[[U]],[R[36]]]],[11,R[53],E,E,20,[[],[R[36]]]],[11,R[54],E,E,20,[[["self"]],[T]]],[11,R[56],E,E,20,[[["self"]],[T]]],[11,R[55],E,E,20,[[["self"]],[R[57]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[52],E,E,21,[[[U]],[R[36]]]],[11,R[53],E,E,21,[[],[R[36]]]],[11,R[54],E,E,21,[[["self"]],[T]]],[11,R[56],E,E,21,[[["self"]],[T]]],[11,R[55],E,E,21,[[["self"]],[R[57]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[52],E,E,22,[[[U]],[R[36]]]],[11,R[53],E,E,22,[[],[R[36]]]],[11,R[54],E,E,22,[[["self"]],[T]]],[11,R[56],E,E,22,[[["self"]],[T]]],[11,R[55],E,E,22,[[["self"]],[R[57]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[50],E,E,59,[[["self"]],[T]]],[11,R[51],E,E,59,[[["self"],[T]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[52],E,E,59,[[[U]],[R[36]]]],[11,R[53],E,E,59,[[],[R[36]]]],[11,R[54],E,E,59,[[["self"]],[T]]],[11,R[56],E,E,59,[[["self"]],[T]]],[11,R[55],E,E,59,[[["self"]],[R[57]]]],[11,"vzip",E,E,59,[[],["v"]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[51],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[52],E,E,2,[[[U]],[R[36]]]],[11,R[53],E,E,2,[[],[R[36]]]],[11,R[54],E,E,2,[[["self"]],[T]]],[11,R[56],E,E,2,[[["self"]],[T]]],[11,R[55],E,E,2,[[["self"]],[R[57]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[51],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[52],E,E,23,[[[U]],[R[36]]]],[11,R[53],E,E,23,[[],[R[36]]]],[11,R[54],E,E,23,[[["self"]],[T]]],[11,R[56],E,E,23,[[["self"]],[T]]],[11,R[55],E,E,23,[[["self"]],[R[57]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[51],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[52],E,E,3,[[[U]],[R[36]]]],[11,R[53],E,E,3,[[],[R[36]]]],[11,R[54],E,E,3,[[["self"]],[T]]],[11,R[56],E,E,3,[[["self"]],[T]]],[11,R[55],E,E,3,[[["self"]],[R[57]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[51],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[52],E,E,24,[[[U]],[R[36]]]],[11,R[53],E,E,24,[[],[R[36]]]],[11,R[54],E,E,24,[[["self"]],[T]]],[11,R[56],E,E,24,[[["self"]],[T]]],[11,R[55],E,E,24,[[["self"]],[R[57]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[51],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[52],E,E,4,[[[U]],[R[36]]]],[11,R[53],E,E,4,[[],[R[36]]]],[11,R[54],E,E,4,[[["self"]],[T]]],[11,R[56],E,E,4,[[["self"]],[T]]],[11,R[55],E,E,4,[[["self"]],[R[57]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[51],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[52],E,E,5,[[[U]],[R[36]]]],[11,R[53],E,E,5,[[],[R[36]]]],[11,R[54],E,E,5,[[["self"]],[T]]],[11,R[56],E,E,5,[[["self"]],[T]]],[11,R[55],E,E,5,[[["self"]],[R[57]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[51],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[52],E,E,25,[[[U]],[R[36]]]],[11,R[53],E,E,25,[[],[R[36]]]],[11,R[54],E,E,25,[[["self"]],[T]]],[11,R[56],E,E,25,[[["self"]],[T]]],[11,R[55],E,E,25,[[["self"]],[R[57]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[51],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[52],E,E,6,[[[U]],[R[36]]]],[11,R[53],E,E,6,[[],[R[36]]]],[11,R[54],E,E,6,[[["self"]],[T]]],[11,R[56],E,E,6,[[["self"]],[T]]],[11,R[55],E,E,6,[[["self"]],[R[57]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[51],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[52],E,E,7,[[[U]],[R[36]]]],[11,R[53],E,E,7,[[],[R[36]]]],[11,R[54],E,E,7,[[["self"]],[T]]],[11,R[56],E,E,7,[[["self"]],[T]]],[11,R[55],E,E,7,[[["self"]],[R[57]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[51],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[52],E,E,8,[[[U]],[R[36]]]],[11,R[53],E,E,8,[[],[R[36]]]],[11,R[54],E,E,8,[[["self"]],[T]]],[11,R[56],E,E,8,[[["self"]],[T]]],[11,R[55],E,E,8,[[["self"]],[R[57]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[51],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[52],E,E,9,[[[U]],[R[36]]]],[11,R[53],E,E,9,[[],[R[36]]]],[11,R[54],E,E,9,[[["self"]],[T]]],[11,R[56],E,E,9,[[["self"]],[T]]],[11,R[55],E,E,9,[[["self"]],[R[57]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[51],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[52],E,E,10,[[[U]],[R[36]]]],[11,R[53],E,E,10,[[],[R[36]]]],[11,R[54],E,E,10,[[["self"]],[T]]],[11,R[56],E,E,10,[[["self"]],[T]]],[11,R[55],E,E,10,[[["self"]],[R[57]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[51],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[52],E,E,11,[[[U]],[R[36]]]],[11,R[53],E,E,11,[[],[R[36]]]],[11,R[54],E,E,11,[[["self"]],[T]]],[11,R[56],E,E,11,[[["self"]],[T]]],[11,R[55],E,E,11,[[["self"]],[R[57]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[51],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[52],E,E,12,[[[U]],[R[36]]]],[11,R[53],E,E,12,[[],[R[36]]]],[11,R[54],E,E,12,[[["self"]],[T]]],[11,R[56],E,E,12,[[["self"]],[T]]],[11,R[55],E,E,12,[[["self"]],[R[57]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[51],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[52],E,E,13,[[[U]],[R[36]]]],[11,R[53],E,E,13,[[],[R[36]]]],[11,R[54],E,E,13,[[["self"]],[T]]],[11,R[56],E,E,13,[[["self"]],[T]]],[11,R[55],E,E,13,[[["self"]],[R[57]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[51],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[52],E,E,14,[[[U]],[R[36]]]],[11,R[53],E,E,14,[[],[R[36]]]],[11,R[54],E,E,14,[[["self"]],[T]]],[11,R[56],E,E,14,[[["self"]],[T]]],[11,R[55],E,E,14,[[["self"]],[R[57]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[51],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[52],E,E,15,[[[U]],[R[36]]]],[11,R[53],E,E,15,[[],[R[36]]]],[11,R[54],E,E,15,[[["self"]],[T]]],[11,R[56],E,E,15,[[["self"]],[T]]],[11,R[55],E,E,15,[[["self"]],[R[57]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[51],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[58],E,E,16,[[["self"]],[R[29]]]],[11,R[52],E,E,16,[[[U]],[R[36]]]],[11,R[53],E,E,16,[[],[R[36]]]],[11,R[54],E,E,16,[[["self"]],[T]]],[11,R[56],E,E,16,[[["self"]],[T]]],[11,R[55],E,E,16,[[["self"]],[R[57]]]],[11,"to_value",E,E,16,[[["self"]],["value"]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",R[59],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[52],E,E,44,[[[U]],[R[36]]]],[11,R[53],E,E,44,[[],[R[36]]]],[11,R[54],E,E,44,[[["self"]],[T]]],[11,R[56],E,E,44,[[["self"]],[T]]],[11,R[55],E,E,44,[[["self"]],[R[57]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[52],E,E,34,[[[U]],[R[36]]]],[11,R[53],E,E,34,[[],[R[36]]]],[11,R[54],E,E,34,[[["self"]],[T]]],[11,R[56],E,E,34,[[["self"]],[T]]],[11,R[55],E,E,34,[[["self"]],[R[57]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[51],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[52],E,E,43,[[[U]],[R[36]]]],[11,R[53],E,E,43,[[],[R[36]]]],[11,R[54],E,E,43,[[["self"]],[T]]],[11,R[56],E,E,43,[[["self"]],[T]]],[11,R[55],E,E,43,[[["self"]],[R[57]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,R[50],E,E,60,[[["self"]],[T]]],[11,R[51],E,E,60,[[["self"],[T]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[52],E,E,60,[[[U]],[R[36]]]],[11,R[53],E,E,60,[[],[R[36]]]],[11,R[54],E,E,60,[[["self"]],[T]]],[11,R[56],E,E,60,[[["self"]],[T]]],[11,R[55],E,E,60,[[["self"]],[R[57]]]],[11,"vzip",E,E,60,[[],["v"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[52],E,E,46,[[[U]],[R[36]]]],[11,R[53],E,E,46,[[],[R[36]]]],[11,R[54],E,E,46,[[["self"]],[T]]],[11,R[56],E,E,46,[[["self"]],[T]]],[11,R[55],E,E,46,[[["self"]],[R[57]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[52],E,E,35,[[[U]],[R[36]]]],[11,R[53],E,E,35,[[],[R[36]]]],[11,R[54],E,E,35,[[["self"]],[T]]],[11,R[56],E,E,35,[[["self"]],[T]]],[11,R[55],E,E,35,[[["self"]],[R[57]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[50],E,E,61,[[["self"]],[T]]],[11,R[51],E,E,61,[[["self"],[T]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[52],E,E,61,[[[U]],[R[36]]]],[11,R[53],E,E,61,[[],[R[36]]]],[11,R[54],E,E,61,[[["self"]],[T]]],[11,R[56],E,E,61,[[["self"]],[T]]],[11,R[55],E,E,61,[[["self"]],[R[57]]]],[11,"vzip",E,E,61,[[],["v"]]],[11,R[50],E,E,45,[[["self"]],[T]]],[11,R[51],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[52],E,E,45,[[[U]],[R[36]]]],[11,R[53],E,E,45,[[],[R[36]]]],[11,R[54],E,E,45,[[["self"]],[T]]],[11,R[56],E,E,45,[[["self"]],[T]]],[11,R[55],E,E,45,[[["self"]],[R[57]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,R[50],E,E,62,[[["self"]],[T]]],[11,R[51],E,E,62,[[["self"],[T]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[52],E,E,62,[[[U]],[R[36]]]],[11,R[53],E,E,62,[[],[R[36]]]],[11,R[54],E,E,62,[[["self"]],[T]]],[11,R[56],E,E,62,[[["self"]],[T]]],[11,R[55],E,E,62,[[["self"]],[R[57]]]],[11,"vzip",E,E,62,[[],["v"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[52],E,E,47,[[[U]],[R[36]]]],[11,R[53],E,E,47,[[],[R[36]]]],[11,R[54],E,E,47,[[["self"]],[T]]],[11,R[56],E,E,47,[[["self"]],[T]]],[11,R[55],E,E,47,[[["self"]],[R[57]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[52],E,E,36,[[[U]],[R[36]]]],[11,R[53],E,E,36,[[],[R[36]]]],[11,R[54],E,E,36,[[["self"]],[T]]],[11,R[56],E,E,36,[[["self"]],[T]]],[11,R[55],E,E,36,[[["self"]],[R[57]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,"into",E,E,38,[[],[U]]],[11,R[60],E,E,38,[[],["i"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[52],E,E,38,[[[U]],[R[36]]]],[11,R[53],E,E,38,[[],[R[36]]]],[11,R[54],E,E,38,[[["self"]],[T]]],[11,R[56],E,E,38,[[["self"]],[T]]],[11,R[55],E,E,38,[[["self"]],[R[57]]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[52],E,E,39,[[[U]],[R[36]]]],[11,R[53],E,E,39,[[],[R[36]]]],[11,R[54],E,E,39,[[["self"]],[T]]],[11,R[56],E,E,39,[[["self"]],[T]]],[11,R[55],E,E,39,[[["self"]],[R[57]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",E,E,40,[[],[U]]],[11,R[60],E,E,40,[[],["i"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[52],E,E,40,[[[U]],[R[36]]]],[11,R[53],E,E,40,[[],[R[36]]]],[11,R[54],E,E,40,[[["self"]],[T]]],[11,R[56],E,E,40,[[["self"]],[T]]],[11,R[55],E,E,40,[[["self"]],[R[57]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",E,E,63,[[],[U]]],[11,R[60],E,E,63,[[],["i"]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[52],E,E,63,[[[U]],[R[36]]]],[11,R[53],E,E,63,[[],[R[36]]]],[11,R[54],E,E,63,[[["self"]],[T]]],[11,R[56],E,E,63,[[["self"]],[T]]],[11,R[55],E,E,63,[[["self"]],[R[57]]]],[11,"vzip",E,E,63,[[],["v"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[52],E,E,42,[[[U]],[R[36]]]],[11,R[53],E,E,42,[[],[R[36]]]],[11,R[54],E,E,42,[[["self"]],[T]]],[11,R[56],E,E,42,[[["self"]],[T]]],[11,R[55],E,E,42,[[["self"]],[R[57]]]],[11,R[61],E,E,42,[[["f"],["context"],["pin"]],["poll"]]],[11,"vzip",E,E,42,[[],["v"]]],[11,R[61],E,E,42,[[["f"],["context"],["pin"]],["poll"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[52],E,E,41,[[[U]],[R[36]]]],[11,R[53],E,E,41,[[],[R[36]]]],[11,R[54],E,E,41,[[["self"]],[T]]],[11,R[56],E,E,41,[[["self"]],[T]]],[11,R[55],E,E,41,[[["self"]],[R[57]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[51],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[52],E,E,37,[[[U]],[R[36]]]],[11,R[53],E,E,37,[[],[R[36]]]],[11,R[54],E,E,37,[[["self"]],[T]]],[11,R[56],E,E,37,[[["self"]],[T]]],[11,R[55],E,E,37,[[["self"]],[R[57]]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"into",R[40],E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[58],E,E,51,[[["self"]],[R[29]]]],[11,R[52],E,E,51,[[[U]],[R[36]]]],[11,R[53],E,E,51,[[],[R[36]]]],[11,R[54],E,E,51,[[["self"]],[T]]],[11,R[56],E,E,51,[[["self"]],[T]]],[11,R[55],E,E,51,[[["self"]],[R[57]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,"as_fail",E,E,51,[[["self"]],["fail"]]],[11,"into",R[62],E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[52],E,E,64,[[[U]],[R[36]]]],[11,R[53],E,E,64,[[],[R[36]]]],[11,R[54],E,E,64,[[["self"]],[T]]],[11,R[56],E,E,64,[[["self"]],[T]]],[11,R[55],E,E,64,[[["self"]],[R[57]]]],[11,"vzip",E,E,64,[[],["v"]]],[11,R[50],E,E,65,[[["self"]],[T]]],[11,R[51],E,E,65,[[["self"],[T]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[52],E,E,65,[[[U]],[R[36]]]],[11,R[53],E,E,65,[[],[R[36]]]],[11,R[54],E,E,65,[[["self"]],[T]]],[11,R[56],E,E,65,[[["self"]],[T]]],[11,R[55],E,E,65,[[["self"]],[R[57]]]],[11,"vzip",E,E,65,[[],["v"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[52],E,E,53,[[[U]],[R[36]]]],[11,R[53],E,E,53,[[],[R[36]]]],[11,R[54],E,E,53,[[["self"]],[T]]],[11,R[56],E,E,53,[[["self"]],[T]]],[11,R[55],E,E,53,[[["self"]],[R[57]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[52],E,E,54,[[[U]],[R[36]]]],[11,R[53],E,E,54,[[],[R[36]]]],[11,R[54],E,E,54,[[["self"]],[T]]],[11,R[56],E,E,54,[[["self"]],[T]]],[11,R[55],E,E,54,[[["self"]],[R[57]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[52],E,E,55,[[[U]],[R[36]]]],[11,R[53],E,E,55,[[],[R[36]]]],[11,R[54],E,E,55,[[["self"]],[T]]],[11,R[56],E,E,55,[[["self"]],[T]]],[11,R[55],E,E,55,[[["self"]],[R[57]]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"into",R[63],E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[52],E,E,66,[[[U]],[R[36]]]],[11,R[53],E,E,66,[[],[R[36]]]],[11,R[54],E,E,66,[[["self"]],[T]]],[11,R[56],E,E,66,[[["self"]],[T]]],[11,R[55],E,E,66,[[["self"]],[R[57]]]],[11,"vzip",E,E,66,[[],["v"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[52],E,E,67,[[[U]],[R[36]]]],[11,R[53],E,E,67,[[],[R[36]]]],[11,R[54],E,E,67,[[["self"]],[T]]],[11,R[56],E,E,67,[[["self"]],[T]]],[11,R[55],E,E,67,[[["self"]],[R[57]]]],[11,"vzip",E,E,67,[[],["v"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[52],E,E,68,[[[U]],[R[36]]]],[11,R[53],E,E,68,[[],[R[36]]]],[11,R[54],E,E,68,[[["self"]],[T]]],[11,R[56],E,E,68,[[["self"]],[T]]],[11,R[55],E,E,68,[[["self"]],[R[57]]]],[11,"vzip",E,E,68,[[],["v"]]],[11,"clone",R[62],E,65,[[["self"]],["pool"]]],[11,"drop",E,E,64,[[["self"]]]],[11,"deref_mut",E,E,64,[[["self"]]]],[11,"deref",E,E,64,[[["self"]]]],[11,"equals",R[49],E,3,[[[T]],[R[24]]]],[11,R[64],E,E,3,[[[T]],[R[24]]]],[11,R[65],E,E,3,[[[T]],[R[24]]]],[11,R[66],E,E,3,[[[T]],[R[24]]]],[11,R[67],E,E,3,[[[T]],[R[24]]]],[11,R[68],E,E,3,[[[T]],[R[24]]]],[11,R[69],E,E,3,[[[T]],[R[24]]]],[11,R[70],E,E,3,[[[T]],[R[24]]]],[11,"like",E,E,3,[[[T]],[R[24]]]],[11,R[71],E,E,3,[[[T]],[R[24]]]],[11,R[72],E,E,3,[[[T]],[R[24]]]],[11,R[73],E,E,3,[[[T]],[R[24]]]],[11,R[74],E,E,3,[[[T]],[R[24]]]],[11,R[75],E,E,3,[[[T]],[R[24]]]],[11,R[76],E,E,3,[[],[R[24]]]],[11,R[77],E,E,3,[[],[R[24]]]],[11,R[79],E,E,3,[[[T],["v"]],[R[24]]]],[11,R[78],E,E,3,[[[T],["v"]],[R[24]]]],[11,"equals",E,E,15,[[[T]],[R[24]]]],[11,R[64],E,E,15,[[[T]],[R[24]]]],[11,R[65],E,E,15,[[[T]],[R[24]]]],[11,R[66],E,E,15,[[[T]],[R[24]]]],[11,R[67],E,E,15,[[[T]],[R[24]]]],[11,R[68],E,E,15,[[[T]],[R[24]]]],[11,R[69],E,E,15,[[[T]],[R[24]]]],[11,R[70],E,E,15,[[[T]],[R[24]]]],[11,"like",E,E,15,[[[T]],[R[24]]]],[11,R[71],E,E,15,[[[T]],[R[24]]]],[11,R[72],E,E,15,[[[T]],[R[24]]]],[11,R[73],E,E,15,[[[T]],[R[24]]]],[11,R[74],E,E,15,[[[T]],[R[24]]]],[11,R[75],E,E,15,[[[T]],[R[24]]]],[11,R[76],E,E,15,[[],[R[24]]]],[11,R[77],E,E,15,[[],[R[24]]]],[11,R[79],E,E,15,[[[T],["v"]],[R[24]]]],[11,R[78],E,E,15,[[[T],["v"]],[R[24]]]],[11,"group",E,E,0,[[],[R[11]]]],[11,R[80],E,E,0,[[],[R[11]]]],[11,R[80],R[0],E,69,[[],[R[11]]]],[11,"order",R[49],E,0,[[["order"],[R[22],["order"]]],[R[13]]]],[11,R[81],E,E,0,[[],[R[13]]]],[11,R[81],R[0],E,70,[[],[R[13]]]],[11,"alias",R[49],E,4,[[[T]],["table"]]],[11,R[88],R[59],E,41,[[["query"],["self"]],[["dbio",[R[22]]],[R[22],["id"]]]]],[11,"query",E,E,41,[[["query"],["self"]],[["dbio",[R[37]]],[R[37]]]]],[11,R[82],E,E,41,[[["str"],["self"]],[["dbio",[R[37]]],[R[37]]]]],[11,R[83],E,E,41,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,R[84],E,E,41,[[["self"]],["dbio"]]],[11,R[85],E,E,41,[[["self"]],["dbio"]]],[11,R[86],E,E,41,[[["vec",["table"]],["table"],["self"]],["dbio"]]],[11,R[87],E,E,41,[[["self"]],[["dbio",[R[39]]],[R[39]]]]],[11,R[89],E,E,41,[[["str"],["self"]],["dbio"]]],[11,R[88],E,E,44,[[["self"],["query"]],[["dbio",[R[22]]],[R[22],["id"]]]]],[11,"query",E,E,44,[[["self"],["query"]],[["dbio",[R[37]]],[R[37]]]]],[11,R[82],E,E,44,[[["self"],["str"]],[["dbio",[R[37]]],[R[37]]]]],[11,R[83],E,E,44,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,R[84],E,E,44,[[["self"]],["dbio"]]],[11,R[85],E,E,44,[[["self"]],["dbio"]]],[11,R[87],E,E,44,[[["self"]],[["dbio",[R[39]]],[R[39]]]]],[11,R[89],E,E,44,[[["self"],["str"]],["dbio"]]],[11,R[88],E,E,46,[[["self"],["query"]],[["dbio",[R[22]]],[R[22],["id"]]]]],[11,"query",E,E,46,[[["self"],["query"]],[["dbio",[R[37]]],[R[37]]]]],[11,R[82],E,E,46,[[["self"],["str"]],[["dbio",[R[37]]],[R[37]]]]],[11,R[83],E,E,46,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,R[84],E,E,46,[[["self"]],["dbio"]]],[11,R[85],E,E,46,[[["self"]],["dbio"]]],[11,R[87],E,E,46,[[["self"]],[["dbio",[R[39]]],[R[39]]]]],[11,R[89],E,E,46,[[["self"],["str"]],["dbio"]]],[11,R[88],E,E,47,[[["self"],["query"]],[["dbio",[R[22]]],[R[22],["id"]]]]],[11,"query",E,E,47,[[["self"],["query"]],[["dbio",[R[37]]],[R[37]]]]],[11,R[82],E,E,47,[[["self"],["str"]],[["dbio",[R[37]]],[R[37]]]]],[11,R[83],E,E,47,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,R[84],E,E,47,[[["self"]],["dbio"]]],[11,R[85],E,E,47,[[["self"]],["dbio"]]],[11,R[87],E,E,47,[[["self"]],[["dbio",[R[39]]],[R[39]]]]],[11,R[89],E,E,47,[[["self"],["str"]],["dbio"]]],[11,"build",R[63],E,66,[[["q"]]]],[11,"write",E,E,66,[[["self"],[R[95]]],[R[36]]]],[11,R[90],E,E,66,[[["self"],[R[96]]],[R[36]]]],[11,R[91],E,E,66,[[["self"]],[R[36]]]],[11,R[92],E,E,66,[[["self"],[R[27]]]]],[11,R[93],E,E,66,[[["self"],[R[22],[R[27]]],[R[27]]],[R[36]]]],[11,R[94],E,E,66,[[["self"],[R[20]]],[R[36]]]],[11,"build",E,E,67,[[["q"]]]],[11,"write",E,E,67,[[["self"],[R[95]]],[R[36]]]],[11,R[92],E,E,67,[[["self"],[R[27]]]]],[11,R[91],E,E,67,[[["self"]],[R[36]]]],[11,R[93],E,E,67,[[["self"],[R[22],[R[27]]],[R[27]]],[R[36]]]],[11,R[90],E,E,67,[[["self"],[R[96]]],[R[36]]]],[11,R[94],E,E,67,[[["self"],[R[20]]],[R[36]]]],[11,"build",E,E,68,[[["q"]]]],[11,"write",E,E,68,[[["self"],[R[95]]],[R[36]]]],[11,R[90],E,E,68,[[["self"],[R[96]]],[R[36]]]],[11,R[91],E,E,68,[[["self"]],[R[36]]]],[11,R[92],E,E,68,[[["self"],[R[27]]]]],[11,R[93],E,E,68,[[["self"],[R[22],[R[27]]],[R[27]]],[R[36]]]],[11,R[94],E,E,68,[[["self"],[R[20]]],[R[36]]]],[11,R[97],R[49],E,0,[[],["column"]]],[11,R[97],E,E,7,[[],["self"]]],[11,R[97],E,E,18,[[],[R[98]]]],[11,R[97],E,E,1,[[],[R[99]]]],[11,R[97],E,E,2,[[],[R[103]]]],[11,R[97],E,E,23,[[],["over"]]],[11,R[97],E,E,3,[[],["row"]]],[11,R[97],E,E,24,[[],["select"]]],[11,R[97],E,E,5,[[],[R[104]]]],[11,"clone",E,E,0,[[["self"]],["column"]]],[11,"clone",E,E,6,[[["self"]],[R[24]]]],[11,"clone",E,E,7,[[["self"]],[R[10]]]],[11,"clone",E,E,17,[[["self"]],["delete"]]],[11,"clone",E,E,8,[[["self"]],[R[100]]]],[11,"clone",E,E,57,[[["self"]],[R[101]]]],[11,"clone",E,E,58,[[["self"]],["count"]]],[11,"clone",E,E,18,[[["self"]],[R[98]]]],[11,"clone",E,E,19,[[["self"]],[R[107]]]],[11,"clone",E,E,1,[[["self"]],[R[99]]]],[11,"clone",E,E,9,[[["self"]],["id"]]],[11,"clone",E,E,20,[[["self"]],[R[96]]]],[11,"clone",E,E,10,[[["self"]],[R[102]]]],[11,"clone",E,E,59,[[["self"]],[R[47]]]],[11,"clone",E,E,11,[[["self"]],["join"]]],[11,"clone",E,E,2,[[["self"]],[R[103]]]],[11,"clone",E,E,12,[[["self"]],["order"]]],[11,"clone",E,E,23,[[["self"]],["over"]]],[11,"clone",E,E,13,[[["self"]],["query"]]],[11,"clone",E,E,3,[[["self"]],["row"]]],[11,"clone",E,E,24,[[["self"]],["select"]]],[11,"clone",E,E,14,[[["self"]],[R[108]]]],[11,"clone",E,E,4,[[["self"]],["table"]]],[11,"clone",E,E,5,[[["self"]],[R[104]]]],[11,"clone",E,E,25,[[["self"]],["update"]]],[11,"clone",E,E,16,[[["self"]],[R[27]]]],[11,"clone",E,E,15,[[["self"]],[R[20]]]],[11,"clone",R[59],E,43,[[["self"]],["mysqlurl"]]],[11,"clone",E,E,60,[[["self"]],[R[105]]]],[11,"clone",E,E,37,[[["self"]],[R[109]]]],[11,"clone",E,E,61,[[["self"]],[R[34]]]],[11,"clone",E,E,45,[[["self"]],["postgresurl"]]],[11,"clone",E,E,62,[[["self"]],[R[106]]]],[11,"eq",R[49],E,0,[[["self"],["column"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["column"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[24]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[24]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[10]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[10]]],["bool"]]],[11,"eq",E,E,17,[[["self"],["delete"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["delete"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[100]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[100]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[101]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[101]]],["bool"]]],[11,"eq",E,E,58,[[["self"],["count"]],["bool"]]],[11,"ne",E,E,58,[[["self"],["count"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[98]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[98]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[107]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[107]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[99]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[99]]],["bool"]]],[11,"eq",E,E,9,[[["self"],["id"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["id"]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[96]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[96]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[102]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[47]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[47]]],["bool"]]],[11,"eq",E,E,11,[[["self"],["join"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["join"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[103]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[103]]],["bool"]]],[11,"eq",E,E,12,[[["self"],["order"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["over"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["over"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["query"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["query"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["row"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["row"]],["bool"]]],[11,"eq",E,E,24,[[["self"],["select"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["select"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[108]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[108]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["table"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["table"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[104]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[104]]],["bool"]]],[11,"eq",E,E,25,[[["self"],["update"]],["bool"]]],[11,"ne",E,E,25,[[["self"],["update"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[27]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[27]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[20]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[20]]],["bool"]]],[11,"eq",R[59],E,37,[[["self"],[R[109]]],["bool"]]],[11,R[60],E,E,38,[[]]],[11,R[60],E,E,40,[[]]],[11,"from",R[49],E,15,[[["column"]],["self"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[[R[29]]],["self"]]],[11,"from",E,E,0,[[],["column"]]],[11,"from",E,E,7,[[[R[24]]],["self"]]],[11,"from",E,E,8,[[[R[24]]],["self"]]],[11,"from",E,E,8,[[[R[10]]],["self"]]],[11,"from",E,E,7,[[["select"]],["self"]]],[11,"from",E,E,13,[[["delete"]],["self"]]],[11,"from",E,E,8,[[["select"]],[R[100]]]],[11,"from",E,E,19,[[[R[98]]],["self"]]],[11,"from",E,E,15,[[[R[98]]],["self"]]],[11,"from",E,E,19,[[["count"]],["self"]]],[11,"from",E,E,15,[[["count"]],["self"]]],[11,"from",E,E,19,[[[R[101]]],["self"]]],[11,"from",E,E,15,[[[R[101]]],["self"]]],[11,"from",E,E,9,[[["usize"]],["self"]]],[11,"from",E,E,9,[[["u64"]],["self"]]],[11,"from",E,E,9,[[[R[29]]],["self"]]],[11,"from",E,E,9,[[["uuid"]],["self"]]],[11,"from",E,E,13,[[[R[96]]],["self"]]],[11,"from",E,E,20,[[[R[12]]],["self"]]],[11,"from",E,E,20,[[[R[110]]],["self"]]],[11,"from",E,E,13,[[[R[12]]],["query"]]],[11,"from",E,E,13,[[[R[110]]],["query"]]],[11,"from",E,E,13,[[[T]],["self"]]],[11,"from",E,E,3,[[["vec"]],["row"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,15,[[["select"]],[R[20]]]],[11,"from",E,E,13,[[["select"]],["query"]]],[11,"from",E,E,4,[[["str"]],["table"]]],[11,"from",E,E,4,[[],["table"]]],[11,"from",E,E,4,[[[R[29]]],["self"]]],[11,"from",E,E,4,[[],["table"]]],[11,"from",E,E,4,[[["select"]],["self"]]],[11,"from",E,E,5,[[["select"]],["self"]]],[11,"from",E,E,13,[[[R[104]]],["self"]]],[11,"from",E,E,13,[[["update"]],["self"]]],[11,"from",E,E,16,[[["str"]],["self"]]],[11,"from",E,E,16,[[[R[29]]],["self"]]],[11,"from",E,E,16,[[["usize"]],["self"]]],[11,"from",E,E,16,[[["i32"]],["self"]]],[11,"from",E,E,16,[[["i64"]],["self"]]],[11,"from",E,E,16,[[["f64"]],["self"]]],[11,"from",E,E,16,[[["bool"]],["self"]]],[11,"from",E,E,16,[[["value"]],["self"]]],[11,"from",E,E,16,[[["uuid"]],["self"]]],[11,"from",E,E,16,[[[R[23],["utc"]],["utc"]],["self"]]],[11,"from",E,E,15,[[["row"]],["self"]]],[11,"from",E,E,15,[[[R[107]]],["self"]]],[11,"from",E,E,15,[[[T]],["self"]]],[11,"from",E,E,15,[[["vec"]],["self"]]],[11,"from",R[40],E,51,[[["error"]],["error"]]],[11,"from",E,E,51,[[["fromutf8error"]],["error"]]],[11,"from",E,E,51,[[["error"]],["error"]]],[11,"from",E,E,51,[[["error"]],["error"]]],[11,"from",E,E,51,[[["error"]],["error"]]],[11,"from",E,E,51,[[["error"]],["error"]]],[11,"from",E,E,51,[[["fromsqlerror"]],["error"]]],[11,"from",E,E,51,[[["parseerror"]],["error"]]],[11,"from",E,E,51,[[["error"]],["error"]]],[11,"next",R[59],E,63,[[["self"]],[R[22]]]],[11,"hash",R[49],E,9,[[["self"],["__h"]]]],[11,"index",R[59],E,39,[[["self"],["i"]],[R[27]]]],[11,"index",E,E,38,[[["self"],["i"]],[R[27]]]],[11,"fmt",R[49],E,0,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,6,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,7,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,17,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,8,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,57,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,58,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,18,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,19,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,1,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,9,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,20,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,10,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,59,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,11,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,2,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,12,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,23,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,13,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,3,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,24,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,14,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,4,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,5,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,25,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,16,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,15,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",R[59],E,38,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,39,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,40,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,44,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,34,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,43,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,60,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,46,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,35,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,37,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,61,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,45,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",E,E,62,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",R[40],E,51,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",R[49],E,16,[[["self"],[R[111]]],[R[36]]]],[11,"fmt",R[40],E,51,[[["self"],[R[111]]],[R[36]]]],[11,R[52],R[59],E,34,[[["url"]],[R[36]]]],[11,R[52],E,E,35,[[["url"]],[R[36]]]],[11,R[52],E,E,36,[[["str"]],[R[36]]]],[11,R[52],E,E,47,[[["str"]],[R[36]]]],[11,"poll",E,E,42,[[["pin"],["self"],["context"]],["poll"]]],[11,"name",R[40],E,51,[[["self"]],[["str"],[R[22],["str"]]]]],[11,"cause",E,E,51,[[["self"]],[[R[22],["fail"]],["fail"]]]],[11,R[112],E,E,51,[[["self"]],[[R[22],[R[112]]],[R[112]]]]],[11,"to_sql",R[49],E,16,[[["self"],["type"],["bytesmut"]],[["box",["error"]],["isnull"],[R[36],["isnull","box"]]]]],[11,"accepts",E,E,16,[[["type"]],["bool"]]],[11,"to_sql_checked",E,E,16,[[["self"],["type"],["bytesmut"]],[["box",["error"]],["isnull"],[R[36],["isnull","box"]]]]],[11,"from_sql",E,E,9,[[[R[113]]],[[R[36],["id","box"]],["id"],["box",["error"]]]]],[11,"accepts",E,E,9,[[[R[113]]],["bool"]]],[11,"to_sql",E,E,16,[[["self"]],[[R[114]],[R[36],[R[114],R[115]]],[R[115]]]]],[11,"create",R[62],E,53,[[["self"]]]],[11,"status",E,E,53,[[["self"]],["status"]]],[11,"recycle",E,E,53,[[["self"]]]],[11,"create",E,E,54,[[["self"]]]],[11,"status",E,E,54,[[["self"]],["status"]]],[11,"recycle",E,E,54,[[["self"]]]],[11,"create",E,E,55,[[["self"]]]],[11,"status",E,E,55,[[["self"]],["status"]]],[11,"recycle",E,E,55,[[["self"]]]],[11,"ascend",R[49],R[116],32,[[],[R[13]]]],[11,"descend",E,R[117],32,[[],[R[13]]]],[11,R[86],R[59],R[118],50,[[["vec",["table"]],["self"],["table"]],["dbio"]]],[11,R[96],E,R[119],50,[[["self"],[R[96]]],[["dbio",[R[22]]],[R[22],["id"]]]]],[11,"update",E,R[120],50,[[["self"],["update"]],["dbio"]]],[11,"delete",E,R[121],50,[[["self"],["delete"]],["dbio"]]],[11,"lend",R[62],"Lends the resource to an opaque asynchronous computation.",64,[[["b"]]]],[11,"check_out",E,E,65,[[["self"]]]],[11,"capacity",E,E,65,[[["self"]],["usize"]]],[11,"recycle_interval",E,E,65,[[["self"]],["duration"]]]],"p":[[3,R[8]],[3,"Grouping"],[3,"Ordering"],[3,"Row"],[3,"Table"],[3,R[7]],[4,R[2]],[4,R[1]],[4,R[122]],[4,"Id"],[4,R[123]],[4,"Join"],[4,"Order"],[4,"Query"],[4,R[124]],[4,R[125]],[4,R[126]],[3,R[6]],[3,R[127]],[3,R[9]],[3,R[4]],[3,R[128]],[3,R[129]],[3,"Over"],[3,R[3]],[3,R[5]],[8,R[130]],[8,R[131]],[8,R[132]],[8,R[133]],[8,"Joinable"],[8,R[134]],[8,R[135]],[8,R[136]],[3,R[137]],[3,R[138]],[3,R[139]],[4,R[140]],[3,R[141]],[3,R[142]],[3,R[143]],[3,R[144]],[3,"DBIO"],[3,"MysqlUrl"],[3,"Mysql"],[3,R[145]],[3,R[146]],[3,"Sqlite"],[8,"ToRow"],[8,R[147]],[8,R[148]],[4,"Error"],[8,"Manage"],[3,R[149]],[3,R[150]],[3,R[151]],[8,"Visitor"],[3,R[152]],[3,"Count"],[3,"JoinData"],[3,R[153]],[3,R[154]],[3,R[155]],[3,R[156]],[3,R[44]],[3,"Pool"],[3,"Sqlite"],[3,"Postgres"],[3,"Mysql"],[6,R[157]],[6,R[158]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);