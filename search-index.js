var N=null,E="",T="t",U="u",searchIndex={};
var R=["quaint","ConditionTree","Compare","Select","Insert","Update","Delete","UnionAll","Column","Function","conditiontree","groupbydefinition","singlerowinsert","Convert into a common `Insert` statement.","orderdefinition","is_empty","from_table","Adds an additional `WHERE` condition to the query…","order_by","database","asterisk","databasevalue","so_that","Adds `WHERE` conditions to the query. See Comparable for…","option","datetime","compare","Wraps a connection url and exposes the parsing logic used…","file_path","quaint::connector","Postgres","parameterizedvalue","Take a value from a certain position in the row, if having…","string","resultrowref","The bare `Url` to the database.","username","The percent-decoded database username.","password","The percent-decoded database password.","result","resultset","Executes a query given as SQL, interpolating the given…","transaction","db_name","quaint::error","quaint::error::Error","field_name","ResultRow","An owned version of a `Row` in a `ResultSet`. See…","ResultSet","Encapsulates a set of results and their respective column…","Transaction","A representation of an SQL database transaction. If not…","The main unit of asynchronous IO. For now just a shell for…","ConnectionInfo","General information about a SQL connection.","A PostgreSQL connection URL.","A MySQL connection URL.","A SQLite connection URL.","The filesystem path of the SQLite database.","The name the database is bound to (with `ATTACH…","SqlFamily","quaint::prelude","One of the supported SQL variants.","Sqlite","Queryable","Represents a connection or a transaction that can be…","Executes the given query and returns the ID of the last…","Executes the given query and returns the result set.","query_raw","execute_raw","turn_off_fk_constraints","Turns off all foreign key constraints.","turn_on_fk_constraints","Turns on all foreign key constraints.","Runs a command in the database, for queries that can't be…","empty_tables","Empties the given set of tables.","select","insert","For inserting data. Returns the ID of the last inserted row.","For updating data.","update","For deleting data.","TransactionCapable","A thing that can start a new transaction.","start_transaction","Starts a new transaction","connection_info","Info about the connection and underlying database.","connectioninfo","What to use to substitute a parameter in the query.","joindata","delete","A comparison expression","quaint::ast","to_owned","clone_into","try_from","borrow_mut","try_into","type_id","to_string","into_iter","quaint::pooled","quaint::single","quaint::visitor","not_equals","less_than","less_than_or_equals","greater_than","greater_than_or_equals","in_selection","not_in_selection","begins_with","not_begins_with","ends_into","not_ends_into","is_not_null","not_between","not_like","into_group_by_definition","into_order_definition","execute","raw_cmd","visit_insert","parameter_substitution","add_parameter","visit_limit_and_offset","visit_aggregate_to_string","rownumber","default","expression","aggregatetostring","grouping","onconflict","ordering","unionall","postgresurl","sqlfamily","function","tabletype","sslacceptmode","multirowinsert","formatter","backtrace","postgrestype","tosqloutput","rusqlerror","Change the order to `ASC`","Change the order to `DESC`","Expression","OnConflict","TableType","DatabaseValue","ParameterizedValue","RowNumber","SingleRowInsert","MultiRowInsert","Comparable","Conjuctive","Groupable","IntoGroupByDefinition","IntoOrderDefinition","Orderable","Aliasable","SqliteParams","SslAcceptMode","ResultRowRef","PostgresUrl","PostgreSql","ToColumnNames","AggregateToString","SslParams","ResultSetIterator","PooledConnection","GroupByDefinition","OrderDefinition"];

searchIndex["quaint"]={"doc":R[0],"i":[[0,"ast",R[0],"An abstract syntax tree for SQL queries.",N,N],[3,R[8],R[96],"A column definition.",N,N],[12,"name",E,E,0,N],[3,R[6],E,"A builder for a `DELETE` statement.",N,N],[3,R[173],E,E,N,N],[3,"Count",E,E,N,N],[3,R[157],E,E,N,N],[3,R[9],E,"A database function definition",N,N],[3,"Grouping",E,"A list of definitions for the `GROUP BY` statement",N,N],[12,"0",E,E,1,N],[3,R[4],E,"A builder for an `INSERT` statement.",N,N],[3,R[158],E,E,N,N],[3,R[159],E,E,N,N],[3,"JoinData",E,"The `JOIN` table and conditions.",N,N],[3,"Ordering",E,"A list of definitions for the `ORDER BY` statement",N,N],[12,"0",E,E,2,N],[3,"Over",E,E,N,N],[3,"Row",E,"A collection of values surrounded by parentheses.",N,N],[12,"values",E,E,3,N],[3,R[3],E,"A builder for a `SELECT` statement.",N,N],[3,"Table",E,"A table definition",N,N],[12,"typ",E,E,4,N],[12,"alias",E,E,4,N],[12,R[19],E,E,4,N],[3,R[7],E,"A builder for a `UNION ALL` over multiple `SELECT`…",N,N],[12,"0",E,E,5,N],[3,R[5],E,"A builder for an `UPDATE` statement.",N,N],[4,R[2],E,"For modeling comparison expression",N,N],[13,"Equals",E,"`left = right`",6,N],[13,"NotEquals",E,"`left <> right`",6,N],[13,"LessThan",E,"`left < right`",6,N],[13,"LessThanOrEquals",E,"`left <= right`",6,N],[13,"GreaterThan",E,"`left > right`",6,N],[13,"GreaterThanOrEquals",E,"`left >= right`",6,N],[13,"In",E,"`left IN (..)`",6,N],[13,"NotIn",E,"`left NOT IN (..)`",6,N],[13,"Like",E,"`left LIKE %..%`",6,N],[13,"NotLike",E,"`left NOT LIKE %..%`",6,N],[13,"BeginsWith",E,"`left LIKE ..%`",6,N],[13,"NotBeginsWith",E,"`left NOT LIKE ..%`",6,N],[13,"EndsInto",E,"`left LIKE %..`",6,N],[13,"NotEndsInto",E,"`left NOT LIKE %..`",6,N],[13,"Null",E,"`value IS NULL`",6,N],[13,"NotNull",E,"`value IS NOT NULL`",6,N],[13,"Between",E,"`value` BETWEEN `left` AND `right`",6,N],[13,"NotBetween",E,"`value` NOT BETWEEN `left` AND `right`",6,N],[4,R[1],E,"Tree structures and leaves for condition building.",N,N],[13,"And",E,"`(left_expression AND right_expression)`",7,N],[13,"Or",E,"`(left_expression OR right_expression)`",7,N],[13,"Not",E,"`(NOT expression)`",7,N],[13,"Single",E,"A single expression leaf",7,N],[13,"NoCondition",E,"A leaf that does nothing to the condition, `1=1`",7,N],[13,"NegativeCondition",E,"A leaf that cancels the condition, `1=0`",7,N],[4,R[152],E,"A database expression.",N,N],[13,R[1],E,"A tree of expressions to evaluate from the deepest value…",8,N],[13,R[2],E,R[95],8,N],[13,"Value",E,"A single value, column, row or a nested select",8,N],[4,"Id",E,E,N,N],[13,"String",E,E,9,N],[13,"Int",E,E,9,N],[13,"UUID",E,E,9,N],[4,R[153],E,"`INSERT` conflict resolution strategies.",N,N],[13,"DoNothing",E,"When a row already exists, do nothing.",10,N],[4,"Join",E,"A representation of a `JOIN` statement.",N,N],[13,"Inner",E,"Implements an `INNER JOIN` with given `JoinData`.",11,N],[13,"LeftOuter",E,"Implements an `LEFT OUTER JOIN` with given `JoinData`.",11,N],[4,"Order",E,"The ordering direction",N,N],[13,"Asc",E,"Ascending",12,N],[13,"Desc",E,"Descending",12,N],[4,"Query",E,"A database query",N,N],[13,R[3],E,"Query for fetching data. E.g. the `SELECT` query.",13,N],[13,R[4],E,E,13,N],[13,R[5],E,E,13,N],[13,R[6],E,E,13,N],[13,R[7],E,E,13,N],[13,"Raw",E,E,13,N],[4,R[154],E,E,N,N],[13,"Table",E,E,14,N],[13,"Query",E,E,14,N],[4,R[155],E,"A value we can compare and use in database queries.",N,N],[13,"Parameterized",E,"Anything that we must parameterize before querying",15,N],[13,R[8],E,"A database column",15,N],[13,"Row",E,"Data in a row form, e.g. (1, 2, 3)",15,N],[13,R[3],E,"A nested `SELECT` statement",15,N],[13,R[9],E,"A database function call",15,N],[13,"Asterisk",E,"A qualified asterisk to a table",15,N],[4,R[156],E,"A value we must parameterize for the prepared statement.",N,N],[13,"Null",E,E,16,N],[13,"Integer",E,E,16,N],[13,"Real",E,E,16,N],[13,"Text",E,E,16,N],[13,"Boolean",E,E,16,N],[13,"Char",E,E,16,N],[13,"Array",E,E,16,N],[13,"Json",E,E,16,N],[13,"Uuid",E,E,16,N],[13,"DateTime",E,E,16,N],[5,"aggregate_to_string",E,"Aggregates the given field into a string.",N,[[[T]],[R[134]]]],[5,"count",E,"Count of the underlying table where the given expression…",N,[[[T]],["count"]]],[5,"row_number",E,"A number from 1 to n in specified order",N,[[],[R[131]]]],[5,R[20],E,"A quick alias to create an asterisk to a table.",N,[[],[R[21]]]],[11,"new",E,"Create a column definition.",0,[[["s"]],["self"]]],[11,"table",E,"Include the table name in the column expression.",0,[[[T]],["self"]]],[11,"opt_table",E,"Include the table name in the column expression, if table…",0,[[[R[24]]],["self"]]],[11,"alias",E,"Give the column an alias in the query.",0,[[["s"]],["self"]]],[11,"and",E,"An `AND` statement, is true when both sides are true.",7,[[["j"],["e"]],[R[10]]]],[11,"or",E,"An `OR` statement, is true when one side is true.",7,[[["j"],["e"]],[R[10]]]],[11,"not",E,"A `NOT` statement, is true when the expression is false.",7,[[["e"]],[R[10]]]],[11,"single",E,"A single leaf, is true when the expression is true.",7,[[["e"]],[R[10]]]],[11,"invert_if",E,"Inverts the entire condition tree if condition is met.",7,[[["bool"]],[R[10]]]],[11,R[16],E,"Creates a new `DELETE` statement for the given table.",17,[[[T]],["self"]]],[11,R[22],E,R[23],17,[[[T]],["self"]]],[11,R[18],E,"Define the order of the row number. Is the row order if…",18,[[[T]],["self"]]],[11,"partition_by",E,"Define the partitioning of the row number",18,[[[T]],["self"]]],[11,"alias",E,"Give the function an alias in the query.",19,[[["s"]],["self"]]],[11,"new",E,E,1,[[[R[11]],["vec",[R[11]]]],["self"]]],[11,R[15],E,E,1,[[["self"]],["bool"]]],[11,"single_into",E,"Creates a new single row `INSERT` statement for the given…",20,[[[T]],[R[12]]]],[11,"multi_into",E,"Creates a new multi row `INSERT` statement for the given…",20,[[["vec"],[T]],[R[144]]]],[11,"on_conflict",E,"Sets the conflict resolution strategy.",20,[[[R[136]]],["self"]]],[11,"returning",E,"Sets the returned columns.",20,[[["vec"]],["self"]]],[11,"value",E,"Adds a new value to the `INSERT` statement",21,[[["k"],["v"]],[R[12]]]],[11,"build",E,R[13],21,[[],[R[80]]]],[11,"values",E,"Adds a new row to be inserted.",22,[[["v"]],["self"]]],[11,"build",E,R[13],22,[[],[R[80]]]],[11,"new",E,E,2,[[["vec",[R[14]]],[R[14]]],["self"]]],[11,R[15],E,E,2,[[["self"]],["bool"]]],[11,R[15],E,E,23,[[["self"]],["bool"]]],[11,"is_select",E,E,13,[[["self"]],["bool"]]],[11,"is_insert",E,E,13,[[["self"]],["bool"]]],[11,"is_update",E,E,13,[[["self"]],["bool"]]],[11,"is_delete",E,E,13,[[["self"]],["bool"]]],[11,"is_union_all",E,E,13,[[["self"]],["bool"]]],[11,"new",E,E,3,[[],["self"]]],[11,"push",E,E,3,[[[T]],["self"]]],[11,R[15],E,E,3,[[["self"]],["bool"]]],[11,R[16],E,"Creates a new `SELECT` statement for the given table.",24,[[[T]],["self"]]],[11,"value",E,"Selects a static value as the column.",24,[[[T]],["self"]]],[11,"column",E,"Adds a column to be selected.",24,[[[T]],["self"]]],[11,"columns",E,"A bulk method to select multiple values.",24,[[["vec"]],["self"]]],[11,R[22],E,"Adds `WHERE` conditions to the query, replacing the…",24,[[[T]],["self"]]],[11,"and_where",E,R[17],24,[[[T]],["self"]]],[11,"or_where",E,R[17],24,[[[T]],["self"]]],[11,"inner_join",E,"Adds `INNER JOIN` clause to the query.",24,[[["j"]],["self"]]],[11,"left_outer_join",E,"Adds `LEFT OUTER JOIN` clause to the query.",24,[[["j"]],["self"]]],[11,R[18],E,"Adds an ordering to the `ORDER BY` section.",24,[[[T]],["self"]]],[11,"group_by",E,"Adds a grouping to the `GROUP BY` section.",24,[[[T]],["self"]]],[11,"limit",E,"Sets the `LIMIT` value.",24,[[["usize"]],["self"]]],[11,"offset",E,"Sets the `OFFSET` value.",24,[[["usize"]],["self"]]],[11,R[19],E,"Define in which database the table is located",4,[[[T]],["self"]]],[11,R[20],E,"A qualified asterisk to this table",4,[[],[R[21]]]],[11,"union_all",E,"Creates a union with previous and given `SELECT` statement.",5,[[[R[79]]],["self"]]],[11,"table",E,"Creates the basis for an `UPDATE` statement to the given…",25,[[[T]],["self"]]],[11,"set",E,"Add another column value assignment to the query",25,[[["k"],["v"]],[R[83]]]],[11,R[22],E,R[23],25,[[[T]],["self"]]],[11,"is_null",E,"`true` if the `ParameterizedValue` is null.",16,[[["self"]],["bool"]]],[11,"is_text",E,"`true` if the `ParameterizedValue` is text.",16,[[["self"]],["bool"]]],[11,"as_str",E,"Returns a &str if the value is text, otherwise `None`.",16,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"as_char",E,"Returns a char if the value is a char, otherwise `None`.",16,[[["self"]],[[R[24],["char"]],["char"]]]],[11,R[103],E,"Returns a cloned String if the value is text, otherwise…",16,[[["self"]],[[R[33]],[R[24],[R[33]]]]]],[11,"into_string",E,"Transforms the `ParameterizedValue` to a `String` if it's…",16,[[],[[R[33]],[R[24],[R[33]]]]]],[11,"is_integer",E,"`true` if the `ParameterizedValue` is an integer.",16,[[["self"]],["bool"]]],[11,"as_i64",E,"Returns an i64 if the value is an integer, otherwise `None`.",16,[[["self"]],[["i64"],[R[24],["i64"]]]]],[11,"is_real",E,"`true` if the `ParameterizedValue` is a real value.",16,[[["self"]],["bool"]]],[11,"as_f64",E,"Returns a f64 if the value is a real value, otherwise…",16,[[["self"]],[[R[24],["f64"]],["f64"]]]],[11,"is_bool",E,"`true` if the `ParameterizedValue` is a boolean value.",16,[[["self"]],["bool"]]],[11,"as_bool",E,"Returns a bool if the value is a boolean, otherwise `None`.",16,[[["self"]],[[R[24],["bool"]],["bool"]]]],[11,"is_uuid",E,"`true` if the `ParameterizedValue` is of UUID type.",16,[[["self"]],["bool"]]],[11,"as_uuid",E,"Returns an UUID if the value is of UUID type, otherwise…",16,[[["self"]],[["uuid"],[R[24],["uuid"]]]]],[11,"is_datetime",E,"`true` if the `ParameterizedValue` is a DateTime.",16,[[["self"]],["bool"]]],[11,"as_datetime",E,"Returns a DateTime if the value is a DateTime, otherwise…",16,[[["self"]],[[R[25],["utc"]],[R[24],[R[25]]]]]],[11,"is_json",E,"`true` if the `ParameterizedValue` is a JSON value.",16,[[["self"]],["bool"]]],[11,"as_json",E,"Returns a reference to a JSON Value if of Json type,…",16,[[["self"]],[[R[24],["value"]],["value"]]]],[11,"into_json",E,"Transforms to a JSON Value if of Json type, otherwise…",16,[[],[[R[24],["value"]],["value"]]]],[11,"into_vec",E,"Returns a Vec if the value is an array of T, otherwise…",16,[[],[[R[24],["vec"]],["vec"]]]],[6,R[177],E,E,N,N],[6,R[178],E,E,N,N],[8,R[160],E,"An item that can be compared against other values in the…",N,N],[10,"equals",E,"Tests if both sides are the same value.",26,[[[T]],[R[26]]]],[10,R[108],E,"Tests if both sides are not the same value.",26,[[[T]],[R[26]]]],[10,R[109],E,"Tests if the left side is smaller than the right side.",26,[[[T]],[R[26]]]],[10,R[110],E,"Tests if the left side is smaller than the right side or…",26,[[[T]],[R[26]]]],[10,R[111],E,"Tests if the left side is bigger than the right side.",26,[[[T]],[R[26]]]],[10,R[112],E,"Tests if the left side is bigger than the right side or…",26,[[[T]],[R[26]]]],[10,R[113],E,"Tests if the left side is included in the right side…",26,[[[T]],[R[26]]]],[10,R[114],E,"Tests if the left side is not included in the right side…",26,[[[T]],[R[26]]]],[10,"like",E,"Tests if the left side includes the right side string.",26,[[[T]],[R[26]]]],[10,R[121],E,"Tests if the left side does not include the right side…",26,[[[T]],[R[26]]]],[10,R[115],E,"Tests if the left side starts with the right side string.",26,[[[T]],[R[26]]]],[10,R[116],E,"Tests if the left side doesn't start with the right side…",26,[[[T]],[R[26]]]],[10,R[117],E,"Tests if the left side ends into the right side string.",26,[[[T]],[R[26]]]],[10,R[118],E,"Tests if the left side does not end into the right side…",26,[[[T]],[R[26]]]],[10,"is_null",E,"Tests if the left side is `NULL`.",26,[[],[R[26]]]],[10,R[119],E,"Tests if the left side is not `NULL`.",26,[[],[R[26]]]],[10,"between",E,"Tests if the value is between two given values.",26,[[[T],["v"]],[R[26]]]],[10,R[120],E,"Tests if the value is not between two given values.",26,[[[T],["v"]],[R[26]]]],[8,R[161],E,"`AND`, `OR` and `NOT` conjuctive implementations.",N,N],[10,"and",E,"Builds an `AND` condition having `self` as the left leaf…",27,[[["e"]],[R[10]]]],[10,"or",E,"Builds an `OR` condition having `self` as the left leaf…",27,[[["e"]],[R[10]]]],[10,"not",E,"Builds a `NOT` condition having `self` as the condition.",27,[[],[R[10]]]],[8,R[162],E,"An item that can be used in the `GROUP BY` statement",N,N],[10,"group",E,"Group by `self`",28,[[],[R[11]]]],[8,R[163],E,"Convert the value into a group by definition.",N,N],[10,R[122],E,E,29,[[],[R[11]]]],[8,"Joinable",E,"An item that can be joined.",N,N],[10,"on",E,"Add the `JOIN` conditions.",30,[[[T]],[R[93]]]],[8,R[164],E,"Convert the value into an order definition with order item…",N,N],[10,R[123],E,E,31,[[],[R[14]]]],[8,R[165],E,"An item that can be used in the `ORDER BY` statement",N,N],[10,"order",E,"Order by `self` in the given order",32,[[[R[24],["order"]],["order"]],[R[14]]]],[11,"ascend",E,R[150],32,[[],[R[14]]]],[11,"descend",E,R[151],32,[[],[R[14]]]],[8,R[166],E,"An object that can be aliased.",N,N],[10,"alias",E,"Alias table for usage elsewhere in the query.",33,[[[T]],["table"]]],[0,"connector",R[0],"A set of abstractions for database connections.",N,N],[3,"Mysql",R[29],"A connector interface for the MySQL database.",N,N],[3,"MysqlUrl",E,R[27],N,N],[3,R[171],E,"A connector interface for the PostgreSQL database.",N,N],[3,R[174],E,E,N,N],[3,R[170],E,R[27],N,N],[3,R[65],E,"A connector interface for the SQLite database",N,N],[3,R[167],E,E,N,N],[12,"connection_limit",E,E,34,N],[12,R[28],E,"This is not a `PathBuf` because we need to `ATTACH` the…",34,N],[12,R[44],E,E,34,N],[3,R[48],E,R[49],N,N],[3,R[169],E,"A reference to a `Row` in a `ResultSet`. The columns can…",N,N],[3,R[50],E,R[51],N,N],[3,R[175],E,"Thin iterator for ResultSet rows. Might become lazy one day.",N,N],[3,"DBIO",E,R[54],N,N],[3,R[52],E,R[53],N,N],[4,R[168],E,E,N,N],[13,"Strict",E,E,35,N],[13,"AcceptInvalidCerts",E,E,35,N],[4,R[55],E,R[56],N,N],[13,R[30],E,R[57],36,N],[13,"Mysql",E,R[58],36,N],[13,R[65],E,R[59],36,N],[12,R[28],"quaint::connector::ConnectionInfo",R[60],36,N],[12,R[44],E,R[61],36,N],[4,R[62],R[29],R[64],N,N],[13,R[30],E,E,37,N],[13,"Mysql",E,E,37,N],[13,R[65],E,E,37,N],[11,"at",E,R[32],38,[[["self"],["usize"]],[[R[24],[R[31]]],[R[31]]]]],[11,"get",E,"Take a value with the given column name from the row.…",38,[[["self"],["str"]],[[R[24],[R[31]]],[R[31]]]]],[11,"as_ref",E,"Make a referring ResultRowRef.",38,[[["self"]],[R[34]]]],[11,"at",E,R[32],39,[[["self"],["usize"]],[[R[24],[R[31]]],[R[31]]]]],[11,"get",E,"Take a value with the given column name from the row.",39,[[["self"],["str"]],[[R[24],[R[31]]],[R[31]]]]],[11,"new",E,"Creates a new instance, bound to the given column names…",40,[[["vec",[R[33]]],[R[33]],["vec",[R[31]]],["vec",["vec"]]],[R[41]]]],[11,"columns",E,"An iterator of column names.",40,[[["self"]],[["keys",[R[33],"usize"]],[R[33]],["usize"]]]],[11,"len",E,"Returns the number of rows in the `ResultSet`.",40,[[["self"]],["usize"]]],[11,R[15],E,"Returns true if the `ResultSet` contains no rows.",40,[[["self"]],["bool"]]],[11,"first",E,"Returns the first row of the `ResultSet`, or None if the…",40,[[["self"]],[[R[34]],[R[24],[R[34]]]]]],[11,"get",E,"Returns a reference to a row in a given position.",40,[[["self"],["usize"]],[[R[34]],[R[24],[R[34]]]]]],[11,"commit",E,"Commit the changes to the database and consume the…",41,[[["self"]]]],[11,"rollback",E,"Rolls back the changes to the database.",41,[[["self"]]]],[11,"new",E,E,42,[[["f"]],["self"]]],[11,"new",E,"Parse `Url` to `MysqlUrl`. Returns error for mistyped…",43,[[["url"]],[[R[40],["error"]],["error"]]]],[11,"url",E,R[35],43,[[["self"]],["url"]]],[11,R[36],E,R[37],43,[[["self"]],[["str"],["cow",["str"]]]]],[11,R[38],E,R[39],43,[[["self"]],[["cow",["str"]],[R[24],["cow"]]]]],[11,"dbname",E,"Name of the database connected. Defaults to `mysql`.",43,[[["self"]],["str"]]],[11,"host",E,"The database host. If `socket` and `host` are not set,…",43,[[["self"]],["str"]]],[11,"socket",E,"If set, connected to the database through a Unix socket.",43,[[["self"]],[R[24]]]],[11,"port",E,"The database port, defaults to `3306`.",43,[[["self"]],["u16"]]],[11,"new",E,"Create a new MySQL connection using `OptsBuilder` from the…",44,[[["mysqlurl"]],[R[40]]]],[11,"new",E,"Parse `Url` to `PostgresUrl`. Returns error for mistyped…",45,[[["url"]],[[R[40],["error"]],["error"]]]],[11,"url",E,R[35],45,[[["self"]],["url"]]],[11,R[36],E,R[37],45,[[["self"]],[["str"],["cow",["str"]]]]],[11,"host",E,"The database host. Taken first from the `host` query…",45,[[["self"]],["str"]]],[11,"dbname",E,"Name of the database connected. Defaults to `postgres`.",45,[[["self"]],["str"]]],[11,R[38],E,R[39],45,[[["self"]],[["str"],["cow",["str"]]]]],[11,"port",E,"The database port, defaults to `5432`.",45,[[["self"]],["u16"]]],[11,"schema",E,"The database schema, defaults to `public`.",45,[[["self"]],["str"]]],[11,"new",E,"Create a new connection to the database.",46,[[[R[139]]]]],[11,"new",E,E,47,[[["str"]],[["sqlite"],[R[40],["sqlite"]]]]],[11,"attach_database",E,E,47,[[["self"],["str"]],[R[40]]]],[11,"from_url",E,E,36,[[["str"]],[R[40]]]],[11,"dbname",E,"The provided database name. This will be `None` on SQLite.",36,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"schema_name",E,"This is what item names are prefixed with in queries.",36,[[["self"]],["str"]]],[11,"host",E,"The provided database host. This will be `\"localhost\"` on…",36,[[["self"]],["str"]]],[11,R[36],E,"The provided database user name. This will be `None` on…",36,[[["self"]],[[R[24],["cow"]],["cow",["str"]]]]],[11,R[28],E,"The database file for SQLite, otherwise `None`.",36,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"sql_family",E,"The family of databases connected.",36,[[["self"]],[R[140]]]],[11,"port",E,"The provided database port, if applicable.",36,[[["self"]],[["u16"],[R[24],["u16"]]]]],[11,"database_location",E,"A string describing the database location, meant for error…",36,[[["self"]],[R[33]]]],[11,"as_str",E,"Get a string representation of the family.",37,[[["self"]],["str"]]],[11,"from_scheme",E,"Convert url scheme to an SqlFamily.",37,[[["str"]],[R[24]]]],[11,"scheme_is_supported",E,"Check if a family exists for the given scheme.",37,[[["str"]],["bool"]]],[8,"ValueIndex",E,E,N,N],[8,"GetRow",E,E,N,N],[10,"get_result_row",E,E,48,[[["self"]],[[R[40],["vec"]],["vec",[R[31]]]]]],[8,"TakeRow",E,E,N,N],[10,"take_result_row",E,E,49,[[["self"]],[[R[40],["vec"]],["vec",[R[31]]]]]],[8,R[172],E,E,N,N],[10,"to_column_names",E,E,50,[[["self"]],[["vec",[R[33]]],[R[33]]]]],[8,R[66],E,R[67],N,N],[10,R[124],E,R[68],51,[[["self"],["query"]],[["dbio",[R[24]]],[R[24],["id"]]]]],[10,"query",E,R[69],51,[[["self"],["query"]],[["dbio",[R[41]]],[R[41]]]]],[10,R[70],E,R[42],51,[[["self"],["str"]],[["dbio",[R[41]]],[R[41]]]]],[10,R[71],E,R[42],51,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[10,R[72],E,R[73],51,[[["self"]],["dbio"]]],[10,R[74],E,R[75],51,[[["self"]],["dbio"]]],[10,R[125],E,R[76],51,[[["self"],["str"]],["dbio"]]],[11,R[77],E,R[78],51,[[["self"],["table"],["vec",["table"]]],["dbio"]]],[11,R[79],E,E,51,[[["self"],[R[79]]],[["dbio",[R[41]]],[R[41]]]]],[11,R[80],E,R[81],51,[[["self"],[R[80]]],[["dbio",[R[24]]],[R[24],["id"]]]]],[11,R[83],E,R[82],51,[[["self"],[R[83]]],["dbio"]]],[11,R[94],E,R[84],51,[[["self"],[R[94]]],["dbio"]]],[8,R[85],E,R[86],N,N],[11,R[87],E,R[88],52,[[["self"]],[["dbio",[R[43]]],[R[43]]]]],[0,"error",R[0],E,N,N],[4,"Error",R[45],E,N,N],[13,"QueryError",E,E,53,N],[13,"DatabaseDoesNotExist",E,E,53,N],[12,R[44],R[46],E,53,N],[13,"DatabaseAccessDenied",R[45],E,53,N],[12,R[44],R[46],E,53,N],[13,"DatabaseAlreadyExists",R[45],E,53,N],[12,R[44],R[46],E,53,N],[13,"AuthenticationFailed",R[45],E,53,N],[12,"user",R[46],E,53,N],[13,"NotFound",R[45],E,53,N],[13,"UniqueConstraintViolation",E,E,53,N],[12,R[47],R[46],E,53,N],[13,"NullConstraintViolation",R[45],E,53,N],[12,R[47],R[46],E,53,N],[13,"ConnectionError",R[45],E,53,N],[13,"ColumnReadFailure",E,E,53,N],[13,"ResultIndexOutOfBounds",E,E,53,N],[13,"ColumnNotFound",E,E,53,N],[13,"ResultTypeMismatch",E,E,53,N],[13,"DatabaseUrlIsInvalid",E,E,53,N],[13,"ConversionError",E,E,53,N],[13,"InvalidConnectionArguments",E,E,53,N],[13,"IoError",E,E,53,N],[13,"ConnectTimeout",E,E,53,N],[13,"Timeout",E,E,53,N],[13,"TlsError",E,E,53,N],[12,"message",R[46],E,53,N],[0,"pooled",R[0],"A connection pool to a SQL database.",N,N],[3,R[176],R[105],"A connection from the pool. Implements Queryable.",N,N],[3,"Quaint",E,"The main entry point and an abstraction over database…",N,N],[12,"inner",E,E,54,N],[11,"new",E,"Create a new pool of connections to the database. The…",54,[[["str"]]]],[11,"capacity",E,"The number of connections in the pool.",54,[[["self"]]]],[11,"check_out",E,"Reserve a connection from the pool.",54,[[["self"]]]],[11,R[89],E,R[90],54,[[["self"]],[R[91]]]],[0,"prelude",R[0],E,N,N],[3,R[48],R[63],R[49],N,N],[3,R[50],E,R[51],N,N],[3,R[52],E,R[53],N,N],[3,"DBIO",E,R[54],N,N],[4,R[55],E,R[56],N,N],[13,R[30],E,R[57],36,N],[13,"Mysql",E,R[58],36,N],[13,R[65],E,R[59],36,N],[12,R[28],"quaint::prelude::ConnectionInfo",R[60],36,N],[12,R[44],E,R[61],36,N],[4,R[62],R[63],R[64],N,N],[13,R[30],E,E,37,N],[13,"Mysql",E,E,37,N],[13,R[65],E,E,37,N],[8,R[66],E,R[67],N,N],[10,R[124],E,R[68],51,[[["self"],["query"]],[["dbio",[R[24]]],[R[24],["id"]]]]],[10,"query",E,R[69],51,[[["self"],["query"]],[["dbio",[R[41]]],[R[41]]]]],[10,R[70],E,R[42],51,[[["self"],["str"]],[["dbio",[R[41]]],[R[41]]]]],[10,R[71],E,R[42],51,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[10,R[72],E,R[73],51,[[["self"]],["dbio"]]],[10,R[74],E,R[75],51,[[["self"]],["dbio"]]],[10,R[125],E,R[76],51,[[["self"],["str"]],["dbio"]]],[11,R[77],R[29],R[78],51,[[["self"],["table"],["vec",["table"]]],["dbio"]]],[11,R[79],E,E,51,[[["self"],[R[79]]],[["dbio",[R[41]]],[R[41]]]]],[11,R[80],E,R[81],51,[[["self"],[R[80]]],[["dbio",[R[24]]],[R[24],["id"]]]]],[11,R[83],E,R[82],51,[[["self"],[R[83]]],["dbio"]]],[11,R[94],E,R[84],51,[[["self"],[R[94]]],["dbio"]]],[8,R[85],R[63],R[86],N,N],[11,R[87],R[29],R[88],52,[[["self"]],[["dbio",[R[43]]],[R[43]]]]],[0,"single",R[0],"A single connection abstraction to a SQL database.",N,N],[3,"Quaint",R[106],"The main entry point and an abstraction over a database…",N,N],[12,"inner",E,E,55,N],[11,"new",E,"Create a new connection to the database. The connection…",55,[[["str"]]]],[11,R[89],E,R[90],55,[[["self"]],[R[91]]]],[0,"visitor",R[0],"Visitors for reading an abstract SQL syntax tree,…",N,N],[3,"Mysql",R[107],"A visitor to generate queries for the MySQL database.",N,N],[3,R[30],E,"A visitor to generate queries for the PostgreSQL database.",N,N],[3,R[65],E,"A visitor to generate queries for the SQLite database.",N,N],[8,"Visitor",E,"A function travelling through the query AST, building the…",N,N],[18,"C_BACKTICK",E,"Backtick character to surround identifiers, such as column…",56,N],[18,"C_WILDCARD",E,"Wildcard character to be used in `LIKE` queries.",56,N],[10,"build",E,"Convert the given `Query` to an SQL string and a vector of…",56,[[["q"]]]],[10,"write",E,"Write to the query.",56,[[["self"],["display"]],[R[40]]]],[11,"surround_with",E,E,56,[[["self"],["str"],["f"]],[R[40]]]],[10,R[128],E,"When called, the visitor decided to not render the…",56,[[["self"],[R[31]]]]],[10,R[129],E,"The `LIMIT` and `OFFSET` statement in the query",56,[[["self"],[R[31]],[R[24],[R[31]]]],[R[40]]]],[10,R[126],E,"A walk through an `INSERT` statement",56,[[["self"],[R[80]]],[R[40]]]],[10,R[127],E,R[92],56,[[["self"]],[R[40]]]],[10,R[130],E,R[92],56,[[["self"],[R[21]]],[R[40]]]],[11,"visit_parameterized",E,"A visit to a value we parameterize",56,[[["self"],[R[31]]],[R[40]]]],[11,"visit_joins",E,"The join statements in the query",56,[[["self"],["vec",["join"]],["join"]],[R[40]]]],[11,"visit_join_data",E,E,56,[[["self"],[R[93]]],[R[40]]]],[11,"visit_select",E,"A walk through a `SELECT` statement",56,[[["self"],[R[79]]],[R[40]]]],[11,"visit_update",E,"A walk through an `UPDATE` statement",56,[[["self"],[R[83]]],[R[40]]]],[11,"visit_delete",E,"A walk through an `DELETE` statement",56,[[["self"],[R[94]]],[R[40]]]],[11,"delimited_identifiers",E,"A helper for delimiting an identifier, surrounding every…",56,[[["self"]],[R[40]]]],[11,"visit_query",E,"A walk through a complete `Query` statement",56,[[["self"],["query"]]]],[11,"visit_union_all",E,"A walk through a union of `SELECT` statements",56,[[["self"],[R[138]]],[R[40]]]],[11,"visit_columns",E,"The selected columns",56,[[["self"],["vec",[R[21]]],[R[21]]],[R[40]]]],[11,"visit_database_value",E,"A visit to a value used in an expression",56,[[["self"],[R[21]]],[R[40]]]],[11,"visit_table",E,"A database table identifier",56,[[["self"],["table"],["bool"]],[R[40]]]],[11,"visit_column",E,"A database column identifier",56,[[["self"],["column"]],[R[40]]]],[11,"visit_row",E,"A row of data used as an expression",56,[[["self"],["row"]],[R[40]]]],[11,"visit_conditions",E,"A walk through the query conditions",56,[[["self"],[R[10]]],[R[40]]]],[11,"visit_expression",E,"An expression that can either be a single value, a set of…",56,[[["self"],[R[133]]],[R[40]]]],[11,"visit_compare",E,R[95],56,[[["self"],[R[26]]],[R[40]]]],[11,"visit_ordering",E,"A visit in the `ORDER BY` section of the query",56,[[["self"],[R[137]]],[R[40]]]],[11,"visit_grouping",E,"A visit in the `GROUP BY` section of the query",56,[[["self"],[R[135]]],[R[40]]]],[11,"visit_function",E,E,56,[[["self"],[R[141]]],[R[40]]]],[11,"visit_partitioning",E,E,56,[[["self"],["over"]],[R[40]]]],[6,"Result",R[0],E,N,N],[11,R[97],R[96],E,0,[[["self"]],[T]]],[11,R[98],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[99],E,E,0,[[[U]],[R[40]]]],[11,R[101],E,E,0,[[],[R[40]]]],[11,R[100],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[102],E,E,0,[[["self"]],["typeid"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[97],E,E,17,[[["self"]],[T]]],[11,R[98],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[99],E,E,17,[[[U]],[R[40]]]],[11,R[101],E,E,17,[[],[R[40]]]],[11,R[100],E,E,17,[[["self"]],[T]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[102],E,E,17,[[["self"]],["typeid"]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[97],E,E,57,[[["self"]],[T]]],[11,R[98],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[99],E,E,57,[[[U]],[R[40]]]],[11,R[101],E,E,57,[[],[R[40]]]],[11,R[100],E,E,57,[[["self"]],[T]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[102],E,E,57,[[["self"]],["typeid"]]],[11,"vzip",E,E,57,[[],["v"]]],[11,R[97],E,E,58,[[["self"]],[T]]],[11,R[98],E,E,58,[[["self"],[T]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[99],E,E,58,[[[U]],[R[40]]]],[11,R[101],E,E,58,[[],[R[40]]]],[11,R[100],E,E,58,[[["self"]],[T]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[102],E,E,58,[[["self"]],["typeid"]]],[11,"vzip",E,E,58,[[],["v"]]],[11,R[97],E,E,18,[[["self"]],[T]]],[11,R[98],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[99],E,E,18,[[[U]],[R[40]]]],[11,R[101],E,E,18,[[],[R[40]]]],[11,R[100],E,E,18,[[["self"]],[T]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[102],E,E,18,[[["self"]],["typeid"]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[97],E,E,19,[[["self"]],[T]]],[11,R[98],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[99],E,E,19,[[[U]],[R[40]]]],[11,R[101],E,E,19,[[],[R[40]]]],[11,R[100],E,E,19,[[["self"]],[T]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[102],E,E,19,[[["self"]],["typeid"]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[97],E,E,1,[[["self"]],[T]]],[11,R[98],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[99],E,E,1,[[[U]],[R[40]]]],[11,R[101],E,E,1,[[],[R[40]]]],[11,R[100],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[102],E,E,1,[[["self"]],["typeid"]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[97],E,E,20,[[["self"]],[T]]],[11,R[98],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[99],E,E,20,[[[U]],[R[40]]]],[11,R[101],E,E,20,[[],[R[40]]]],[11,R[100],E,E,20,[[["self"]],[T]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[102],E,E,20,[[["self"]],["typeid"]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[99],E,E,21,[[[U]],[R[40]]]],[11,R[101],E,E,21,[[],[R[40]]]],[11,R[100],E,E,21,[[["self"]],[T]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[102],E,E,21,[[["self"]],["typeid"]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[99],E,E,22,[[[U]],[R[40]]]],[11,R[101],E,E,22,[[],[R[40]]]],[11,R[100],E,E,22,[[["self"]],[T]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[102],E,E,22,[[["self"]],["typeid"]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[97],E,E,59,[[["self"]],[T]]],[11,R[98],E,E,59,[[["self"],[T]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[99],E,E,59,[[[U]],[R[40]]]],[11,R[101],E,E,59,[[],[R[40]]]],[11,R[100],E,E,59,[[["self"]],[T]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[102],E,E,59,[[["self"]],["typeid"]]],[11,"vzip",E,E,59,[[],["v"]]],[11,R[97],E,E,2,[[["self"]],[T]]],[11,R[98],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[99],E,E,2,[[[U]],[R[40]]]],[11,R[101],E,E,2,[[],[R[40]]]],[11,R[100],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[102],E,E,2,[[["self"]],["typeid"]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[97],E,E,23,[[["self"]],[T]]],[11,R[98],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[99],E,E,23,[[[U]],[R[40]]]],[11,R[101],E,E,23,[[],[R[40]]]],[11,R[100],E,E,23,[[["self"]],[T]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[102],E,E,23,[[["self"]],["typeid"]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[97],E,E,3,[[["self"]],[T]]],[11,R[98],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[99],E,E,3,[[[U]],[R[40]]]],[11,R[101],E,E,3,[[],[R[40]]]],[11,R[100],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[102],E,E,3,[[["self"]],["typeid"]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[97],E,E,24,[[["self"]],[T]]],[11,R[98],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[99],E,E,24,[[[U]],[R[40]]]],[11,R[101],E,E,24,[[],[R[40]]]],[11,R[100],E,E,24,[[["self"]],[T]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[102],E,E,24,[[["self"]],["typeid"]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[97],E,E,4,[[["self"]],[T]]],[11,R[98],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[99],E,E,4,[[[U]],[R[40]]]],[11,R[101],E,E,4,[[],[R[40]]]],[11,R[100],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[102],E,E,4,[[["self"]],["typeid"]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[97],E,E,5,[[["self"]],[T]]],[11,R[98],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[99],E,E,5,[[[U]],[R[40]]]],[11,R[101],E,E,5,[[],[R[40]]]],[11,R[100],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[102],E,E,5,[[["self"]],["typeid"]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[97],E,E,25,[[["self"]],[T]]],[11,R[98],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[99],E,E,25,[[[U]],[R[40]]]],[11,R[101],E,E,25,[[],[R[40]]]],[11,R[100],E,E,25,[[["self"]],[T]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[102],E,E,25,[[["self"]],["typeid"]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[97],E,E,6,[[["self"]],[T]]],[11,R[98],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[99],E,E,6,[[[U]],[R[40]]]],[11,R[101],E,E,6,[[],[R[40]]]],[11,R[100],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[102],E,E,6,[[["self"]],["typeid"]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[97],E,E,7,[[["self"]],[T]]],[11,R[98],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[99],E,E,7,[[[U]],[R[40]]]],[11,R[101],E,E,7,[[],[R[40]]]],[11,R[100],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[102],E,E,7,[[["self"]],["typeid"]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[97],E,E,8,[[["self"]],[T]]],[11,R[98],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[99],E,E,8,[[[U]],[R[40]]]],[11,R[101],E,E,8,[[],[R[40]]]],[11,R[100],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[102],E,E,8,[[["self"]],["typeid"]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[97],E,E,9,[[["self"]],[T]]],[11,R[98],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[99],E,E,9,[[[U]],[R[40]]]],[11,R[101],E,E,9,[[],[R[40]]]],[11,R[100],E,E,9,[[["self"]],[T]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[102],E,E,9,[[["self"]],["typeid"]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[97],E,E,10,[[["self"]],[T]]],[11,R[98],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[99],E,E,10,[[[U]],[R[40]]]],[11,R[101],E,E,10,[[],[R[40]]]],[11,R[100],E,E,10,[[["self"]],[T]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[102],E,E,10,[[["self"]],["typeid"]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[97],E,E,11,[[["self"]],[T]]],[11,R[98],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[99],E,E,11,[[[U]],[R[40]]]],[11,R[101],E,E,11,[[],[R[40]]]],[11,R[100],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[102],E,E,11,[[["self"]],["typeid"]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[97],E,E,12,[[["self"]],[T]]],[11,R[98],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[99],E,E,12,[[[U]],[R[40]]]],[11,R[101],E,E,12,[[],[R[40]]]],[11,R[100],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[102],E,E,12,[[["self"]],["typeid"]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[97],E,E,13,[[["self"]],[T]]],[11,R[98],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[99],E,E,13,[[[U]],[R[40]]]],[11,R[101],E,E,13,[[],[R[40]]]],[11,R[100],E,E,13,[[["self"]],[T]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[102],E,E,13,[[["self"]],["typeid"]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[97],E,E,14,[[["self"]],[T]]],[11,R[98],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[99],E,E,14,[[[U]],[R[40]]]],[11,R[101],E,E,14,[[],[R[40]]]],[11,R[100],E,E,14,[[["self"]],[T]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[102],E,E,14,[[["self"]],["typeid"]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[97],E,E,15,[[["self"]],[T]]],[11,R[98],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[99],E,E,15,[[[U]],[R[40]]]],[11,R[101],E,E,15,[[],[R[40]]]],[11,R[100],E,E,15,[[["self"]],[T]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[102],E,E,15,[[["self"]],["typeid"]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[97],E,E,16,[[["self"]],[T]]],[11,R[98],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[103],E,E,16,[[["self"]],[R[33]]]],[11,R[99],E,E,16,[[[U]],[R[40]]]],[11,R[101],E,E,16,[[],[R[40]]]],[11,R[100],E,E,16,[[["self"]],[T]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[102],E,E,16,[[["self"]],["typeid"]]],[11,"to_value",E,E,16,[[["self"]],["value"]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",R[29],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[99],E,E,44,[[[U]],[R[40]]]],[11,R[101],E,E,44,[[],[R[40]]]],[11,R[100],E,E,44,[[["self"]],[T]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[102],E,E,44,[[["self"]],["typeid"]]],[11,"vzip",E,E,44,[[],["v"]]],[11,R[97],E,E,43,[[["self"]],[T]]],[11,R[98],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[99],E,E,43,[[[U]],[R[40]]]],[11,R[101],E,E,43,[[],[R[40]]]],[11,R[100],E,E,43,[[["self"]],[T]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[102],E,E,43,[[["self"]],["typeid"]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[99],E,E,46,[[[U]],[R[40]]]],[11,R[101],E,E,46,[[],[R[40]]]],[11,R[100],E,E,46,[[["self"]],[T]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[102],E,E,46,[[["self"]],["typeid"]]],[11,"vzip",E,E,46,[[],["v"]]],[11,R[97],E,E,60,[[["self"]],[T]]],[11,R[98],E,E,60,[[["self"],[T]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[99],E,E,60,[[[U]],[R[40]]]],[11,R[101],E,E,60,[[],[R[40]]]],[11,R[100],E,E,60,[[["self"]],[T]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[102],E,E,60,[[["self"]],["typeid"]]],[11,"vzip",E,E,60,[[],["v"]]],[11,R[97],E,E,45,[[["self"]],[T]]],[11,R[98],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[99],E,E,45,[[[U]],[R[40]]]],[11,R[101],E,E,45,[[],[R[40]]]],[11,R[100],E,E,45,[[["self"]],[T]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[102],E,E,45,[[["self"]],["typeid"]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[99],E,E,47,[[[U]],[R[40]]]],[11,R[101],E,E,47,[[],[R[40]]]],[11,R[100],E,E,47,[[["self"]],[T]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[102],E,E,47,[[["self"]],["typeid"]]],[11,"vzip",E,E,47,[[],["v"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[99],E,E,34,[[[U]],[R[40]]]],[11,R[101],E,E,34,[[],[R[40]]]],[11,R[100],E,E,34,[[["self"]],[T]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[102],E,E,34,[[["self"]],["typeid"]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",E,E,38,[[],[U]]],[11,R[104],E,E,38,[[],["i"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[99],E,E,38,[[[U]],[R[40]]]],[11,R[101],E,E,38,[[],[R[40]]]],[11,R[100],E,E,38,[[["self"]],[T]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[102],E,E,38,[[["self"]],["typeid"]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[99],E,E,39,[[[U]],[R[40]]]],[11,R[101],E,E,39,[[],[R[40]]]],[11,R[100],E,E,39,[[["self"]],[T]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[102],E,E,39,[[["self"]],["typeid"]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",E,E,40,[[],[U]]],[11,R[104],E,E,40,[[],["i"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[99],E,E,40,[[[U]],[R[40]]]],[11,R[101],E,E,40,[[],[R[40]]]],[11,R[100],E,E,40,[[["self"]],[T]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[102],E,E,40,[[["self"]],["typeid"]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",E,E,61,[[],[U]]],[11,R[104],E,E,61,[[],["i"]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[99],E,E,61,[[[U]],[R[40]]]],[11,R[101],E,E,61,[[],[R[40]]]],[11,R[100],E,E,61,[[["self"]],[T]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[102],E,E,61,[[["self"]],["typeid"]]],[11,"vzip",E,E,61,[[],["v"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[99],E,E,42,[[[U]],[R[40]]]],[11,R[101],E,E,42,[[],[R[40]]]],[11,R[100],E,E,42,[[["self"]],[T]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[102],E,E,42,[[["self"]],["typeid"]]],[11,"try_poll",E,E,42,[[["f"],["context"],["pin"]],["poll"]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"try_poll",E,E,42,[[["f"],["context"],["pin"]],["poll"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[99],E,E,41,[[[U]],[R[40]]]],[11,R[101],E,E,41,[[],[R[40]]]],[11,R[100],E,E,41,[[["self"]],[T]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[102],E,E,41,[[["self"]],["typeid"]]],[11,"vzip",E,E,41,[[],["v"]]],[11,R[97],E,E,35,[[["self"]],[T]]],[11,R[98],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[99],E,E,35,[[[U]],[R[40]]]],[11,R[101],E,E,35,[[],[R[40]]]],[11,R[100],E,E,35,[[["self"]],[T]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[102],E,E,35,[[["self"]],["typeid"]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[97],E,E,36,[[["self"]],[T]]],[11,R[98],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[99],E,E,36,[[[U]],[R[40]]]],[11,R[101],E,E,36,[[],[R[40]]]],[11,R[100],E,E,36,[[["self"]],[T]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[102],E,E,36,[[["self"]],["typeid"]]],[11,"vzip",E,E,36,[[],["v"]]],[11,R[97],E,E,37,[[["self"]],[T]]],[11,R[98],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[103],E,E,37,[[["self"]],[R[33]]]],[11,R[99],E,E,37,[[[U]],[R[40]]]],[11,R[101],E,E,37,[[],[R[40]]]],[11,R[100],E,E,37,[[["self"]],[T]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[102],E,E,37,[[["self"]],["typeid"]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"into",R[45],E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[103],E,E,53,[[["self"]],[R[33]]]],[11,R[99],E,E,53,[[[U]],[R[40]]]],[11,R[101],E,E,53,[[],[R[40]]]],[11,R[100],E,E,53,[[["self"]],[T]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[102],E,E,53,[[["self"]],["typeid"]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"as_fail",E,E,53,[[["self"]],["fail"]]],[11,"into",R[105],E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[99],E,E,62,[[[U]],[R[40]]]],[11,R[101],E,E,62,[[],[R[40]]]],[11,R[100],E,E,62,[[["self"]],[T]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[102],E,E,62,[[["self"]],["typeid"]]],[11,"vzip",E,E,62,[[],["v"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[99],E,E,54,[[[U]],[R[40]]]],[11,R[101],E,E,54,[[],[R[40]]]],[11,R[100],E,E,54,[[["self"]],[T]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[102],E,E,54,[[["self"]],["typeid"]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"into",R[106],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[99],E,E,55,[[[U]],[R[40]]]],[11,R[101],E,E,55,[[],[R[40]]]],[11,R[100],E,E,55,[[["self"]],[T]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[102],E,E,55,[[["self"]],["typeid"]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"into",R[107],E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[99],E,E,63,[[[U]],[R[40]]]],[11,R[101],E,E,63,[[],[R[40]]]],[11,R[100],E,E,63,[[["self"]],[T]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[102],E,E,63,[[["self"]],["typeid"]]],[11,"vzip",E,E,63,[[],["v"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[99],E,E,64,[[[U]],[R[40]]]],[11,R[101],E,E,64,[[],[R[40]]]],[11,R[100],E,E,64,[[["self"]],[T]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[102],E,E,64,[[["self"]],["typeid"]]],[11,"vzip",E,E,64,[[],["v"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[99],E,E,65,[[[U]],[R[40]]]],[11,R[101],E,E,65,[[],[R[40]]]],[11,R[100],E,E,65,[[["self"]],[T]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[102],E,E,65,[[["self"]],["typeid"]]],[11,"vzip",E,E,65,[[],["v"]]],[11,"equals",R[96],E,3,[[[T]],[R[26]]]],[11,R[108],E,E,3,[[[T]],[R[26]]]],[11,R[109],E,E,3,[[[T]],[R[26]]]],[11,R[110],E,E,3,[[[T]],[R[26]]]],[11,R[111],E,E,3,[[[T]],[R[26]]]],[11,R[112],E,E,3,[[[T]],[R[26]]]],[11,R[113],E,E,3,[[[T]],[R[26]]]],[11,R[114],E,E,3,[[[T]],[R[26]]]],[11,"like",E,E,3,[[[T]],[R[26]]]],[11,R[121],E,E,3,[[[T]],[R[26]]]],[11,R[115],E,E,3,[[[T]],[R[26]]]],[11,R[116],E,E,3,[[[T]],[R[26]]]],[11,R[117],E,E,3,[[[T]],[R[26]]]],[11,R[118],E,E,3,[[[T]],[R[26]]]],[11,"is_null",E,E,3,[[],[R[26]]]],[11,R[119],E,E,3,[[],[R[26]]]],[11,"between",E,E,3,[[[T],["v"]],[R[26]]]],[11,R[120],E,E,3,[[[T],["v"]],[R[26]]]],[11,"equals",E,E,15,[[[T]],[R[26]]]],[11,R[108],E,E,15,[[[T]],[R[26]]]],[11,R[109],E,E,15,[[[T]],[R[26]]]],[11,R[110],E,E,15,[[[T]],[R[26]]]],[11,R[111],E,E,15,[[[T]],[R[26]]]],[11,R[112],E,E,15,[[[T]],[R[26]]]],[11,R[113],E,E,15,[[[T]],[R[26]]]],[11,R[114],E,E,15,[[[T]],[R[26]]]],[11,"like",E,E,15,[[[T]],[R[26]]]],[11,R[121],E,E,15,[[[T]],[R[26]]]],[11,R[115],E,E,15,[[[T]],[R[26]]]],[11,R[116],E,E,15,[[[T]],[R[26]]]],[11,R[117],E,E,15,[[[T]],[R[26]]]],[11,R[118],E,E,15,[[[T]],[R[26]]]],[11,"is_null",E,E,15,[[],[R[26]]]],[11,R[119],E,E,15,[[],[R[26]]]],[11,"between",E,E,15,[[[T],["v"]],[R[26]]]],[11,R[120],E,E,15,[[[T],["v"]],[R[26]]]],[11,"group",E,E,0,[[],[R[11]]]],[11,R[122],E,E,0,[[],[R[11]]]],[11,R[122],R[0],E,66,[[],[R[11]]]],[11,"order",R[96],E,0,[[[R[24],["order"]],["order"]],[R[14]]]],[11,R[123],E,E,0,[[],[R[14]]]],[11,R[123],R[0],E,67,[[],[R[14]]]],[11,"alias",R[96],E,4,[[[T]],["table"]]],[11,R[124],R[29],E,41,[[["query"],["self"]],[[R[24],["id"]],["dbio",[R[24]]]]]],[11,"query",E,E,41,[[["query"],["self"]],[["dbio",[R[41]]],[R[41]]]]],[11,R[70],E,E,41,[[["str"],["self"]],[["dbio",[R[41]]],[R[41]]]]],[11,R[71],E,E,41,[[["str"],["self"]],[["dbio",["u64"]],["u64"]]]],[11,R[72],E,E,41,[[["self"]],["dbio"]]],[11,R[74],E,E,41,[[["self"]],["dbio"]]],[11,R[77],E,E,41,[[["vec",["table"]],["table"],["self"]],["dbio"]]],[11,R[125],E,E,41,[[["str"],["self"]],["dbio"]]],[11,R[124],E,E,44,[[["self"],["query"]],[["dbio",[R[24]]],[R[24],["id"]]]]],[11,"query",E,E,44,[[["self"],["query"]],[["dbio",[R[41]]],[R[41]]]]],[11,R[70],E,E,44,[[["self"],["str"]],[["dbio",[R[41]]],[R[41]]]]],[11,R[71],E,E,44,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,R[72],E,E,44,[[["self"]],["dbio"]]],[11,R[74],E,E,44,[[["self"]],["dbio"]]],[11,R[125],E,E,44,[[["self"],["str"]],["dbio"]]],[11,R[124],E,E,46,[[["self"],["query"]],[["dbio",[R[24]]],[R[24],["id"]]]]],[11,"query",E,E,46,[[["self"],["query"]],[["dbio",[R[41]]],[R[41]]]]],[11,R[70],E,E,46,[[["self"],["str"]],[["dbio",[R[41]]],[R[41]]]]],[11,R[71],E,E,46,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,R[72],E,E,46,[[["self"]],["dbio"]]],[11,R[74],E,E,46,[[["self"]],["dbio"]]],[11,R[125],E,E,46,[[["self"],["str"]],["dbio"]]],[11,R[124],E,E,47,[[["self"],["query"]],[["dbio",[R[24]]],[R[24],["id"]]]]],[11,"query",E,E,47,[[["self"],["query"]],[["dbio",[R[41]]],[R[41]]]]],[11,R[70],E,E,47,[[["self"],["str"]],[["dbio",[R[41]]],[R[41]]]]],[11,R[71],E,E,47,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,R[72],E,E,47,[[["self"]],["dbio"]]],[11,R[74],E,E,47,[[["self"]],["dbio"]]],[11,R[125],E,E,47,[[["self"],["str"]],["dbio"]]],[11,R[124],R[105],E,62,[[["self"],["query"]],[["dbio",[R[24]]],[R[24],["id"]]]]],[11,"query",E,E,62,[[["self"],["query"]],[[R[41]],["dbio",[R[41]]]]]],[11,R[70],E,E,62,[[["self"],["str"]],[[R[41]],["dbio",[R[41]]]]]],[11,R[71],E,E,62,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,R[72],E,E,62,[[["self"]],["dbio"]]],[11,R[74],E,E,62,[[["self"]],["dbio"]]],[11,R[125],E,E,62,[[["self"],["str"]],["dbio"]]],[11,R[124],R[106],E,55,[[["self"],["query"]],[["dbio",[R[24]]],[R[24],["id"]]]]],[11,"query",E,E,55,[[["self"],["query"]],[[R[41]],["dbio",[R[41]]]]]],[11,R[70],E,E,55,[[["self"],["str"]],[[R[41]],["dbio",[R[41]]]]]],[11,R[71],E,E,55,[[["self"],["str"]],[["dbio",["u64"]],["u64"]]]],[11,R[72],E,E,55,[[["self"]],["dbio"]]],[11,R[74],E,E,55,[[["self"]],["dbio"]]],[11,R[125],E,E,55,[[["self"],["str"]],["dbio"]]],[11,"build",R[107],E,63,[[["q"]]]],[11,"write",E,E,63,[[["self"],["display"]],[R[40]]]],[11,R[126],E,E,63,[[["self"],[R[80]]],[R[40]]]],[11,R[127],E,E,63,[[["self"]],[R[40]]]],[11,R[128],E,E,63,[[["self"],[R[31]]]]],[11,R[129],E,E,63,[[["self"],[R[31]],[R[24],[R[31]]]],[R[40]]]],[11,R[130],E,E,63,[[["self"],[R[21]]],[R[40]]]],[11,"build",E,E,64,[[["q"]]]],[11,"write",E,E,64,[[["self"],["display"]],[R[40]]]],[11,R[128],E,E,64,[[["self"],[R[31]]]]],[11,R[127],E,E,64,[[["self"]],[R[40]]]],[11,R[129],E,E,64,[[["self"],[R[31]],[R[24],[R[31]]]],[R[40]]]],[11,R[126],E,E,64,[[["self"],[R[80]]],[R[40]]]],[11,R[130],E,E,64,[[["self"],[R[21]]],[R[40]]]],[11,"build",E,E,65,[[["q"]]]],[11,"write",E,E,65,[[["self"],["display"]],[R[40]]]],[11,R[126],E,E,65,[[["self"],[R[80]]],[R[40]]]],[11,R[127],E,E,65,[[["self"]],[R[40]]]],[11,R[128],E,E,65,[[["self"],[R[31]]]]],[11,R[129],E,E,65,[[["self"],[R[31]],[R[24],[R[31]]]],[R[40]]]],[11,R[130],E,E,65,[[["self"],[R[21]]],[R[40]]]],[11,R[132],R[96],E,0,[[],["column"]]],[11,R[132],E,E,7,[[],["self"]]],[11,R[132],E,E,18,[[],[R[131]]]],[11,R[132],E,E,1,[[],[R[135]]]],[11,R[132],E,E,2,[[],[R[137]]]],[11,R[132],E,E,23,[[],["over"]]],[11,R[132],E,E,3,[[],["row"]]],[11,R[132],E,E,24,[[],[R[79]]]],[11,R[132],E,E,5,[[],[R[138]]]],[11,"clone",E,E,0,[[["self"]],["column"]]],[11,"clone",E,E,6,[[["self"]],[R[26]]]],[11,"clone",E,E,7,[[["self"]],[R[10]]]],[11,"clone",E,E,17,[[["self"]],[R[94]]]],[11,"clone",E,E,8,[[["self"]],[R[133]]]],[11,"clone",E,E,57,[[["self"]],[R[134]]]],[11,"clone",E,E,58,[[["self"]],["count"]]],[11,"clone",E,E,18,[[["self"]],[R[131]]]],[11,"clone",E,E,19,[[["self"]],[R[141]]]],[11,"clone",E,E,1,[[["self"]],[R[135]]]],[11,"clone",E,E,9,[[["self"]],["id"]]],[11,"clone",E,E,20,[[["self"]],[R[80]]]],[11,"clone",E,E,10,[[["self"]],[R[136]]]],[11,"clone",E,E,59,[[["self"]],[R[93]]]],[11,"clone",E,E,11,[[["self"]],["join"]]],[11,"clone",E,E,2,[[["self"]],[R[137]]]],[11,"clone",E,E,12,[[["self"]],["order"]]],[11,"clone",E,E,23,[[["self"]],["over"]]],[11,"clone",E,E,13,[[["self"]],["query"]]],[11,"clone",E,E,3,[[["self"]],["row"]]],[11,"clone",E,E,24,[[["self"]],[R[79]]]],[11,"clone",E,E,14,[[["self"]],[R[142]]]],[11,"clone",E,E,4,[[["self"]],["table"]]],[11,"clone",E,E,5,[[["self"]],[R[138]]]],[11,"clone",E,E,25,[[["self"]],[R[83]]]],[11,"clone",E,E,16,[[["self"]],[R[31]]]],[11,"clone",E,E,15,[[["self"]],[R[21]]]],[11,"clone",R[29],E,43,[[["self"]],["mysqlurl"]]],[11,"clone",E,E,35,[[["self"]],[R[143]]]],[11,"clone",E,E,60,[[["self"]],["sslparams"]]],[11,"clone",E,E,45,[[["self"]],[R[139]]]],[11,"clone",E,E,36,[[["self"]],[R[91]]]],[11,"clone",E,E,37,[[["self"]],[R[140]]]],[11,"eq",R[96],E,0,[[["self"],["column"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["column"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[26]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[26]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[10]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[10]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[94]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[94]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[133]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[133]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[134]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[134]]],["bool"]]],[11,"eq",E,E,58,[[["self"],["count"]],["bool"]]],[11,"ne",E,E,58,[[["self"],["count"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[131]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[131]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[141]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[141]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[135]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[135]]],["bool"]]],[11,"eq",E,E,9,[[["self"],["id"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["id"]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[80]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[80]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[136]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[93]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[93]]],["bool"]]],[11,"eq",E,E,11,[[["self"],["join"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["join"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[137]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[137]]],["bool"]]],[11,"eq",E,E,12,[[["self"],["order"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["over"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["over"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["query"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["query"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["row"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["row"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[79]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[79]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[142]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[142]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["table"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["table"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[138]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[138]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[83]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[83]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[31]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[31]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[21]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[21]]],["bool"]]],[11,"eq",R[29],E,35,[[["self"],[R[143]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[140]]],["bool"]]],[11,R[104],E,E,38,[[]]],[11,R[104],E,E,40,[[]]],[11,"from",R[96],E,15,[[["column"]],["self"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[[R[33]]],["self"]]],[11,"from",E,E,0,[[],["column"]]],[11,"from",E,E,7,[[[R[26]]],["self"]]],[11,"from",E,E,8,[[[R[26]]],["self"]]],[11,"from",E,E,8,[[[R[10]]],["self"]]],[11,"from",E,E,7,[[[R[79]]],["self"]]],[11,"from",E,E,13,[[[R[94]]],["self"]]],[11,"from",E,E,8,[[[R[79]]],[R[133]]]],[11,"from",E,E,19,[[[R[131]]],["self"]]],[11,"from",E,E,15,[[[R[131]]],["self"]]],[11,"from",E,E,19,[[["count"]],["self"]]],[11,"from",E,E,15,[[["count"]],["self"]]],[11,"from",E,E,19,[[[R[134]]],["self"]]],[11,"from",E,E,15,[[[R[134]]],["self"]]],[11,"from",E,E,9,[[["usize"]],["self"]]],[11,"from",E,E,9,[[["u64"]],["self"]]],[11,"from",E,E,9,[[[R[33]]],["self"]]],[11,"from",E,E,9,[[["uuid"]],["self"]]],[11,"from",E,E,13,[[[R[80]]],["self"]]],[11,"from",E,E,20,[[[R[12]]],["self"]]],[11,"from",E,E,20,[[[R[144]]],["self"]]],[11,"from",E,E,13,[[[R[12]]],["query"]]],[11,"from",E,E,13,[[[R[144]]],["query"]]],[11,"from",E,E,13,[[[T]],["self"]]],[11,"from",E,E,3,[[["vec"]],["row"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,15,[[[R[79]]],[R[21]]]],[11,"from",E,E,13,[[[R[79]]],["query"]]],[11,"from",E,E,4,[[["str"]],["table"]]],[11,"from",E,E,4,[[],["table"]]],[11,"from",E,E,4,[[[R[33]]],["self"]]],[11,"from",E,E,4,[[],["table"]]],[11,"from",E,E,4,[[[R[79]]],["self"]]],[11,"from",E,E,5,[[[R[79]]],["self"]]],[11,"from",E,E,13,[[[R[138]]],["self"]]],[11,"from",E,E,13,[[[R[83]]],["self"]]],[11,"from",E,E,16,[[["str"]],["self"]]],[11,"from",E,E,16,[[[R[33]]],["self"]]],[11,"from",E,E,16,[[["usize"]],["self"]]],[11,"from",E,E,16,[[["i32"]],["self"]]],[11,"from",E,E,16,[[["i64"]],["self"]]],[11,"from",E,E,16,[[["f64"]],["self"]]],[11,"from",E,E,16,[[["bool"]],["self"]]],[11,"from",E,E,16,[[["value"]],["self"]]],[11,"from",E,E,16,[[["uuid"]],["self"]]],[11,"from",E,E,16,[[[R[25],["utc"]],["utc"]],["self"]]],[11,"from",E,E,15,[[["row"]],["self"]]],[11,"from",E,E,15,[[[R[141]]],["self"]]],[11,"from",E,E,15,[[[T]],["self"]]],[11,"from",E,E,15,[[["vec"]],["self"]]],[11,"from",R[45],E,53,[[["error"]],["error"]]],[11,"from",E,E,53,[[["error"]],["error"]]],[11,"from",E,E,53,[[["error"]],["error"]]],[11,"from",E,E,53,[[["error"]],["error"]]],[11,"from",E,E,53,[[["error"]],["error"]]],[11,"from",E,E,53,[[["fromsqlerror"]],["error"]]],[11,"from",E,E,53,[[["compat",["error"]],["error",["compat"]]],["self"]]],[11,"from",E,E,53,[[["parseerror"]],["error"]]],[11,"from",E,E,53,[[["error"]],["error"]]],[11,"from",E,E,53,[[["fromutf8error"]],["error"]]],[11,"next",R[29],E,61,[[["self"]],[R[24]]]],[11,"hash",R[96],E,9,[[["self"],["__h"]]]],[11,"index",R[29],E,39,[[["self"],["i"]],[R[31]]]],[11,"index",E,E,38,[[["self"],["i"]],[R[31]]]],[11,"fmt",R[96],E,0,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,6,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,7,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,17,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,8,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,57,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,58,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,18,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,19,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,1,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,9,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,20,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,10,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,59,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,11,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,2,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,12,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,23,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,13,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,3,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,24,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,14,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,4,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,5,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,25,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,16,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,15,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",R[29],E,38,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,39,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,40,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,44,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,43,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,46,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,35,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,60,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,45,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,36,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",E,E,37,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",R[45],E,53,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",R[96],E,16,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",R[29],E,37,[[["self"],[R[145]]],[R[40]]]],[11,"fmt",R[45],E,53,[[["self"],[R[145]]],[R[40]]]],[11,R[99],R[29],E,34,[[["str"]],[R[40]]]],[11,R[99],E,E,47,[[["str"]],[R[40]]]],[11,"poll",E,E,42,[[["pin"],["self"],["context"]],["poll"]]],[11,"name",R[45],E,53,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,53,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[146],E,E,53,[[["self"]],[[R[24],[R[146]]],[R[146]]]]],[11,"to_sql",R[96],E,16,[[["self"],[R[147]],["bytesmut"]],[["box",["error"]],[R[40],["isnull","box"]],["isnull"]]]],[11,"accepts",E,E,16,[[[R[147]]],["bool"]]],[11,"to_sql_checked",E,E,16,[[["self"],[R[147]],["bytesmut"]],[["box",["error"]],[R[40],["isnull","box"]],["isnull"]]]],[11,"from_sql",E,E,9,[[[R[147]]],[["box",["error"]],["id"],[R[40],["id","box"]]]]],[11,"accepts",E,E,9,[[[R[147]]],["bool"]]],[11,"to_sql",E,E,16,[[["self"]],[[R[148]],[R[40],[R[148],R[149]]],[R[149]]]]],[11,"ascend",E,R[150],32,[[],[R[14]]]],[11,"descend",E,R[151],32,[[],[R[14]]]],[11,R[77],R[29],R[78],51,[[["self"],["table"],["vec",["table"]]],["dbio"]]],[11,R[79],E,E,51,[[["self"],[R[79]]],[["dbio",[R[41]]],[R[41]]]]],[11,R[80],E,R[81],51,[[["self"],[R[80]]],[["dbio",[R[24]]],[R[24],["id"]]]]],[11,R[83],E,R[82],51,[[["self"],[R[83]]],["dbio"]]],[11,R[94],E,R[84],51,[[["self"],[R[94]]],["dbio"]]],[11,R[87],E,R[88],52,[[["self"]],[["dbio",[R[43]]],[R[43]]]]]],"p":[[3,R[8]],[3,"Grouping"],[3,"Ordering"],[3,"Row"],[3,"Table"],[3,R[7]],[4,R[2]],[4,R[1]],[4,R[152]],[4,"Id"],[4,R[153]],[4,"Join"],[4,"Order"],[4,"Query"],[4,R[154]],[4,R[155]],[4,R[156]],[3,R[6]],[3,R[157]],[3,R[9]],[3,R[4]],[3,R[158]],[3,R[159]],[3,"Over"],[3,R[3]],[3,R[5]],[8,R[160]],[8,R[161]],[8,R[162]],[8,R[163]],[8,"Joinable"],[8,R[164]],[8,R[165]],[8,R[166]],[3,R[167]],[4,R[168]],[4,R[55]],[4,R[62]],[3,R[48]],[3,R[169]],[3,R[50]],[3,R[52]],[3,"DBIO"],[3,"MysqlUrl"],[3,"Mysql"],[3,R[170]],[3,R[171]],[3,R[65]],[8,"GetRow"],[8,"TakeRow"],[8,R[172]],[8,R[66]],[8,R[85]],[4,"Error"],[3,"Quaint"],[3,"Quaint"],[8,"Visitor"],[3,R[173]],[3,"Count"],[3,"JoinData"],[3,R[174]],[3,R[175]],[3,R[176]],[3,"Mysql"],[3,R[30]],[3,R[65]],[6,R[177]],[6,R[178]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);